{"version":3,"file":"arc-unobtrusive-validation.js","mappings":"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","sources":["webpack://arcvalidation/webpack/universalModuleDefinition","webpack://arcvalidation/./node_modules/loglevel/lib/loglevel.js","webpack://arcvalidation/./node_modules/reflect-metadata/Reflect.js","webpack://arcvalidation/webpack/bootstrap","webpack://arcvalidation/webpack/runtime/define property getters","webpack://arcvalidation/webpack/runtime/global","webpack://arcvalidation/webpack/runtime/hasOwnProperty shorthand","webpack://arcvalidation/./node_modules/inversify/es/constants/literal_types.js","webpack://arcvalidation/./node_modules/inversify/es/utils/id.js","webpack://arcvalidation/./node_modules/inversify/es/bindings/binding.js","webpack://arcvalidation/./node_modules/inversify/es/constants/error_msgs.js","webpack://arcvalidation/./node_modules/inversify/es/constants/metadata_keys.js","webpack://arcvalidation/./node_modules/inversify/es/planning/metadata_reader.js","webpack://arcvalidation/./node_modules/inversify/es/bindings/binding_count.js","webpack://arcvalidation/./node_modules/inversify/es/utils/exceptions.js","webpack://arcvalidation/./node_modules/inversify/es/utils/serialization.js","webpack://arcvalidation/./node_modules/inversify/es/planning/context.js","webpack://arcvalidation/./node_modules/inversify/es/planning/metadata.js","webpack://arcvalidation/./node_modules/inversify/es/planning/plan.js","webpack://arcvalidation/./node_modules/inversify/es/annotation/lazy_service_identifier.js","webpack://arcvalidation/./node_modules/inversify/es/planning/queryable_string.js","webpack://arcvalidation/./node_modules/inversify/es/planning/target.js","webpack://arcvalidation/./node_modules/inversify/es/planning/reflection_utils.js","webpack://arcvalidation/./node_modules/inversify/es/planning/request.js","webpack://arcvalidation/./node_modules/inversify/es/planning/planner.js","webpack://arcvalidation/./node_modules/inversify/es/utils/async.js","webpack://arcvalidation/./node_modules/inversify/es/scope/scope.js","webpack://arcvalidation/./node_modules/inversify/es/utils/factory_type.js","webpack://arcvalidation/./node_modules/inversify/es/utils/binding_utils.js","webpack://arcvalidation/./node_modules/inversify/es/resolution/instantiation.js","webpack://arcvalidation/./node_modules/inversify/es/resolution/resolver.js","webpack://arcvalidation/./node_modules/inversify/es/syntax/constraint_helpers.js","webpack://arcvalidation/./node_modules/inversify/es/syntax/binding_when_syntax.js","webpack://arcvalidation/./node_modules/inversify/es/syntax/binding_on_syntax.js","webpack://arcvalidation/./node_modules/inversify/es/syntax/binding_when_on_syntax.js","webpack://arcvalidation/./node_modules/inversify/es/syntax/binding_in_syntax.js","webpack://arcvalidation/./node_modules/inversify/es/syntax/binding_in_when_on_syntax.js","webpack://arcvalidation/./node_modules/inversify/es/syntax/binding_to_syntax.js","webpack://arcvalidation/./node_modules/inversify/es/container/container_snapshot.js","webpack://arcvalidation/./node_modules/inversify/es/container/lookup.js","webpack://arcvalidation/./node_modules/inversify/es/utils/clonable.js","webpack://arcvalidation/./node_modules/inversify/es/container/module_activation_store.js","webpack://arcvalidation/./node_modules/inversify/es/container/container.js","webpack://arcvalidation/./src/di/container-types.ts","webpack://arcvalidation/./node_modules/inversify/es/annotation/injectable.js","webpack://arcvalidation/./src/logging/Logger.ts","webpack://arcvalidation/./src/classes/EventEmitter.ts","webpack://arcvalidation/./node_modules/inversify/es/annotation/decorator_utils.js","webpack://arcvalidation/./node_modules/inversify/es/utils/js.js","webpack://arcvalidation/./node_modules/inversify/es/annotation/inject.js","webpack://arcvalidation/./node_modules/inversify/es/annotation/inject_base.js","webpack://arcvalidation/./src/services/EventService.ts","webpack://arcvalidation/./src/managers/StateManager.ts","webpack://arcvalidation/./src/logging/DebuggingLogger.ts","webpack://arcvalidation/./src/managers/FormManager.ts","webpack://arcvalidation/./src/classes/Initializer.ts","webpack://arcvalidation/./src/classes/Result.ts","webpack://arcvalidation/./src/classes/FormParser.ts","webpack://arcvalidation/./src/classes/Form.ts","webpack://arcvalidation/./src/factory/FormFactory.ts","webpack://arcvalidation/./src/classes/ObservableCollection.ts","webpack://arcvalidation/./src/managers/DebounceManager.ts","webpack://arcvalidation/./src/utils/Debouncer.ts","webpack://arcvalidation/./src/factory/DebouncerFactory.ts","webpack://arcvalidation/./src/services/ValidationService.ts","webpack://arcvalidation/./src/classes/ValidationControl.ts","webpack://arcvalidation/./src/factory/ValidationControlFactory.ts","webpack://arcvalidation/./src/classes/UIHandler.ts","webpack://arcvalidation/./src/utils/util.ts","webpack://arcvalidation/./src/services/FormService.ts","webpack://arcvalidation/./src/di/container-config.ts","webpack://arcvalidation/./src/arc-validation.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"arcvalidation\"] = factory();\n\telse\n\t\troot[\"arcvalidation\"] = factory();\n})(this, () => {\nreturn ","/*\n* loglevel - https://github.com/pimterry/loglevel\n*\n* Copyright (c) 2013 Tim Perry\n* Licensed under the MIT license.\n*/\n(function (root, definition) {\n    \"use strict\";\n    if (typeof define === 'function' && define.amd) {\n        define(definition);\n    } else if (typeof module === 'object' && module.exports) {\n        module.exports = definition();\n    } else {\n        root.log = definition();\n    }\n}(this, function () {\n    \"use strict\";\n\n    // Slightly dubious tricks to cut down minimized file size\n    var noop = function() {};\n    var undefinedType = \"undefined\";\n    var isIE = (typeof window !== undefinedType) && (typeof window.navigator !== undefinedType) && (\n        /Trident\\/|MSIE /.test(window.navigator.userAgent)\n    );\n\n    var logMethods = [\n        \"trace\",\n        \"debug\",\n        \"info\",\n        \"warn\",\n        \"error\"\n    ];\n\n    // Cross-browser bind equivalent that works at least back to IE6\n    function bindMethod(obj, methodName) {\n        var method = obj[methodName];\n        if (typeof method.bind === 'function') {\n            return method.bind(obj);\n        } else {\n            try {\n                return Function.prototype.bind.call(method, obj);\n            } catch (e) {\n                // Missing bind shim or IE8 + Modernizr, fallback to wrapping\n                return function() {\n                    return Function.prototype.apply.apply(method, [obj, arguments]);\n                };\n            }\n        }\n    }\n\n    // Trace() doesn't print the message in IE, so for that case we need to wrap it\n    function traceForIE() {\n        if (console.log) {\n            if (console.log.apply) {\n                console.log.apply(console, arguments);\n            } else {\n                // In old IE, native console methods themselves don't have apply().\n                Function.prototype.apply.apply(console.log, [console, arguments]);\n            }\n        }\n        if (console.trace) console.trace();\n    }\n\n    // Build the best logging method possible for this env\n    // Wherever possible we want to bind, not wrap, to preserve stack traces\n    function realMethod(methodName) {\n        if (methodName === 'debug') {\n            methodName = 'log';\n        }\n\n        if (typeof console === undefinedType) {\n            return false; // No method possible, for now - fixed later by enableLoggingWhenConsoleArrives\n        } else if (methodName === 'trace' && isIE) {\n            return traceForIE;\n        } else if (console[methodName] !== undefined) {\n            return bindMethod(console, methodName);\n        } else if (console.log !== undefined) {\n            return bindMethod(console, 'log');\n        } else {\n            return noop;\n        }\n    }\n\n    // These private functions always need `this` to be set properly\n\n    function replaceLoggingMethods(level, loggerName) {\n        /*jshint validthis:true */\n        for (var i = 0; i < logMethods.length; i++) {\n            var methodName = logMethods[i];\n            this[methodName] = (i < level) ?\n                noop :\n                this.methodFactory(methodName, level, loggerName);\n        }\n\n        // Define log.log as an alias for log.debug\n        this.log = this.debug;\n    }\n\n    // In old IE versions, the console isn't present until you first open it.\n    // We build realMethod() replacements here that regenerate logging methods\n    function enableLoggingWhenConsoleArrives(methodName, level, loggerName) {\n        return function () {\n            if (typeof console !== undefinedType) {\n                replaceLoggingMethods.call(this, level, loggerName);\n                this[methodName].apply(this, arguments);\n            }\n        };\n    }\n\n    // By default, we use closely bound real methods wherever possible, and\n    // otherwise we wait for a console to appear, and then try again.\n    function defaultMethodFactory(methodName, level, loggerName) {\n        /*jshint validthis:true */\n        return realMethod(methodName) ||\n               enableLoggingWhenConsoleArrives.apply(this, arguments);\n    }\n\n    function Logger(name, defaultLevel, factory) {\n      var self = this;\n      var currentLevel;\n      defaultLevel = defaultLevel == null ? \"WARN\" : defaultLevel;\n\n      var storageKey = \"loglevel\";\n      if (typeof name === \"string\") {\n        storageKey += \":\" + name;\n      } else if (typeof name === \"symbol\") {\n        storageKey = undefined;\n      }\n\n      function persistLevelIfPossible(levelNum) {\n          var levelName = (logMethods[levelNum] || 'silent').toUpperCase();\n\n          if (typeof window === undefinedType || !storageKey) return;\n\n          // Use localStorage if available\n          try {\n              window.localStorage[storageKey] = levelName;\n              return;\n          } catch (ignore) {}\n\n          // Use session cookie as fallback\n          try {\n              window.document.cookie =\n                encodeURIComponent(storageKey) + \"=\" + levelName + \";\";\n          } catch (ignore) {}\n      }\n\n      function getPersistedLevel() {\n          var storedLevel;\n\n          if (typeof window === undefinedType || !storageKey) return;\n\n          try {\n              storedLevel = window.localStorage[storageKey];\n          } catch (ignore) {}\n\n          // Fallback to cookies if local storage gives us nothing\n          if (typeof storedLevel === undefinedType) {\n              try {\n                  var cookie = window.document.cookie;\n                  var location = cookie.indexOf(\n                      encodeURIComponent(storageKey) + \"=\");\n                  if (location !== -1) {\n                      storedLevel = /^([^;]+)/.exec(cookie.slice(location))[1];\n                  }\n              } catch (ignore) {}\n          }\n\n          // If the stored level is not valid, treat it as if nothing was stored.\n          if (self.levels[storedLevel] === undefined) {\n              storedLevel = undefined;\n          }\n\n          return storedLevel;\n      }\n\n      function clearPersistedLevel() {\n          if (typeof window === undefinedType || !storageKey) return;\n\n          // Use localStorage if available\n          try {\n              window.localStorage.removeItem(storageKey);\n              return;\n          } catch (ignore) {}\n\n          // Use session cookie as fallback\n          try {\n              window.document.cookie =\n                encodeURIComponent(storageKey) + \"=; expires=Thu, 01 Jan 1970 00:00:00 UTC\";\n          } catch (ignore) {}\n      }\n\n      /*\n       *\n       * Public logger API - see https://github.com/pimterry/loglevel for details\n       *\n       */\n\n      self.name = name;\n\n      self.levels = { \"TRACE\": 0, \"DEBUG\": 1, \"INFO\": 2, \"WARN\": 3,\n          \"ERROR\": 4, \"SILENT\": 5};\n\n      self.methodFactory = factory || defaultMethodFactory;\n\n      self.getLevel = function () {\n          return currentLevel;\n      };\n\n      self.setLevel = function (level, persist) {\n          if (typeof level === \"string\" && self.levels[level.toUpperCase()] !== undefined) {\n              level = self.levels[level.toUpperCase()];\n          }\n          if (typeof level === \"number\" && level >= 0 && level <= self.levels.SILENT) {\n              currentLevel = level;\n              if (persist !== false) {  // defaults to true\n                  persistLevelIfPossible(level);\n              }\n              replaceLoggingMethods.call(self, level, name);\n              if (typeof console === undefinedType && level < self.levels.SILENT) {\n                  return \"No console available for logging\";\n              }\n          } else {\n              throw \"log.setLevel() called with invalid level: \" + level;\n          }\n      };\n\n      self.setDefaultLevel = function (level) {\n          defaultLevel = level;\n          if (!getPersistedLevel()) {\n              self.setLevel(level, false);\n          }\n      };\n\n      self.resetLevel = function () {\n          self.setLevel(defaultLevel, false);\n          clearPersistedLevel();\n      };\n\n      self.enableAll = function(persist) {\n          self.setLevel(self.levels.TRACE, persist);\n      };\n\n      self.disableAll = function(persist) {\n          self.setLevel(self.levels.SILENT, persist);\n      };\n\n      // Initialize with the right level\n      var initialLevel = getPersistedLevel();\n      if (initialLevel == null) {\n          initialLevel = defaultLevel;\n      }\n      self.setLevel(initialLevel, false);\n    }\n\n    /*\n     *\n     * Top-level API\n     *\n     */\n\n    var defaultLogger = new Logger();\n\n    var _loggersByName = {};\n    defaultLogger.getLogger = function getLogger(name) {\n        if ((typeof name !== \"symbol\" && typeof name !== \"string\") || name === \"\") {\n          throw new TypeError(\"You must supply a name when creating a logger.\");\n        }\n\n        var logger = _loggersByName[name];\n        if (!logger) {\n          logger = _loggersByName[name] = new Logger(\n            name, defaultLogger.getLevel(), defaultLogger.methodFactory);\n        }\n        return logger;\n    };\n\n    // Grab the current global log variable in case of overwrite\n    var _log = (typeof window !== undefinedType) ? window.log : undefined;\n    defaultLogger.noConflict = function() {\n        if (typeof window !== undefinedType &&\n               window.log === defaultLogger) {\n            window.log = _log;\n        }\n\n        return defaultLogger;\n    };\n\n    defaultLogger.getLoggers = function getLoggers() {\n        return _loggersByName;\n    };\n\n    // ES6 default export, for compatibility\n    defaultLogger['default'] = defaultLogger;\n\n    return defaultLogger;\n}));\n","/*! *****************************************************************************\nCopyright (C) Microsoft. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\nvar Reflect;\n(function (Reflect) {\n    // Metadata Proposal\n    // https://rbuckton.github.io/reflect-metadata/\n    (function (factory) {\n        var root = typeof global === \"object\" ? global :\n            typeof self === \"object\" ? self :\n                typeof this === \"object\" ? this :\n                    Function(\"return this;\")();\n        var exporter = makeExporter(Reflect);\n        if (typeof root.Reflect === \"undefined\") {\n            root.Reflect = Reflect;\n        }\n        else {\n            exporter = makeExporter(root.Reflect, exporter);\n        }\n        factory(exporter);\n        function makeExporter(target, previous) {\n            return function (key, value) {\n                if (typeof target[key] !== \"function\") {\n                    Object.defineProperty(target, key, { configurable: true, writable: true, value: value });\n                }\n                if (previous)\n                    previous(key, value);\n            };\n        }\n    })(function (exporter) {\n        var hasOwn = Object.prototype.hasOwnProperty;\n        // feature test for Symbol support\n        var supportsSymbol = typeof Symbol === \"function\";\n        var toPrimitiveSymbol = supportsSymbol && typeof Symbol.toPrimitive !== \"undefined\" ? Symbol.toPrimitive : \"@@toPrimitive\";\n        var iteratorSymbol = supportsSymbol && typeof Symbol.iterator !== \"undefined\" ? Symbol.iterator : \"@@iterator\";\n        var supportsCreate = typeof Object.create === \"function\"; // feature test for Object.create support\n        var supportsProto = { __proto__: [] } instanceof Array; // feature test for __proto__ support\n        var downLevel = !supportsCreate && !supportsProto;\n        var HashMap = {\n            // create an object in dictionary mode (a.k.a. \"slow\" mode in v8)\n            create: supportsCreate\n                ? function () { return MakeDictionary(Object.create(null)); }\n                : supportsProto\n                    ? function () { return MakeDictionary({ __proto__: null }); }\n                    : function () { return MakeDictionary({}); },\n            has: downLevel\n                ? function (map, key) { return hasOwn.call(map, key); }\n                : function (map, key) { return key in map; },\n            get: downLevel\n                ? function (map, key) { return hasOwn.call(map, key) ? map[key] : undefined; }\n                : function (map, key) { return map[key]; },\n        };\n        // Load global or shim versions of Map, Set, and WeakMap\n        var functionPrototype = Object.getPrototypeOf(Function);\n        var usePolyfill = typeof process === \"object\" && process.env && process.env[\"REFLECT_METADATA_USE_MAP_POLYFILL\"] === \"true\";\n        var _Map = !usePolyfill && typeof Map === \"function\" && typeof Map.prototype.entries === \"function\" ? Map : CreateMapPolyfill();\n        var _Set = !usePolyfill && typeof Set === \"function\" && typeof Set.prototype.entries === \"function\" ? Set : CreateSetPolyfill();\n        var _WeakMap = !usePolyfill && typeof WeakMap === \"function\" ? WeakMap : CreateWeakMapPolyfill();\n        // [[Metadata]] internal slot\n        // https://rbuckton.github.io/reflect-metadata/#ordinary-object-internal-methods-and-internal-slots\n        var Metadata = new _WeakMap();\n        /**\n         * Applies a set of decorators to a property of a target object.\n         * @param decorators An array of decorators.\n         * @param target The target object.\n         * @param propertyKey (Optional) The property key to decorate.\n         * @param attributes (Optional) The property descriptor for the target key.\n         * @remarks Decorators are applied in reverse order.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     Example = Reflect.decorate(decoratorsArray, Example);\n         *\n         *     // property (on constructor)\n         *     Reflect.decorate(decoratorsArray, Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     Reflect.decorate(decoratorsArray, Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     Object.defineProperty(Example, \"staticMethod\",\n         *         Reflect.decorate(decoratorsArray, Example, \"staticMethod\",\n         *             Object.getOwnPropertyDescriptor(Example, \"staticMethod\")));\n         *\n         *     // method (on prototype)\n         *     Object.defineProperty(Example.prototype, \"method\",\n         *         Reflect.decorate(decoratorsArray, Example.prototype, \"method\",\n         *             Object.getOwnPropertyDescriptor(Example.prototype, \"method\")));\n         *\n         */\n        function decorate(decorators, target, propertyKey, attributes) {\n            if (!IsUndefined(propertyKey)) {\n                if (!IsArray(decorators))\n                    throw new TypeError();\n                if (!IsObject(target))\n                    throw new TypeError();\n                if (!IsObject(attributes) && !IsUndefined(attributes) && !IsNull(attributes))\n                    throw new TypeError();\n                if (IsNull(attributes))\n                    attributes = undefined;\n                propertyKey = ToPropertyKey(propertyKey);\n                return DecorateProperty(decorators, target, propertyKey, attributes);\n            }\n            else {\n                if (!IsArray(decorators))\n                    throw new TypeError();\n                if (!IsConstructor(target))\n                    throw new TypeError();\n                return DecorateConstructor(decorators, target);\n            }\n        }\n        exporter(\"decorate\", decorate);\n        // 4.1.2 Reflect.metadata(metadataKey, metadataValue)\n        // https://rbuckton.github.io/reflect-metadata/#reflect.metadata\n        /**\n         * A default metadata decorator factory that can be used on a class, class member, or parameter.\n         * @param metadataKey The key for the metadata entry.\n         * @param metadataValue The value for the metadata entry.\n         * @returns A decorator function.\n         * @remarks\n         * If `metadataKey` is already defined for the target and target key, the\n         * metadataValue for that key will be overwritten.\n         * @example\n         *\n         *     // constructor\n         *     @Reflect.metadata(key, value)\n         *     class Example {\n         *     }\n         *\n         *     // property (on constructor, TypeScript only)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         static staticProperty;\n         *     }\n         *\n         *     // property (on prototype, TypeScript only)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         property;\n         *     }\n         *\n         *     // method (on constructor)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         static staticMethod() { }\n         *     }\n         *\n         *     // method (on prototype)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         method() { }\n         *     }\n         *\n         */\n        function metadata(metadataKey, metadataValue) {\n            function decorator(target, propertyKey) {\n                if (!IsObject(target))\n                    throw new TypeError();\n                if (!IsUndefined(propertyKey) && !IsPropertyKey(propertyKey))\n                    throw new TypeError();\n                OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\n            }\n            return decorator;\n        }\n        exporter(\"metadata\", metadata);\n        /**\n         * Define a unique metadata entry on the target.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param metadataValue A value that contains attached metadata.\n         * @param target The target object on which to define metadata.\n         * @param propertyKey (Optional) The property key for the target.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example);\n         *\n         *     // property (on constructor)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"method\");\n         *\n         *     // decorator factory as metadata-producing annotation.\n         *     function MyAnnotation(options): Decorator {\n         *         return (target, key?) => Reflect.defineMetadata(\"custom:annotation\", options, target, key);\n         *     }\n         *\n         */\n        function defineMetadata(metadataKey, metadataValue, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\n        }\n        exporter(\"defineMetadata\", defineMetadata);\n        /**\n         * Gets a value indicating whether the target object or its prototype chain has the provided metadata key defined.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata key was defined on the target object or its prototype chain; otherwise, `false`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function hasMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryHasMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"hasMetadata\", hasMetadata);\n        /**\n         * Gets a value indicating whether the target object has the provided metadata key defined.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata key was defined on the target object; otherwise, `false`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function hasOwnMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryHasOwnMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"hasOwnMetadata\", hasOwnMetadata);\n        /**\n         * Gets the metadata value for the provided metadata key on the target object or its prototype chain.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function getMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryGetMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"getMetadata\", getMetadata);\n        /**\n         * Gets the metadata value for the provided metadata key on the target object.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function getOwnMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryGetOwnMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"getOwnMetadata\", getOwnMetadata);\n        /**\n         * Gets the metadata keys defined on the target object or its prototype chain.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns An array of unique metadata keys.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getMetadataKeys(Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getMetadataKeys(Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getMetadataKeys(Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getMetadataKeys(Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getMetadataKeys(Example.prototype, \"method\");\n         *\n         */\n        function getMetadataKeys(target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryMetadataKeys(target, propertyKey);\n        }\n        exporter(\"getMetadataKeys\", getMetadataKeys);\n        /**\n         * Gets the unique metadata keys defined on the target object.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns An array of unique metadata keys.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getOwnMetadataKeys(Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getOwnMetadataKeys(Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getOwnMetadataKeys(Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"method\");\n         *\n         */\n        function getOwnMetadataKeys(target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryOwnMetadataKeys(target, propertyKey);\n        }\n        exporter(\"getOwnMetadataKeys\", getOwnMetadataKeys);\n        /**\n         * Deletes the metadata entry from the target object with the provided key.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata entry was found and deleted; otherwise, false.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function deleteMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            var metadataMap = GetOrCreateMetadataMap(target, propertyKey, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return false;\n            if (!metadataMap.delete(metadataKey))\n                return false;\n            if (metadataMap.size > 0)\n                return true;\n            var targetMetadata = Metadata.get(target);\n            targetMetadata.delete(propertyKey);\n            if (targetMetadata.size > 0)\n                return true;\n            Metadata.delete(target);\n            return true;\n        }\n        exporter(\"deleteMetadata\", deleteMetadata);\n        function DecorateConstructor(decorators, target) {\n            for (var i = decorators.length - 1; i >= 0; --i) {\n                var decorator = decorators[i];\n                var decorated = decorator(target);\n                if (!IsUndefined(decorated) && !IsNull(decorated)) {\n                    if (!IsConstructor(decorated))\n                        throw new TypeError();\n                    target = decorated;\n                }\n            }\n            return target;\n        }\n        function DecorateProperty(decorators, target, propertyKey, descriptor) {\n            for (var i = decorators.length - 1; i >= 0; --i) {\n                var decorator = decorators[i];\n                var decorated = decorator(target, propertyKey, descriptor);\n                if (!IsUndefined(decorated) && !IsNull(decorated)) {\n                    if (!IsObject(decorated))\n                        throw new TypeError();\n                    descriptor = decorated;\n                }\n            }\n            return descriptor;\n        }\n        function GetOrCreateMetadataMap(O, P, Create) {\n            var targetMetadata = Metadata.get(O);\n            if (IsUndefined(targetMetadata)) {\n                if (!Create)\n                    return undefined;\n                targetMetadata = new _Map();\n                Metadata.set(O, targetMetadata);\n            }\n            var metadataMap = targetMetadata.get(P);\n            if (IsUndefined(metadataMap)) {\n                if (!Create)\n                    return undefined;\n                metadataMap = new _Map();\n                targetMetadata.set(P, metadataMap);\n            }\n            return metadataMap;\n        }\n        // 3.1.1.1 OrdinaryHasMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasmetadata\n        function OrdinaryHasMetadata(MetadataKey, O, P) {\n            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n            if (hasOwn)\n                return true;\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (!IsNull(parent))\n                return OrdinaryHasMetadata(MetadataKey, parent, P);\n            return false;\n        }\n        // 3.1.2.1 OrdinaryHasOwnMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasownmetadata\n        function OrdinaryHasOwnMetadata(MetadataKey, O, P) {\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return false;\n            return ToBoolean(metadataMap.has(MetadataKey));\n        }\n        // 3.1.3.1 OrdinaryGetMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarygetmetadata\n        function OrdinaryGetMetadata(MetadataKey, O, P) {\n            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n            if (hasOwn)\n                return OrdinaryGetOwnMetadata(MetadataKey, O, P);\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (!IsNull(parent))\n                return OrdinaryGetMetadata(MetadataKey, parent, P);\n            return undefined;\n        }\n        // 3.1.4.1 OrdinaryGetOwnMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarygetownmetadata\n        function OrdinaryGetOwnMetadata(MetadataKey, O, P) {\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return undefined;\n            return metadataMap.get(MetadataKey);\n        }\n        // 3.1.5.1 OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarydefineownmetadata\n        function OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P) {\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ true);\n            metadataMap.set(MetadataKey, MetadataValue);\n        }\n        // 3.1.6.1 OrdinaryMetadataKeys(O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarymetadatakeys\n        function OrdinaryMetadataKeys(O, P) {\n            var ownKeys = OrdinaryOwnMetadataKeys(O, P);\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (parent === null)\n                return ownKeys;\n            var parentKeys = OrdinaryMetadataKeys(parent, P);\n            if (parentKeys.length <= 0)\n                return ownKeys;\n            if (ownKeys.length <= 0)\n                return parentKeys;\n            var set = new _Set();\n            var keys = [];\n            for (var _i = 0, ownKeys_1 = ownKeys; _i < ownKeys_1.length; _i++) {\n                var key = ownKeys_1[_i];\n                var hasKey = set.has(key);\n                if (!hasKey) {\n                    set.add(key);\n                    keys.push(key);\n                }\n            }\n            for (var _a = 0, parentKeys_1 = parentKeys; _a < parentKeys_1.length; _a++) {\n                var key = parentKeys_1[_a];\n                var hasKey = set.has(key);\n                if (!hasKey) {\n                    set.add(key);\n                    keys.push(key);\n                }\n            }\n            return keys;\n        }\n        // 3.1.7.1 OrdinaryOwnMetadataKeys(O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryownmetadatakeys\n        function OrdinaryOwnMetadataKeys(O, P) {\n            var keys = [];\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return keys;\n            var keysObj = metadataMap.keys();\n            var iterator = GetIterator(keysObj);\n            var k = 0;\n            while (true) {\n                var next = IteratorStep(iterator);\n                if (!next) {\n                    keys.length = k;\n                    return keys;\n                }\n                var nextValue = IteratorValue(next);\n                try {\n                    keys[k] = nextValue;\n                }\n                catch (e) {\n                    try {\n                        IteratorClose(iterator);\n                    }\n                    finally {\n                        throw e;\n                    }\n                }\n                k++;\n            }\n        }\n        // 6 ECMAScript Data Typ0es and Values\n        // https://tc39.github.io/ecma262/#sec-ecmascript-data-types-and-values\n        function Type(x) {\n            if (x === null)\n                return 1 /* Null */;\n            switch (typeof x) {\n                case \"undefined\": return 0 /* Undefined */;\n                case \"boolean\": return 2 /* Boolean */;\n                case \"string\": return 3 /* String */;\n                case \"symbol\": return 4 /* Symbol */;\n                case \"number\": return 5 /* Number */;\n                case \"object\": return x === null ? 1 /* Null */ : 6 /* Object */;\n                default: return 6 /* Object */;\n            }\n        }\n        // 6.1.1 The Undefined Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-undefined-type\n        function IsUndefined(x) {\n            return x === undefined;\n        }\n        // 6.1.2 The Null Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-null-type\n        function IsNull(x) {\n            return x === null;\n        }\n        // 6.1.5 The Symbol Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-symbol-type\n        function IsSymbol(x) {\n            return typeof x === \"symbol\";\n        }\n        // 6.1.7 The Object Type\n        // https://tc39.github.io/ecma262/#sec-object-type\n        function IsObject(x) {\n            return typeof x === \"object\" ? x !== null : typeof x === \"function\";\n        }\n        // 7.1 Type Conversion\n        // https://tc39.github.io/ecma262/#sec-type-conversion\n        // 7.1.1 ToPrimitive(input [, PreferredType])\n        // https://tc39.github.io/ecma262/#sec-toprimitive\n        function ToPrimitive(input, PreferredType) {\n            switch (Type(input)) {\n                case 0 /* Undefined */: return input;\n                case 1 /* Null */: return input;\n                case 2 /* Boolean */: return input;\n                case 3 /* String */: return input;\n                case 4 /* Symbol */: return input;\n                case 5 /* Number */: return input;\n            }\n            var hint = PreferredType === 3 /* String */ ? \"string\" : PreferredType === 5 /* Number */ ? \"number\" : \"default\";\n            var exoticToPrim = GetMethod(input, toPrimitiveSymbol);\n            if (exoticToPrim !== undefined) {\n                var result = exoticToPrim.call(input, hint);\n                if (IsObject(result))\n                    throw new TypeError();\n                return result;\n            }\n            return OrdinaryToPrimitive(input, hint === \"default\" ? \"number\" : hint);\n        }\n        // 7.1.1.1 OrdinaryToPrimitive(O, hint)\n        // https://tc39.github.io/ecma262/#sec-ordinarytoprimitive\n        function OrdinaryToPrimitive(O, hint) {\n            if (hint === \"string\") {\n                var toString_1 = O.toString;\n                if (IsCallable(toString_1)) {\n                    var result = toString_1.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n                var valueOf = O.valueOf;\n                if (IsCallable(valueOf)) {\n                    var result = valueOf.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n            }\n            else {\n                var valueOf = O.valueOf;\n                if (IsCallable(valueOf)) {\n                    var result = valueOf.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n                var toString_2 = O.toString;\n                if (IsCallable(toString_2)) {\n                    var result = toString_2.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n            }\n            throw new TypeError();\n        }\n        // 7.1.2 ToBoolean(argument)\n        // https://tc39.github.io/ecma262/2016/#sec-toboolean\n        function ToBoolean(argument) {\n            return !!argument;\n        }\n        // 7.1.12 ToString(argument)\n        // https://tc39.github.io/ecma262/#sec-tostring\n        function ToString(argument) {\n            return \"\" + argument;\n        }\n        // 7.1.14 ToPropertyKey(argument)\n        // https://tc39.github.io/ecma262/#sec-topropertykey\n        function ToPropertyKey(argument) {\n            var key = ToPrimitive(argument, 3 /* String */);\n            if (IsSymbol(key))\n                return key;\n            return ToString(key);\n        }\n        // 7.2 Testing and Comparison Operations\n        // https://tc39.github.io/ecma262/#sec-testing-and-comparison-operations\n        // 7.2.2 IsArray(argument)\n        // https://tc39.github.io/ecma262/#sec-isarray\n        function IsArray(argument) {\n            return Array.isArray\n                ? Array.isArray(argument)\n                : argument instanceof Object\n                    ? argument instanceof Array\n                    : Object.prototype.toString.call(argument) === \"[object Array]\";\n        }\n        // 7.2.3 IsCallable(argument)\n        // https://tc39.github.io/ecma262/#sec-iscallable\n        function IsCallable(argument) {\n            // NOTE: This is an approximation as we cannot check for [[Call]] internal method.\n            return typeof argument === \"function\";\n        }\n        // 7.2.4 IsConstructor(argument)\n        // https://tc39.github.io/ecma262/#sec-isconstructor\n        function IsConstructor(argument) {\n            // NOTE: This is an approximation as we cannot check for [[Construct]] internal method.\n            return typeof argument === \"function\";\n        }\n        // 7.2.7 IsPropertyKey(argument)\n        // https://tc39.github.io/ecma262/#sec-ispropertykey\n        function IsPropertyKey(argument) {\n            switch (Type(argument)) {\n                case 3 /* String */: return true;\n                case 4 /* Symbol */: return true;\n                default: return false;\n            }\n        }\n        // 7.3 Operations on Objects\n        // https://tc39.github.io/ecma262/#sec-operations-on-objects\n        // 7.3.9 GetMethod(V, P)\n        // https://tc39.github.io/ecma262/#sec-getmethod\n        function GetMethod(V, P) {\n            var func = V[P];\n            if (func === undefined || func === null)\n                return undefined;\n            if (!IsCallable(func))\n                throw new TypeError();\n            return func;\n        }\n        // 7.4 Operations on Iterator Objects\n        // https://tc39.github.io/ecma262/#sec-operations-on-iterator-objects\n        function GetIterator(obj) {\n            var method = GetMethod(obj, iteratorSymbol);\n            if (!IsCallable(method))\n                throw new TypeError(); // from Call\n            var iterator = method.call(obj);\n            if (!IsObject(iterator))\n                throw new TypeError();\n            return iterator;\n        }\n        // 7.4.4 IteratorValue(iterResult)\n        // https://tc39.github.io/ecma262/2016/#sec-iteratorvalue\n        function IteratorValue(iterResult) {\n            return iterResult.value;\n        }\n        // 7.4.5 IteratorStep(iterator)\n        // https://tc39.github.io/ecma262/#sec-iteratorstep\n        function IteratorStep(iterator) {\n            var result = iterator.next();\n            return result.done ? false : result;\n        }\n        // 7.4.6 IteratorClose(iterator, completion)\n        // https://tc39.github.io/ecma262/#sec-iteratorclose\n        function IteratorClose(iterator) {\n            var f = iterator[\"return\"];\n            if (f)\n                f.call(iterator);\n        }\n        // 9.1 Ordinary Object Internal Methods and Internal Slots\n        // https://tc39.github.io/ecma262/#sec-ordinary-object-internal-methods-and-internal-slots\n        // 9.1.1.1 OrdinaryGetPrototypeOf(O)\n        // https://tc39.github.io/ecma262/#sec-ordinarygetprototypeof\n        function OrdinaryGetPrototypeOf(O) {\n            var proto = Object.getPrototypeOf(O);\n            if (typeof O !== \"function\" || O === functionPrototype)\n                return proto;\n            // TypeScript doesn't set __proto__ in ES5, as it's non-standard.\n            // Try to determine the superclass constructor. Compatible implementations\n            // must either set __proto__ on a subclass constructor to the superclass constructor,\n            // or ensure each class has a valid `constructor` property on its prototype that\n            // points back to the constructor.\n            // If this is not the same as Function.[[Prototype]], then this is definately inherited.\n            // This is the case when in ES6 or when using __proto__ in a compatible browser.\n            if (proto !== functionPrototype)\n                return proto;\n            // If the super prototype is Object.prototype, null, or undefined, then we cannot determine the heritage.\n            var prototype = O.prototype;\n            var prototypeProto = prototype && Object.getPrototypeOf(prototype);\n            if (prototypeProto == null || prototypeProto === Object.prototype)\n                return proto;\n            // If the constructor was not a function, then we cannot determine the heritage.\n            var constructor = prototypeProto.constructor;\n            if (typeof constructor !== \"function\")\n                return proto;\n            // If we have some kind of self-reference, then we cannot determine the heritage.\n            if (constructor === O)\n                return proto;\n            // we have a pretty good guess at the heritage.\n            return constructor;\n        }\n        // naive Map shim\n        function CreateMapPolyfill() {\n            var cacheSentinel = {};\n            var arraySentinel = [];\n            var MapIterator = /** @class */ (function () {\n                function MapIterator(keys, values, selector) {\n                    this._index = 0;\n                    this._keys = keys;\n                    this._values = values;\n                    this._selector = selector;\n                }\n                MapIterator.prototype[\"@@iterator\"] = function () { return this; };\n                MapIterator.prototype[iteratorSymbol] = function () { return this; };\n                MapIterator.prototype.next = function () {\n                    var index = this._index;\n                    if (index >= 0 && index < this._keys.length) {\n                        var result = this._selector(this._keys[index], this._values[index]);\n                        if (index + 1 >= this._keys.length) {\n                            this._index = -1;\n                            this._keys = arraySentinel;\n                            this._values = arraySentinel;\n                        }\n                        else {\n                            this._index++;\n                        }\n                        return { value: result, done: false };\n                    }\n                    return { value: undefined, done: true };\n                };\n                MapIterator.prototype.throw = function (error) {\n                    if (this._index >= 0) {\n                        this._index = -1;\n                        this._keys = arraySentinel;\n                        this._values = arraySentinel;\n                    }\n                    throw error;\n                };\n                MapIterator.prototype.return = function (value) {\n                    if (this._index >= 0) {\n                        this._index = -1;\n                        this._keys = arraySentinel;\n                        this._values = arraySentinel;\n                    }\n                    return { value: value, done: true };\n                };\n                return MapIterator;\n            }());\n            return /** @class */ (function () {\n                function Map() {\n                    this._keys = [];\n                    this._values = [];\n                    this._cacheKey = cacheSentinel;\n                    this._cacheIndex = -2;\n                }\n                Object.defineProperty(Map.prototype, \"size\", {\n                    get: function () { return this._keys.length; },\n                    enumerable: true,\n                    configurable: true\n                });\n                Map.prototype.has = function (key) { return this._find(key, /*insert*/ false) >= 0; };\n                Map.prototype.get = function (key) {\n                    var index = this._find(key, /*insert*/ false);\n                    return index >= 0 ? this._values[index] : undefined;\n                };\n                Map.prototype.set = function (key, value) {\n                    var index = this._find(key, /*insert*/ true);\n                    this._values[index] = value;\n                    return this;\n                };\n                Map.prototype.delete = function (key) {\n                    var index = this._find(key, /*insert*/ false);\n                    if (index >= 0) {\n                        var size = this._keys.length;\n                        for (var i = index + 1; i < size; i++) {\n                            this._keys[i - 1] = this._keys[i];\n                            this._values[i - 1] = this._values[i];\n                        }\n                        this._keys.length--;\n                        this._values.length--;\n                        if (key === this._cacheKey) {\n                            this._cacheKey = cacheSentinel;\n                            this._cacheIndex = -2;\n                        }\n                        return true;\n                    }\n                    return false;\n                };\n                Map.prototype.clear = function () {\n                    this._keys.length = 0;\n                    this._values.length = 0;\n                    this._cacheKey = cacheSentinel;\n                    this._cacheIndex = -2;\n                };\n                Map.prototype.keys = function () { return new MapIterator(this._keys, this._values, getKey); };\n                Map.prototype.values = function () { return new MapIterator(this._keys, this._values, getValue); };\n                Map.prototype.entries = function () { return new MapIterator(this._keys, this._values, getEntry); };\n                Map.prototype[\"@@iterator\"] = function () { return this.entries(); };\n                Map.prototype[iteratorSymbol] = function () { return this.entries(); };\n                Map.prototype._find = function (key, insert) {\n                    if (this._cacheKey !== key) {\n                        this._cacheIndex = this._keys.indexOf(this._cacheKey = key);\n                    }\n                    if (this._cacheIndex < 0 && insert) {\n                        this._cacheIndex = this._keys.length;\n                        this._keys.push(key);\n                        this._values.push(undefined);\n                    }\n                    return this._cacheIndex;\n                };\n                return Map;\n            }());\n            function getKey(key, _) {\n                return key;\n            }\n            function getValue(_, value) {\n                return value;\n            }\n            function getEntry(key, value) {\n                return [key, value];\n            }\n        }\n        // naive Set shim\n        function CreateSetPolyfill() {\n            return /** @class */ (function () {\n                function Set() {\n                    this._map = new _Map();\n                }\n                Object.defineProperty(Set.prototype, \"size\", {\n                    get: function () { return this._map.size; },\n                    enumerable: true,\n                    configurable: true\n                });\n                Set.prototype.has = function (value) { return this._map.has(value); };\n                Set.prototype.add = function (value) { return this._map.set(value, value), this; };\n                Set.prototype.delete = function (value) { return this._map.delete(value); };\n                Set.prototype.clear = function () { this._map.clear(); };\n                Set.prototype.keys = function () { return this._map.keys(); };\n                Set.prototype.values = function () { return this._map.values(); };\n                Set.prototype.entries = function () { return this._map.entries(); };\n                Set.prototype[\"@@iterator\"] = function () { return this.keys(); };\n                Set.prototype[iteratorSymbol] = function () { return this.keys(); };\n                return Set;\n            }());\n        }\n        // naive WeakMap shim\n        function CreateWeakMapPolyfill() {\n            var UUID_SIZE = 16;\n            var keys = HashMap.create();\n            var rootKey = CreateUniqueKey();\n            return /** @class */ (function () {\n                function WeakMap() {\n                    this._key = CreateUniqueKey();\n                }\n                WeakMap.prototype.has = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? HashMap.has(table, this._key) : false;\n                };\n                WeakMap.prototype.get = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? HashMap.get(table, this._key) : undefined;\n                };\n                WeakMap.prototype.set = function (target, value) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ true);\n                    table[this._key] = value;\n                    return this;\n                };\n                WeakMap.prototype.delete = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? delete table[this._key] : false;\n                };\n                WeakMap.prototype.clear = function () {\n                    // NOTE: not a real clear, just makes the previous data unreachable\n                    this._key = CreateUniqueKey();\n                };\n                return WeakMap;\n            }());\n            function CreateUniqueKey() {\n                var key;\n                do\n                    key = \"@@WeakMap@@\" + CreateUUID();\n                while (HashMap.has(keys, key));\n                keys[key] = true;\n                return key;\n            }\n            function GetOrCreateWeakMapTable(target, create) {\n                if (!hasOwn.call(target, rootKey)) {\n                    if (!create)\n                        return undefined;\n                    Object.defineProperty(target, rootKey, { value: HashMap.create() });\n                }\n                return target[rootKey];\n            }\n            function FillRandomBytes(buffer, size) {\n                for (var i = 0; i < size; ++i)\n                    buffer[i] = Math.random() * 0xff | 0;\n                return buffer;\n            }\n            function GenRandomBytes(size) {\n                if (typeof Uint8Array === \"function\") {\n                    if (typeof crypto !== \"undefined\")\n                        return crypto.getRandomValues(new Uint8Array(size));\n                    if (typeof msCrypto !== \"undefined\")\n                        return msCrypto.getRandomValues(new Uint8Array(size));\n                    return FillRandomBytes(new Uint8Array(size), size);\n                }\n                return FillRandomBytes(new Array(size), size);\n            }\n            function CreateUUID() {\n                var data = GenRandomBytes(UUID_SIZE);\n                // mark as random - RFC 4122 § 4.4\n                data[6] = data[6] & 0x4f | 0x40;\n                data[8] = data[8] & 0xbf | 0x80;\n                var result = \"\";\n                for (var offset = 0; offset < UUID_SIZE; ++offset) {\n                    var byte = data[offset];\n                    if (offset === 4 || offset === 6 || offset === 8)\n                        result += \"-\";\n                    if (byte < 16)\n                        result += \"0\";\n                    result += byte.toString(16).toLowerCase();\n                }\n                return result;\n            }\n        }\n        // uses a heuristic used by v8 and chakra to force an object into dictionary mode.\n        function MakeDictionary(obj) {\n            obj.__ = undefined;\n            delete obj.__;\n            return obj;\n        }\n    });\n})(Reflect || (Reflect = {}));\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var BindingScopeEnum = {\r\n    Request: 'Request',\r\n    Singleton: 'Singleton',\r\n    Transient: 'Transient'\r\n};\r\nvar BindingTypeEnum = {\r\n    ConstantValue: 'ConstantValue',\r\n    Constructor: 'Constructor',\r\n    DynamicValue: 'DynamicValue',\r\n    Factory: 'Factory',\r\n    Function: 'Function',\r\n    Instance: 'Instance',\r\n    Invalid: 'Invalid',\r\n    Provider: 'Provider'\r\n};\r\nvar TargetTypeEnum = {\r\n    ClassProperty: 'ClassProperty',\r\n    ConstructorArgument: 'ConstructorArgument',\r\n    Variable: 'Variable'\r\n};\r\nexport { BindingScopeEnum, BindingTypeEnum, TargetTypeEnum };\r\n","var idCounter = 0;\r\nfunction id() {\r\n    return idCounter++;\r\n}\r\nexport { id };\r\n","import { BindingScopeEnum, BindingTypeEnum } from '../constants/literal_types';\r\nimport { id } from '../utils/id';\r\nvar Binding = (function () {\r\n    function Binding(serviceIdentifier, scope) {\r\n        this.id = id();\r\n        this.activated = false;\r\n        this.serviceIdentifier = serviceIdentifier;\r\n        this.scope = scope;\r\n        this.type = BindingTypeEnum.Invalid;\r\n        this.constraint = function (request) { return true; };\r\n        this.implementationType = null;\r\n        this.cache = null;\r\n        this.factory = null;\r\n        this.provider = null;\r\n        this.onActivation = null;\r\n        this.onDeactivation = null;\r\n        this.dynamicValue = null;\r\n    }\r\n    Binding.prototype.clone = function () {\r\n        var clone = new Binding(this.serviceIdentifier, this.scope);\r\n        clone.activated = (clone.scope === BindingScopeEnum.Singleton) ? this.activated : false;\r\n        clone.implementationType = this.implementationType;\r\n        clone.dynamicValue = this.dynamicValue;\r\n        clone.scope = this.scope;\r\n        clone.type = this.type;\r\n        clone.factory = this.factory;\r\n        clone.provider = this.provider;\r\n        clone.constraint = this.constraint;\r\n        clone.onActivation = this.onActivation;\r\n        clone.onDeactivation = this.onDeactivation;\r\n        clone.cache = this.cache;\r\n        return clone;\r\n    };\r\n    return Binding;\r\n}());\r\nexport { Binding };\r\n","export var DUPLICATED_INJECTABLE_DECORATOR = 'Cannot apply @injectable decorator multiple times.';\r\nexport var DUPLICATED_METADATA = 'Metadata key was used more than once in a parameter:';\r\nexport var NULL_ARGUMENT = 'NULL argument';\r\nexport var KEY_NOT_FOUND = 'Key Not Found';\r\nexport var AMBIGUOUS_MATCH = 'Ambiguous match found for serviceIdentifier:';\r\nexport var CANNOT_UNBIND = 'Could not unbind serviceIdentifier:';\r\nexport var NOT_REGISTERED = 'No matching bindings found for serviceIdentifier:';\r\nexport var MISSING_INJECTABLE_ANNOTATION = 'Missing required @injectable annotation in:';\r\nexport var MISSING_INJECT_ANNOTATION = 'Missing required @inject or @multiInject annotation in:';\r\nexport var UNDEFINED_INJECT_ANNOTATION = function (name) {\r\n    return \"@inject called with undefined this could mean that the class \" + name + \" has \" +\r\n        'a circular dependency problem. You can use a LazyServiceIdentifier to  ' +\r\n        'overcome this limitation.';\r\n};\r\nexport var CIRCULAR_DEPENDENCY = 'Circular dependency found:';\r\nexport var NOT_IMPLEMENTED = 'Sorry, this feature is not fully implemented yet.';\r\nexport var INVALID_BINDING_TYPE = 'Invalid binding type:';\r\nexport var NO_MORE_SNAPSHOTS_AVAILABLE = 'No snapshot available to restore.';\r\nexport var INVALID_MIDDLEWARE_RETURN = 'Invalid return type in middleware. Middleware must return!';\r\nexport var INVALID_FUNCTION_BINDING = 'Value provided to function binding must be a function!';\r\nexport var LAZY_IN_SYNC = function (key) { return \"You are attempting to construct '\" + key + \"' in a synchronous way\\n but it has asynchronous dependencies.\"; };\r\nexport var INVALID_TO_SELF_VALUE = 'The toSelf function can only be applied when a constructor is ' +\r\n    'used as service identifier';\r\nexport var INVALID_DECORATOR_OPERATION = 'The @inject @multiInject @tagged and @named decorators ' +\r\n    'must be applied to the parameters of a class constructor or a class property.';\r\nexport var ARGUMENTS_LENGTH_MISMATCH = function () {\r\n    var values = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        values[_i] = arguments[_i];\r\n    }\r\n    return 'The number of constructor arguments in the derived class ' +\r\n        (values[0] + \" must be >= than the number of constructor arguments of its base class.\");\r\n};\r\nexport var CONTAINER_OPTIONS_MUST_BE_AN_OBJECT = 'Invalid Container constructor argument. Container options ' +\r\n    'must be an object.';\r\nexport var CONTAINER_OPTIONS_INVALID_DEFAULT_SCOPE = 'Invalid Container option. Default scope must ' +\r\n    'be a string (\"singleton\" or \"transient\").';\r\nexport var CONTAINER_OPTIONS_INVALID_AUTO_BIND_INJECTABLE = 'Invalid Container option. Auto bind injectable must ' +\r\n    'be a boolean';\r\nexport var CONTAINER_OPTIONS_INVALID_SKIP_BASE_CHECK = 'Invalid Container option. Skip base check must ' +\r\n    'be a boolean';\r\nexport var MULTIPLE_PRE_DESTROY_METHODS = 'Cannot apply @preDestroy decorator multiple times in the same class';\r\nexport var MULTIPLE_POST_CONSTRUCT_METHODS = 'Cannot apply @postConstruct decorator multiple times in the same class';\r\nexport var ASYNC_UNBIND_REQUIRED = 'Attempting to unbind dependency with asynchronous destruction (@preDestroy or onDeactivation)';\r\nexport var POST_CONSTRUCT_ERROR = function (clazz, errorMessage) { return \"@postConstruct error in class \" + clazz + \": \" + errorMessage; };\r\nexport var PRE_DESTROY_ERROR = function (clazz, errorMessage) { return \"@preDestroy error in class \" + clazz + \": \" + errorMessage; };\r\nexport var ON_DEACTIVATION_ERROR = function (clazz, errorMessage) { return \"onDeactivation() error in class \" + clazz + \": \" + errorMessage; };\r\nexport var CIRCULAR_DEPENDENCY_IN_FACTORY = function (factoryType, serviceIdentifier) {\r\n    return \"It looks like there is a circular dependency in one of the '\" + factoryType + \"' bindings. Please investigate bindings with \" +\r\n        (\"service identifier '\" + serviceIdentifier + \"'.\");\r\n};\r\nexport var STACK_OVERFLOW = 'Maximum call stack size exceeded';\r\n","export var NAMED_TAG = 'named';\r\nexport var NAME_TAG = 'name';\r\nexport var UNMANAGED_TAG = 'unmanaged';\r\nexport var OPTIONAL_TAG = 'optional';\r\nexport var INJECT_TAG = 'inject';\r\nexport var MULTI_INJECT_TAG = 'multi_inject';\r\nexport var TAGGED = 'inversify:tagged';\r\nexport var TAGGED_PROP = 'inversify:tagged_props';\r\nexport var PARAM_TYPES = 'inversify:paramtypes';\r\nexport var DESIGN_PARAM_TYPES = 'design:paramtypes';\r\nexport var POST_CONSTRUCT = 'post_construct';\r\nexport var PRE_DESTROY = 'pre_destroy';\r\nfunction getNonCustomTagKeys() {\r\n    return [\r\n        INJECT_TAG,\r\n        MULTI_INJECT_TAG,\r\n        NAME_TAG,\r\n        UNMANAGED_TAG,\r\n        NAMED_TAG,\r\n        OPTIONAL_TAG,\r\n    ];\r\n}\r\nexport var NON_CUSTOM_TAG_KEYS = getNonCustomTagKeys();\r\n","import * as METADATA_KEY from '../constants/metadata_keys';\r\nvar MetadataReader = (function () {\r\n    function MetadataReader() {\r\n    }\r\n    MetadataReader.prototype.getConstructorMetadata = function (constructorFunc) {\r\n        var compilerGeneratedMetadata = Reflect.getMetadata(METADATA_KEY.PARAM_TYPES, constructorFunc);\r\n        var userGeneratedMetadata = Reflect.getMetadata(METADATA_KEY.TAGGED, constructorFunc);\r\n        return {\r\n            compilerGeneratedMetadata: compilerGeneratedMetadata,\r\n            userGeneratedMetadata: userGeneratedMetadata || {}\r\n        };\r\n    };\r\n    MetadataReader.prototype.getPropertiesMetadata = function (constructorFunc) {\r\n        var userGeneratedMetadata = Reflect.getMetadata(METADATA_KEY.TAGGED_PROP, constructorFunc) || [];\r\n        return userGeneratedMetadata;\r\n    };\r\n    return MetadataReader;\r\n}());\r\nexport { MetadataReader };\r\n","export var BindingCount = {\r\n    MultipleBindingsAvailable: 2,\r\n    NoBindingsAvailable: 0,\r\n    OnlyOneBindingAvailable: 1\r\n};\r\n","import * as ERROR_MSGS from '../constants/error_msgs';\r\nexport function isStackOverflowExeption(error) {\r\n    return (error instanceof RangeError ||\r\n        error.message === ERROR_MSGS.STACK_OVERFLOW);\r\n}\r\nexport var tryAndThrowErrorIfStackOverflow = function (fn, errorCallback) {\r\n    try {\r\n        return fn();\r\n    }\r\n    catch (error) {\r\n        if (isStackOverflowExeption(error)) {\r\n            error = errorCallback();\r\n        }\r\n        throw error;\r\n    }\r\n};\r\n","import * as ERROR_MSGS from '../constants/error_msgs';\r\nfunction getServiceIdentifierAsString(serviceIdentifier) {\r\n    if (typeof serviceIdentifier === 'function') {\r\n        var _serviceIdentifier = serviceIdentifier;\r\n        return _serviceIdentifier.name;\r\n    }\r\n    else if (typeof serviceIdentifier === 'symbol') {\r\n        return serviceIdentifier.toString();\r\n    }\r\n    else {\r\n        var _serviceIdentifier = serviceIdentifier;\r\n        return _serviceIdentifier;\r\n    }\r\n}\r\nfunction listRegisteredBindingsForServiceIdentifier(container, serviceIdentifier, getBindings) {\r\n    var registeredBindingsList = '';\r\n    var registeredBindings = getBindings(container, serviceIdentifier);\r\n    if (registeredBindings.length !== 0) {\r\n        registeredBindingsList = '\\nRegistered bindings:';\r\n        registeredBindings.forEach(function (binding) {\r\n            var name = 'Object';\r\n            if (binding.implementationType !== null) {\r\n                name = getFunctionName(binding.implementationType);\r\n            }\r\n            registeredBindingsList = registeredBindingsList + \"\\n \" + name;\r\n            if (binding.constraint.metaData) {\r\n                registeredBindingsList = registeredBindingsList + \" - \" + binding.constraint.metaData;\r\n            }\r\n        });\r\n    }\r\n    return registeredBindingsList;\r\n}\r\nfunction alreadyDependencyChain(request, serviceIdentifier) {\r\n    if (request.parentRequest === null) {\r\n        return false;\r\n    }\r\n    else if (request.parentRequest.serviceIdentifier === serviceIdentifier) {\r\n        return true;\r\n    }\r\n    else {\r\n        return alreadyDependencyChain(request.parentRequest, serviceIdentifier);\r\n    }\r\n}\r\nfunction dependencyChainToString(request) {\r\n    function _createStringArr(req, result) {\r\n        if (result === void 0) { result = []; }\r\n        var serviceIdentifier = getServiceIdentifierAsString(req.serviceIdentifier);\r\n        result.push(serviceIdentifier);\r\n        if (req.parentRequest !== null) {\r\n            return _createStringArr(req.parentRequest, result);\r\n        }\r\n        return result;\r\n    }\r\n    var stringArr = _createStringArr(request);\r\n    return stringArr.reverse().join(' --> ');\r\n}\r\nfunction circularDependencyToException(request) {\r\n    request.childRequests.forEach(function (childRequest) {\r\n        if (alreadyDependencyChain(childRequest, childRequest.serviceIdentifier)) {\r\n            var services = dependencyChainToString(childRequest);\r\n            throw new Error(ERROR_MSGS.CIRCULAR_DEPENDENCY + \" \" + services);\r\n        }\r\n        else {\r\n            circularDependencyToException(childRequest);\r\n        }\r\n    });\r\n}\r\nfunction listMetadataForTarget(serviceIdentifierString, target) {\r\n    if (target.isTagged() || target.isNamed()) {\r\n        var m_1 = '';\r\n        var namedTag = target.getNamedTag();\r\n        var otherTags = target.getCustomTags();\r\n        if (namedTag !== null) {\r\n            m_1 += namedTag.toString() + '\\n';\r\n        }\r\n        if (otherTags !== null) {\r\n            otherTags.forEach(function (tag) {\r\n                m_1 += tag.toString() + '\\n';\r\n            });\r\n        }\r\n        return \" \" + serviceIdentifierString + \"\\n \" + serviceIdentifierString + \" - \" + m_1;\r\n    }\r\n    else {\r\n        return \" \" + serviceIdentifierString;\r\n    }\r\n}\r\nfunction getFunctionName(func) {\r\n    if (func.name) {\r\n        return func.name;\r\n    }\r\n    else {\r\n        var name_1 = func.toString();\r\n        var match = name_1.match(/^function\\s*([^\\s(]+)/);\r\n        return match ? match[1] : \"Anonymous function: \" + name_1;\r\n    }\r\n}\r\nfunction getSymbolDescription(symbol) {\r\n    return symbol.toString().slice(7, -1);\r\n}\r\nexport { getFunctionName, getServiceIdentifierAsString, listRegisteredBindingsForServiceIdentifier, listMetadataForTarget, circularDependencyToException, getSymbolDescription };\r\n","import { id } from '../utils/id';\r\nvar Context = (function () {\r\n    function Context(container) {\r\n        this.id = id();\r\n        this.container = container;\r\n    }\r\n    Context.prototype.addPlan = function (plan) {\r\n        this.plan = plan;\r\n    };\r\n    Context.prototype.setCurrentRequest = function (currentRequest) {\r\n        this.currentRequest = currentRequest;\r\n    };\r\n    return Context;\r\n}());\r\nexport { Context };\r\n","import * as METADATA_KEY from '../constants/metadata_keys';\r\nvar Metadata = (function () {\r\n    function Metadata(key, value) {\r\n        this.key = key;\r\n        this.value = value;\r\n    }\r\n    Metadata.prototype.toString = function () {\r\n        if (this.key === METADATA_KEY.NAMED_TAG) {\r\n            return \"named: \" + String(this.value).toString() + \" \";\r\n        }\r\n        else {\r\n            return \"tagged: { key:\" + this.key.toString() + \", value: \" + String(this.value) + \" }\";\r\n        }\r\n    };\r\n    return Metadata;\r\n}());\r\nexport { Metadata };\r\n","var Plan = (function () {\r\n    function Plan(parentContext, rootRequest) {\r\n        this.parentContext = parentContext;\r\n        this.rootRequest = rootRequest;\r\n    }\r\n    return Plan;\r\n}());\r\nexport { Plan };\r\n","var LazyServiceIdentifier = (function () {\r\n    function LazyServiceIdentifier(cb) {\r\n        this._cb = cb;\r\n    }\r\n    LazyServiceIdentifier.prototype.unwrap = function () {\r\n        return this._cb();\r\n    };\r\n    return LazyServiceIdentifier;\r\n}());\r\nexport { LazyServiceIdentifier };\r\n","var QueryableString = (function () {\r\n    function QueryableString(str) {\r\n        this.str = str;\r\n    }\r\n    QueryableString.prototype.startsWith = function (searchString) {\r\n        return this.str.indexOf(searchString) === 0;\r\n    };\r\n    QueryableString.prototype.endsWith = function (searchString) {\r\n        var reverseString = '';\r\n        var reverseSearchString = searchString.split('').reverse().join('');\r\n        reverseString = this.str.split('').reverse().join('');\r\n        return this.startsWith.call({ str: reverseString }, reverseSearchString);\r\n    };\r\n    QueryableString.prototype.contains = function (searchString) {\r\n        return (this.str.indexOf(searchString) !== -1);\r\n    };\r\n    QueryableString.prototype.equals = function (compareString) {\r\n        return this.str === compareString;\r\n    };\r\n    QueryableString.prototype.value = function () {\r\n        return this.str;\r\n    };\r\n    return QueryableString;\r\n}());\r\nexport { QueryableString };\r\n","import * as METADATA_KEY from '../constants/metadata_keys';\r\nimport { id } from '../utils/id';\r\nimport { getSymbolDescription } from '../utils/serialization';\r\nimport { Metadata } from './metadata';\r\nimport { QueryableString } from './queryable_string';\r\nvar Target = (function () {\r\n    function Target(type, identifier, serviceIdentifier, namedOrTagged) {\r\n        this.id = id();\r\n        this.type = type;\r\n        this.serviceIdentifier = serviceIdentifier;\r\n        var queryableName = typeof identifier === 'symbol' ? getSymbolDescription(identifier) : identifier;\r\n        this.name = new QueryableString(queryableName || '');\r\n        this.identifier = identifier;\r\n        this.metadata = new Array();\r\n        var metadataItem = null;\r\n        if (typeof namedOrTagged === 'string') {\r\n            metadataItem = new Metadata(METADATA_KEY.NAMED_TAG, namedOrTagged);\r\n        }\r\n        else if (namedOrTagged instanceof Metadata) {\r\n            metadataItem = namedOrTagged;\r\n        }\r\n        if (metadataItem !== null) {\r\n            this.metadata.push(metadataItem);\r\n        }\r\n    }\r\n    Target.prototype.hasTag = function (key) {\r\n        for (var _i = 0, _a = this.metadata; _i < _a.length; _i++) {\r\n            var m = _a[_i];\r\n            if (m.key === key) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    Target.prototype.isArray = function () {\r\n        return this.hasTag(METADATA_KEY.MULTI_INJECT_TAG);\r\n    };\r\n    Target.prototype.matchesArray = function (name) {\r\n        return this.matchesTag(METADATA_KEY.MULTI_INJECT_TAG)(name);\r\n    };\r\n    Target.prototype.isNamed = function () {\r\n        return this.hasTag(METADATA_KEY.NAMED_TAG);\r\n    };\r\n    Target.prototype.isTagged = function () {\r\n        return this.metadata.some(function (metadata) { return METADATA_KEY.NON_CUSTOM_TAG_KEYS.every(function (key) { return metadata.key !== key; }); });\r\n    };\r\n    Target.prototype.isOptional = function () {\r\n        return this.matchesTag(METADATA_KEY.OPTIONAL_TAG)(true);\r\n    };\r\n    Target.prototype.getNamedTag = function () {\r\n        if (this.isNamed()) {\r\n            return this.metadata.filter(function (m) { return m.key === METADATA_KEY.NAMED_TAG; })[0];\r\n        }\r\n        return null;\r\n    };\r\n    Target.prototype.getCustomTags = function () {\r\n        if (this.isTagged()) {\r\n            return this.metadata.filter(function (metadata) { return METADATA_KEY.NON_CUSTOM_TAG_KEYS.every(function (key) { return metadata.key !== key; }); });\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    Target.prototype.matchesNamedTag = function (name) {\r\n        return this.matchesTag(METADATA_KEY.NAMED_TAG)(name);\r\n    };\r\n    Target.prototype.matchesTag = function (key) {\r\n        var _this = this;\r\n        return function (value) {\r\n            for (var _i = 0, _a = _this.metadata; _i < _a.length; _i++) {\r\n                var m = _a[_i];\r\n                if (m.key === key && m.value === value) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        };\r\n    };\r\n    return Target;\r\n}());\r\nexport { Target };\r\n","var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n};\r\nimport { LazyServiceIdentifier } from '../annotation/lazy_service_identifier';\r\nimport * as ERROR_MSGS from '../constants/error_msgs';\r\nimport { TargetTypeEnum } from '../constants/literal_types';\r\nimport * as METADATA_KEY from '../constants/metadata_keys';\r\nimport { getFunctionName } from '../utils/serialization';\r\nimport { Target } from './target';\r\nfunction getDependencies(metadataReader, func) {\r\n    var constructorName = getFunctionName(func);\r\n    return getTargets(metadataReader, constructorName, func, false);\r\n}\r\nfunction getTargets(metadataReader, constructorName, func, isBaseClass) {\r\n    var metadata = metadataReader.getConstructorMetadata(func);\r\n    var serviceIdentifiers = metadata.compilerGeneratedMetadata;\r\n    if (serviceIdentifiers === undefined) {\r\n        var msg = ERROR_MSGS.MISSING_INJECTABLE_ANNOTATION + \" \" + constructorName + \".\";\r\n        throw new Error(msg);\r\n    }\r\n    var constructorArgsMetadata = metadata.userGeneratedMetadata;\r\n    var keys = Object.keys(constructorArgsMetadata);\r\n    var hasUserDeclaredUnknownInjections = (func.length === 0 && keys.length > 0);\r\n    var hasOptionalParameters = keys.length > func.length;\r\n    var iterations = (hasUserDeclaredUnknownInjections || hasOptionalParameters) ? keys.length : func.length;\r\n    var constructorTargets = getConstructorArgsAsTargets(isBaseClass, constructorName, serviceIdentifiers, constructorArgsMetadata, iterations);\r\n    var propertyTargets = getClassPropsAsTargets(metadataReader, func, constructorName);\r\n    var targets = __spreadArray(__spreadArray([], constructorTargets, true), propertyTargets, true);\r\n    return targets;\r\n}\r\nfunction getConstructorArgsAsTarget(index, isBaseClass, constructorName, serviceIdentifiers, constructorArgsMetadata) {\r\n    var targetMetadata = constructorArgsMetadata[index.toString()] || [];\r\n    var metadata = formatTargetMetadata(targetMetadata);\r\n    var isManaged = metadata.unmanaged !== true;\r\n    var serviceIdentifier = serviceIdentifiers[index];\r\n    var injectIdentifier = metadata.inject || metadata.multiInject;\r\n    serviceIdentifier = (injectIdentifier ? injectIdentifier : serviceIdentifier);\r\n    if (serviceIdentifier instanceof LazyServiceIdentifier) {\r\n        serviceIdentifier = serviceIdentifier.unwrap();\r\n    }\r\n    if (isManaged) {\r\n        var isObject = serviceIdentifier === Object;\r\n        var isFunction = serviceIdentifier === Function;\r\n        var isUndefined = serviceIdentifier === undefined;\r\n        var isUnknownType = isObject || isFunction || isUndefined;\r\n        if (!isBaseClass && isUnknownType) {\r\n            var msg = ERROR_MSGS.MISSING_INJECT_ANNOTATION + \" argument \" + index + \" in class \" + constructorName + \".\";\r\n            throw new Error(msg);\r\n        }\r\n        var target = new Target(TargetTypeEnum.ConstructorArgument, metadata.targetName, serviceIdentifier);\r\n        target.metadata = targetMetadata;\r\n        return target;\r\n    }\r\n    return null;\r\n}\r\nfunction getConstructorArgsAsTargets(isBaseClass, constructorName, serviceIdentifiers, constructorArgsMetadata, iterations) {\r\n    var targets = [];\r\n    for (var i = 0; i < iterations; i++) {\r\n        var index = i;\r\n        var target = getConstructorArgsAsTarget(index, isBaseClass, constructorName, serviceIdentifiers, constructorArgsMetadata);\r\n        if (target !== null) {\r\n            targets.push(target);\r\n        }\r\n    }\r\n    return targets;\r\n}\r\nfunction _getServiceIdentifierForProperty(inject, multiInject, propertyName, className) {\r\n    var serviceIdentifier = (inject || multiInject);\r\n    if (serviceIdentifier === undefined) {\r\n        var msg = ERROR_MSGS.MISSING_INJECTABLE_ANNOTATION + \" for property \" + String(propertyName) + \" in class \" + className + \".\";\r\n        throw new Error(msg);\r\n    }\r\n    return serviceIdentifier;\r\n}\r\nfunction getClassPropsAsTargets(metadataReader, constructorFunc, constructorName) {\r\n    var classPropsMetadata = metadataReader.getPropertiesMetadata(constructorFunc);\r\n    var targets = [];\r\n    var symbolKeys = Object.getOwnPropertySymbols(classPropsMetadata);\r\n    var stringKeys = Object.keys(classPropsMetadata);\r\n    var keys = stringKeys.concat(symbolKeys);\r\n    for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\r\n        var key = keys_1[_i];\r\n        var targetMetadata = classPropsMetadata[key];\r\n        var metadata = formatTargetMetadata(targetMetadata);\r\n        var identifier = metadata.targetName || key;\r\n        var serviceIdentifier = _getServiceIdentifierForProperty(metadata.inject, metadata.multiInject, key, constructorName);\r\n        var target = new Target(TargetTypeEnum.ClassProperty, identifier, serviceIdentifier);\r\n        target.metadata = targetMetadata;\r\n        targets.push(target);\r\n    }\r\n    var baseConstructor = Object.getPrototypeOf(constructorFunc.prototype).constructor;\r\n    if (baseConstructor !== Object) {\r\n        var baseTargets = getClassPropsAsTargets(metadataReader, baseConstructor, constructorName);\r\n        targets = __spreadArray(__spreadArray([], targets, true), baseTargets, true);\r\n    }\r\n    return targets;\r\n}\r\nfunction getBaseClassDependencyCount(metadataReader, func) {\r\n    var baseConstructor = Object.getPrototypeOf(func.prototype).constructor;\r\n    if (baseConstructor !== Object) {\r\n        var baseConstructorName = getFunctionName(baseConstructor);\r\n        var targets = getTargets(metadataReader, baseConstructorName, baseConstructor, true);\r\n        var metadata = targets.map(function (t) { return t.metadata.filter(function (m) { return m.key === METADATA_KEY.UNMANAGED_TAG; }); });\r\n        var unmanagedCount = [].concat.apply([], metadata).length;\r\n        var dependencyCount = targets.length - unmanagedCount;\r\n        if (dependencyCount > 0) {\r\n            return dependencyCount;\r\n        }\r\n        else {\r\n            return getBaseClassDependencyCount(metadataReader, baseConstructor);\r\n        }\r\n    }\r\n    else {\r\n        return 0;\r\n    }\r\n}\r\nfunction formatTargetMetadata(targetMetadata) {\r\n    var targetMetadataMap = {};\r\n    targetMetadata.forEach(function (m) {\r\n        targetMetadataMap[m.key.toString()] = m.value;\r\n    });\r\n    return {\r\n        inject: targetMetadataMap[METADATA_KEY.INJECT_TAG],\r\n        multiInject: targetMetadataMap[METADATA_KEY.MULTI_INJECT_TAG],\r\n        targetName: targetMetadataMap[METADATA_KEY.NAME_TAG],\r\n        unmanaged: targetMetadataMap[METADATA_KEY.UNMANAGED_TAG]\r\n    };\r\n}\r\nexport { getDependencies, getBaseClassDependencyCount, getFunctionName };\r\n","import { id } from '../utils/id';\r\nvar Request = (function () {\r\n    function Request(serviceIdentifier, parentContext, parentRequest, bindings, target) {\r\n        this.id = id();\r\n        this.serviceIdentifier = serviceIdentifier;\r\n        this.parentContext = parentContext;\r\n        this.parentRequest = parentRequest;\r\n        this.target = target;\r\n        this.childRequests = [];\r\n        this.bindings = (Array.isArray(bindings) ? bindings : [bindings]);\r\n        this.requestScope = parentRequest === null\r\n            ? new Map()\r\n            : null;\r\n    }\r\n    Request.prototype.addChildRequest = function (serviceIdentifier, bindings, target) {\r\n        var child = new Request(serviceIdentifier, this.parentContext, this, bindings, target);\r\n        this.childRequests.push(child);\r\n        return child;\r\n    };\r\n    return Request;\r\n}());\r\nexport { Request };\r\n","import { BindingCount } from '../bindings/binding_count';\r\nimport * as ERROR_MSGS from '../constants/error_msgs';\r\nimport { BindingTypeEnum, TargetTypeEnum } from '../constants/literal_types';\r\nimport * as METADATA_KEY from '../constants/metadata_keys';\r\nimport { isStackOverflowExeption } from '../utils/exceptions';\r\nimport { circularDependencyToException, getServiceIdentifierAsString, listMetadataForTarget, listRegisteredBindingsForServiceIdentifier } from '../utils/serialization';\r\nimport { Context } from './context';\r\nimport { Metadata } from './metadata';\r\nimport { Plan } from './plan';\r\nimport { getBaseClassDependencyCount, getDependencies, getFunctionName } from './reflection_utils';\r\nimport { Request } from './request';\r\nimport { Target } from './target';\r\nfunction getBindingDictionary(cntnr) {\r\n    return cntnr._bindingDictionary;\r\n}\r\nfunction _createTarget(isMultiInject, targetType, serviceIdentifier, name, key, value) {\r\n    var metadataKey = isMultiInject ? METADATA_KEY.MULTI_INJECT_TAG : METADATA_KEY.INJECT_TAG;\r\n    var injectMetadata = new Metadata(metadataKey, serviceIdentifier);\r\n    var target = new Target(targetType, name, serviceIdentifier, injectMetadata);\r\n    if (key !== undefined) {\r\n        var tagMetadata = new Metadata(key, value);\r\n        target.metadata.push(tagMetadata);\r\n    }\r\n    return target;\r\n}\r\nfunction _getActiveBindings(metadataReader, avoidConstraints, context, parentRequest, target) {\r\n    var bindings = getBindings(context.container, target.serviceIdentifier);\r\n    var activeBindings = [];\r\n    if (bindings.length === BindingCount.NoBindingsAvailable &&\r\n        context.container.options.autoBindInjectable &&\r\n        typeof target.serviceIdentifier === 'function' &&\r\n        metadataReader.getConstructorMetadata(target.serviceIdentifier).compilerGeneratedMetadata) {\r\n        context.container.bind(target.serviceIdentifier).toSelf();\r\n        bindings = getBindings(context.container, target.serviceIdentifier);\r\n    }\r\n    if (!avoidConstraints) {\r\n        activeBindings = bindings.filter(function (binding) {\r\n            var request = new Request(binding.serviceIdentifier, context, parentRequest, binding, target);\r\n            return binding.constraint(request);\r\n        });\r\n    }\r\n    else {\r\n        activeBindings = bindings;\r\n    }\r\n    _validateActiveBindingCount(target.serviceIdentifier, activeBindings, target, context.container);\r\n    return activeBindings;\r\n}\r\nfunction _validateActiveBindingCount(serviceIdentifier, bindings, target, container) {\r\n    switch (bindings.length) {\r\n        case BindingCount.NoBindingsAvailable:\r\n            if (target.isOptional()) {\r\n                return bindings;\r\n            }\r\n            else {\r\n                var serviceIdentifierString = getServiceIdentifierAsString(serviceIdentifier);\r\n                var msg = ERROR_MSGS.NOT_REGISTERED;\r\n                msg += listMetadataForTarget(serviceIdentifierString, target);\r\n                msg += listRegisteredBindingsForServiceIdentifier(container, serviceIdentifierString, getBindings);\r\n                throw new Error(msg);\r\n            }\r\n        case BindingCount.OnlyOneBindingAvailable:\r\n            return bindings;\r\n        case BindingCount.MultipleBindingsAvailable:\r\n        default:\r\n            if (!target.isArray()) {\r\n                var serviceIdentifierString = getServiceIdentifierAsString(serviceIdentifier);\r\n                var msg = ERROR_MSGS.AMBIGUOUS_MATCH + \" \" + serviceIdentifierString;\r\n                msg += listRegisteredBindingsForServiceIdentifier(container, serviceIdentifierString, getBindings);\r\n                throw new Error(msg);\r\n            }\r\n            else {\r\n                return bindings;\r\n            }\r\n    }\r\n}\r\nfunction _createSubRequests(metadataReader, avoidConstraints, serviceIdentifier, context, parentRequest, target) {\r\n    var activeBindings;\r\n    var childRequest;\r\n    if (parentRequest === null) {\r\n        activeBindings = _getActiveBindings(metadataReader, avoidConstraints, context, null, target);\r\n        childRequest = new Request(serviceIdentifier, context, null, activeBindings, target);\r\n        var thePlan = new Plan(context, childRequest);\r\n        context.addPlan(thePlan);\r\n    }\r\n    else {\r\n        activeBindings = _getActiveBindings(metadataReader, avoidConstraints, context, parentRequest, target);\r\n        childRequest = parentRequest.addChildRequest(target.serviceIdentifier, activeBindings, target);\r\n    }\r\n    activeBindings.forEach(function (binding) {\r\n        var subChildRequest = null;\r\n        if (target.isArray()) {\r\n            subChildRequest = childRequest.addChildRequest(binding.serviceIdentifier, binding, target);\r\n        }\r\n        else {\r\n            if (binding.cache) {\r\n                return;\r\n            }\r\n            subChildRequest = childRequest;\r\n        }\r\n        if (binding.type === BindingTypeEnum.Instance && binding.implementationType !== null) {\r\n            var dependencies = getDependencies(metadataReader, binding.implementationType);\r\n            if (!context.container.options.skipBaseClassChecks) {\r\n                var baseClassDependencyCount = getBaseClassDependencyCount(metadataReader, binding.implementationType);\r\n                if (dependencies.length < baseClassDependencyCount) {\r\n                    var error = ERROR_MSGS.ARGUMENTS_LENGTH_MISMATCH(getFunctionName(binding.implementationType));\r\n                    throw new Error(error);\r\n                }\r\n            }\r\n            dependencies.forEach(function (dependency) {\r\n                _createSubRequests(metadataReader, false, dependency.serviceIdentifier, context, subChildRequest, dependency);\r\n            });\r\n        }\r\n    });\r\n}\r\nfunction getBindings(container, serviceIdentifier) {\r\n    var bindings = [];\r\n    var bindingDictionary = getBindingDictionary(container);\r\n    if (bindingDictionary.hasKey(serviceIdentifier)) {\r\n        bindings = bindingDictionary.get(serviceIdentifier);\r\n    }\r\n    else if (container.parent !== null) {\r\n        bindings = getBindings(container.parent, serviceIdentifier);\r\n    }\r\n    return bindings;\r\n}\r\nfunction plan(metadataReader, container, isMultiInject, targetType, serviceIdentifier, key, value, avoidConstraints) {\r\n    if (avoidConstraints === void 0) { avoidConstraints = false; }\r\n    var context = new Context(container);\r\n    var target = _createTarget(isMultiInject, targetType, serviceIdentifier, '', key, value);\r\n    try {\r\n        _createSubRequests(metadataReader, avoidConstraints, serviceIdentifier, context, null, target);\r\n        return context;\r\n    }\r\n    catch (error) {\r\n        if (isStackOverflowExeption(error)) {\r\n            circularDependencyToException(context.plan.rootRequest);\r\n        }\r\n        throw error;\r\n    }\r\n}\r\nfunction createMockRequest(container, serviceIdentifier, key, value) {\r\n    var target = new Target(TargetTypeEnum.Variable, '', serviceIdentifier, new Metadata(key, value));\r\n    var context = new Context(container);\r\n    var request = new Request(serviceIdentifier, context, null, [], target);\r\n    return request;\r\n}\r\nexport { plan, createMockRequest, getBindingDictionary };\r\n","function isPromise(object) {\r\n    var isObjectOrFunction = (typeof object === 'object' && object !== null) || typeof object === 'function';\r\n    return isObjectOrFunction && typeof object.then === \"function\";\r\n}\r\nfunction isPromiseOrContainsPromise(object) {\r\n    if (isPromise(object)) {\r\n        return true;\r\n    }\r\n    return Array.isArray(object) && object.some(isPromise);\r\n}\r\nexport { isPromise, isPromiseOrContainsPromise };\r\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nimport { BindingScopeEnum } from '../constants/literal_types';\r\nimport { isPromise } from '../utils/async';\r\nexport var tryGetFromScope = function (requestScope, binding) {\r\n    if ((binding.scope === BindingScopeEnum.Singleton) && binding.activated) {\r\n        return binding.cache;\r\n    }\r\n    if (binding.scope === BindingScopeEnum.Request &&\r\n        requestScope.has(binding.id)) {\r\n        return requestScope.get(binding.id);\r\n    }\r\n    return null;\r\n};\r\nexport var saveToScope = function (requestScope, binding, result) {\r\n    if (binding.scope === BindingScopeEnum.Singleton) {\r\n        _saveToSingletonScope(binding, result);\r\n    }\r\n    if (binding.scope === BindingScopeEnum.Request) {\r\n        _saveToRequestScope(requestScope, binding, result);\r\n    }\r\n};\r\nvar _saveToRequestScope = function (requestScope, binding, result) {\r\n    if (!requestScope.has(binding.id)) {\r\n        requestScope.set(binding.id, result);\r\n    }\r\n};\r\nvar _saveToSingletonScope = function (binding, result) {\r\n    binding.cache = result;\r\n    binding.activated = true;\r\n    if (isPromise(result)) {\r\n        void _saveAsyncResultToSingletonScope(binding, result);\r\n    }\r\n};\r\nvar _saveAsyncResultToSingletonScope = function (binding, asyncResult) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var result, ex_1;\r\n    return __generator(this, function (_a) {\r\n        switch (_a.label) {\r\n            case 0:\r\n                _a.trys.push([0, 2, , 3]);\r\n                return [4, asyncResult];\r\n            case 1:\r\n                result = _a.sent();\r\n                binding.cache = result;\r\n                return [3, 3];\r\n            case 2:\r\n                ex_1 = _a.sent();\r\n                binding.cache = null;\r\n                binding.activated = false;\r\n                throw ex_1;\r\n            case 3: return [2];\r\n        }\r\n    });\r\n}); };\r\n","export var FactoryType;\r\n(function (FactoryType) {\r\n    FactoryType[\"DynamicValue\"] = \"toDynamicValue\";\r\n    FactoryType[\"Factory\"] = \"toFactory\";\r\n    FactoryType[\"Provider\"] = \"toProvider\";\r\n})(FactoryType || (FactoryType = {}));\r\n","import { getServiceIdentifierAsString } from '../utils/serialization';\r\nimport * as ERROR_MSGS from '../constants/error_msgs';\r\nimport { BindingTypeEnum } from '../constants/literal_types';\r\nimport { FactoryType } from './factory_type';\r\nexport var multiBindToService = function (container) {\r\n    return function (service) {\r\n        return function () {\r\n            var types = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                types[_i] = arguments[_i];\r\n            }\r\n            return types.forEach(function (t) { return container.bind(t).toService(service); });\r\n        };\r\n    };\r\n};\r\nexport var ensureFullyBound = function (binding) {\r\n    var boundValue = null;\r\n    switch (binding.type) {\r\n        case BindingTypeEnum.ConstantValue:\r\n        case BindingTypeEnum.Function:\r\n            boundValue = binding.cache;\r\n            break;\r\n        case BindingTypeEnum.Constructor:\r\n        case BindingTypeEnum.Instance:\r\n            boundValue = binding.implementationType;\r\n            break;\r\n        case BindingTypeEnum.DynamicValue:\r\n            boundValue = binding.dynamicValue;\r\n            break;\r\n        case BindingTypeEnum.Provider:\r\n            boundValue = binding.provider;\r\n            break;\r\n        case BindingTypeEnum.Factory:\r\n            boundValue = binding.factory;\r\n            break;\r\n    }\r\n    if (boundValue === null) {\r\n        var serviceIdentifierAsString = getServiceIdentifierAsString(binding.serviceIdentifier);\r\n        throw new Error(ERROR_MSGS.INVALID_BINDING_TYPE + \" \" + serviceIdentifierAsString);\r\n    }\r\n};\r\nexport var getFactoryDetails = function (binding) {\r\n    switch (binding.type) {\r\n        case BindingTypeEnum.Factory:\r\n            return { factory: binding.factory, factoryType: FactoryType.Factory };\r\n        case BindingTypeEnum.Provider:\r\n            return { factory: binding.provider, factoryType: FactoryType.Provider };\r\n        case BindingTypeEnum.DynamicValue:\r\n            return { factory: binding.dynamicValue, factoryType: FactoryType.DynamicValue };\r\n        default:\r\n            throw new Error(\"Unexpected factory type \" + binding.type);\r\n    }\r\n};\r\n","var __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n};\r\nimport { ON_DEACTIVATION_ERROR, POST_CONSTRUCT_ERROR, PRE_DESTROY_ERROR } from '../constants/error_msgs';\r\nimport { BindingScopeEnum, TargetTypeEnum } from '../constants/literal_types';\r\nimport * as METADATA_KEY from '../constants/metadata_keys';\r\nimport { isPromise, isPromiseOrContainsPromise } from '../utils/async';\r\nfunction _resolveRequests(childRequests, resolveRequest) {\r\n    return childRequests.reduce(function (resolvedRequests, childRequest) {\r\n        var injection = resolveRequest(childRequest);\r\n        var targetType = childRequest.target.type;\r\n        if (targetType === TargetTypeEnum.ConstructorArgument) {\r\n            resolvedRequests.constructorInjections.push(injection);\r\n        }\r\n        else {\r\n            resolvedRequests.propertyRequests.push(childRequest);\r\n            resolvedRequests.propertyInjections.push(injection);\r\n        }\r\n        if (!resolvedRequests.isAsync) {\r\n            resolvedRequests.isAsync = isPromiseOrContainsPromise(injection);\r\n        }\r\n        return resolvedRequests;\r\n    }, { constructorInjections: [], propertyInjections: [], propertyRequests: [], isAsync: false });\r\n}\r\nfunction _createInstance(constr, childRequests, resolveRequest) {\r\n    var result;\r\n    if (childRequests.length > 0) {\r\n        var resolved = _resolveRequests(childRequests, resolveRequest);\r\n        var createInstanceWithInjectionsArg = __assign(__assign({}, resolved), { constr: constr });\r\n        if (resolved.isAsync) {\r\n            result = createInstanceWithInjectionsAsync(createInstanceWithInjectionsArg);\r\n        }\r\n        else {\r\n            result = createInstanceWithInjections(createInstanceWithInjectionsArg);\r\n        }\r\n    }\r\n    else {\r\n        result = new constr();\r\n    }\r\n    return result;\r\n}\r\nfunction createInstanceWithInjections(args) {\r\n    var _a;\r\n    var instance = new ((_a = args.constr).bind.apply(_a, __spreadArray([void 0], args.constructorInjections, false)))();\r\n    args.propertyRequests.forEach(function (r, index) {\r\n        var property = r.target.identifier;\r\n        var injection = args.propertyInjections[index];\r\n        if (!r.target.isOptional() || injection !== undefined) {\r\n            instance[property] = injection;\r\n        }\r\n    });\r\n    return instance;\r\n}\r\nfunction createInstanceWithInjectionsAsync(args) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var constructorInjections, propertyInjections;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4, possiblyWaitInjections(args.constructorInjections)];\r\n                case 1:\r\n                    constructorInjections = _a.sent();\r\n                    return [4, possiblyWaitInjections(args.propertyInjections)];\r\n                case 2:\r\n                    propertyInjections = _a.sent();\r\n                    return [2, createInstanceWithInjections(__assign(__assign({}, args), { constructorInjections: constructorInjections, propertyInjections: propertyInjections }))];\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction possiblyWaitInjections(possiblePromiseinjections) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var injections, _i, possiblePromiseinjections_1, injection;\r\n        return __generator(this, function (_a) {\r\n            injections = [];\r\n            for (_i = 0, possiblePromiseinjections_1 = possiblePromiseinjections; _i < possiblePromiseinjections_1.length; _i++) {\r\n                injection = possiblePromiseinjections_1[_i];\r\n                if (Array.isArray(injection)) {\r\n                    injections.push(Promise.all(injection));\r\n                }\r\n                else {\r\n                    injections.push(injection);\r\n                }\r\n            }\r\n            return [2, Promise.all(injections)];\r\n        });\r\n    });\r\n}\r\nfunction _getInstanceAfterPostConstruct(constr, result) {\r\n    var postConstructResult = _postConstruct(constr, result);\r\n    if (isPromise(postConstructResult)) {\r\n        return postConstructResult.then(function () { return result; });\r\n    }\r\n    else {\r\n        return result;\r\n    }\r\n}\r\nfunction _postConstruct(constr, instance) {\r\n    var _a, _b;\r\n    if (Reflect.hasMetadata(METADATA_KEY.POST_CONSTRUCT, constr)) {\r\n        var data = Reflect.getMetadata(METADATA_KEY.POST_CONSTRUCT, constr);\r\n        try {\r\n            return (_b = (_a = instance)[data.value]) === null || _b === void 0 ? void 0 : _b.call(_a);\r\n        }\r\n        catch (e) {\r\n            if (e instanceof Error) {\r\n                throw new Error(POST_CONSTRUCT_ERROR(constr.name, e.message));\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction _validateInstanceResolution(binding, constr) {\r\n    if (binding.scope !== BindingScopeEnum.Singleton) {\r\n        _throwIfHandlingDeactivation(binding, constr);\r\n    }\r\n}\r\nfunction _throwIfHandlingDeactivation(binding, constr) {\r\n    var scopeErrorMessage = \"Class cannot be instantiated in \" + (binding.scope === BindingScopeEnum.Request ?\r\n        'request' :\r\n        'transient') + \" scope.\";\r\n    if (typeof binding.onDeactivation === 'function') {\r\n        throw new Error(ON_DEACTIVATION_ERROR(constr.name, scopeErrorMessage));\r\n    }\r\n    if (Reflect.hasMetadata(METADATA_KEY.PRE_DESTROY, constr)) {\r\n        throw new Error(PRE_DESTROY_ERROR(constr.name, scopeErrorMessage));\r\n    }\r\n}\r\nfunction resolveInstance(binding, constr, childRequests, resolveRequest) {\r\n    _validateInstanceResolution(binding, constr);\r\n    var result = _createInstance(constr, childRequests, resolveRequest);\r\n    if (isPromise(result)) {\r\n        return result.then(function (resolvedResult) { return _getInstanceAfterPostConstruct(constr, resolvedResult); });\r\n    }\r\n    else {\r\n        return _getInstanceAfterPostConstruct(constr, result);\r\n    }\r\n}\r\nexport { resolveInstance };\r\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nimport * as ERROR_MSGS from '../constants/error_msgs';\r\nimport { BindingTypeEnum } from '../constants/literal_types';\r\nimport { getBindingDictionary } from '../planning/planner';\r\nimport { saveToScope, tryGetFromScope } from '../scope/scope';\r\nimport { isPromise } from '../utils/async';\r\nimport { getFactoryDetails, ensureFullyBound } from '../utils/binding_utils';\r\nimport { tryAndThrowErrorIfStackOverflow } from '../utils/exceptions';\r\nimport { resolveInstance } from './instantiation';\r\nvar _resolveRequest = function (requestScope) {\r\n    return function (request) {\r\n        request.parentContext.setCurrentRequest(request);\r\n        var bindings = request.bindings;\r\n        var childRequests = request.childRequests;\r\n        var targetIsAnArray = request.target && request.target.isArray();\r\n        var targetParentIsNotAnArray = !request.parentRequest ||\r\n            !request.parentRequest.target ||\r\n            !request.target ||\r\n            !request.parentRequest.target.matchesArray(request.target.serviceIdentifier);\r\n        if (targetIsAnArray && targetParentIsNotAnArray) {\r\n            return childRequests.map(function (childRequest) {\r\n                var _f = _resolveRequest(requestScope);\r\n                return _f(childRequest);\r\n            });\r\n        }\r\n        else {\r\n            if (request.target.isOptional() && bindings.length === 0) {\r\n                return undefined;\r\n            }\r\n            var binding = bindings[0];\r\n            return _resolveBinding(requestScope, request, binding);\r\n        }\r\n    };\r\n};\r\nvar _resolveFactoryFromBinding = function (binding, context) {\r\n    var factoryDetails = getFactoryDetails(binding);\r\n    return tryAndThrowErrorIfStackOverflow(function () { return factoryDetails.factory.bind(binding)(context); }, function () { return new Error(ERROR_MSGS.CIRCULAR_DEPENDENCY_IN_FACTORY(factoryDetails.factoryType, context.currentRequest.serviceIdentifier.toString())); });\r\n};\r\nvar _getResolvedFromBinding = function (requestScope, request, binding) {\r\n    var result;\r\n    var childRequests = request.childRequests;\r\n    ensureFullyBound(binding);\r\n    switch (binding.type) {\r\n        case BindingTypeEnum.ConstantValue:\r\n        case BindingTypeEnum.Function:\r\n            result = binding.cache;\r\n            break;\r\n        case BindingTypeEnum.Constructor:\r\n            result = binding.implementationType;\r\n            break;\r\n        case BindingTypeEnum.Instance:\r\n            result = resolveInstance(binding, binding.implementationType, childRequests, _resolveRequest(requestScope));\r\n            break;\r\n        default:\r\n            result = _resolveFactoryFromBinding(binding, request.parentContext);\r\n    }\r\n    return result;\r\n};\r\nvar _resolveInScope = function (requestScope, binding, resolveFromBinding) {\r\n    var result = tryGetFromScope(requestScope, binding);\r\n    if (result !== null) {\r\n        return result;\r\n    }\r\n    result = resolveFromBinding();\r\n    saveToScope(requestScope, binding, result);\r\n    return result;\r\n};\r\nvar _resolveBinding = function (requestScope, request, binding) {\r\n    return _resolveInScope(requestScope, binding, function () {\r\n        var result = _getResolvedFromBinding(requestScope, request, binding);\r\n        if (isPromise(result)) {\r\n            result = result.then(function (resolved) { return _onActivation(request, binding, resolved); });\r\n        }\r\n        else {\r\n            result = _onActivation(request, binding, result);\r\n        }\r\n        return result;\r\n    });\r\n};\r\nfunction _onActivation(request, binding, resolved) {\r\n    var result = _bindingActivation(request.parentContext, binding, resolved);\r\n    var containersIterator = _getContainersIterator(request.parentContext.container);\r\n    var container;\r\n    var containersIteratorResult = containersIterator.next();\r\n    do {\r\n        container = containersIteratorResult.value;\r\n        var context_1 = request.parentContext;\r\n        var serviceIdentifier = request.serviceIdentifier;\r\n        var activationsIterator = _getContainerActivationsForService(container, serviceIdentifier);\r\n        if (isPromise(result)) {\r\n            result = _activateContainerAsync(activationsIterator, context_1, result);\r\n        }\r\n        else {\r\n            result = _activateContainer(activationsIterator, context_1, result);\r\n        }\r\n        containersIteratorResult = containersIterator.next();\r\n    } while (containersIteratorResult.done !== true && !getBindingDictionary(container).hasKey(request.serviceIdentifier));\r\n    return result;\r\n}\r\nvar _bindingActivation = function (context, binding, previousResult) {\r\n    var result;\r\n    if (typeof binding.onActivation === 'function') {\r\n        result = binding.onActivation(context, previousResult);\r\n    }\r\n    else {\r\n        result = previousResult;\r\n    }\r\n    return result;\r\n};\r\nvar _activateContainer = function (activationsIterator, context, result) {\r\n    var activation = activationsIterator.next();\r\n    while (!activation.done) {\r\n        result = activation.value(context, result);\r\n        if (isPromise(result)) {\r\n            return _activateContainerAsync(activationsIterator, context, result);\r\n        }\r\n        activation = activationsIterator.next();\r\n    }\r\n    return result;\r\n};\r\nvar _activateContainerAsync = function (activationsIterator, context, resultPromise) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var result, activation;\r\n    return __generator(this, function (_a) {\r\n        switch (_a.label) {\r\n            case 0: return [4, resultPromise];\r\n            case 1:\r\n                result = _a.sent();\r\n                activation = activationsIterator.next();\r\n                _a.label = 2;\r\n            case 2:\r\n                if (!!activation.done) return [3, 4];\r\n                return [4, activation.value(context, result)];\r\n            case 3:\r\n                result = _a.sent();\r\n                activation = activationsIterator.next();\r\n                return [3, 2];\r\n            case 4: return [2, result];\r\n        }\r\n    });\r\n}); };\r\nvar _getContainerActivationsForService = function (container, serviceIdentifier) {\r\n    var activations = container._activations;\r\n    return activations.hasKey(serviceIdentifier) ? activations.get(serviceIdentifier).values() : [].values();\r\n};\r\nvar _getContainersIterator = function (container) {\r\n    var containersStack = [container];\r\n    var parent = container.parent;\r\n    while (parent !== null) {\r\n        containersStack.push(parent);\r\n        parent = parent.parent;\r\n    }\r\n    var getNextContainer = function () {\r\n        var nextContainer = containersStack.pop();\r\n        if (nextContainer !== undefined) {\r\n            return { done: false, value: nextContainer };\r\n        }\r\n        else {\r\n            return { done: true, value: undefined };\r\n        }\r\n    };\r\n    var containersIterator = {\r\n        next: getNextContainer,\r\n    };\r\n    return containersIterator;\r\n};\r\nfunction resolve(context) {\r\n    var _f = _resolveRequest(context.plan.rootRequest.requestScope);\r\n    return _f(context.plan.rootRequest);\r\n}\r\nexport { resolve };\r\n","import * as METADATA_KEY from '../constants/metadata_keys';\r\nimport { Metadata } from '../planning/metadata';\r\nvar traverseAncerstors = function (request, constraint) {\r\n    var parent = request.parentRequest;\r\n    if (parent !== null) {\r\n        return constraint(parent) ? true : traverseAncerstors(parent, constraint);\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n};\r\nvar taggedConstraint = function (key) { return function (value) {\r\n    var constraint = function (request) {\r\n        return request !== null && request.target !== null && request.target.matchesTag(key)(value);\r\n    };\r\n    constraint.metaData = new Metadata(key, value);\r\n    return constraint;\r\n}; };\r\nvar namedConstraint = taggedConstraint(METADATA_KEY.NAMED_TAG);\r\nvar typeConstraint = function (type) { return function (request) {\r\n    var binding = null;\r\n    if (request !== null) {\r\n        binding = request.bindings[0];\r\n        if (typeof type === 'string') {\r\n            var serviceIdentifier = binding.serviceIdentifier;\r\n            return serviceIdentifier === type;\r\n        }\r\n        else {\r\n            var constructor = request.bindings[0].implementationType;\r\n            return type === constructor;\r\n        }\r\n    }\r\n    return false;\r\n}; };\r\nexport { traverseAncerstors, taggedConstraint, namedConstraint, typeConstraint };\r\n","import { BindingOnSyntax } from './binding_on_syntax';\r\nimport { namedConstraint, taggedConstraint, traverseAncerstors, typeConstraint } from './constraint_helpers';\r\nvar BindingWhenSyntax = (function () {\r\n    function BindingWhenSyntax(binding) {\r\n        this._binding = binding;\r\n    }\r\n    BindingWhenSyntax.prototype.when = function (constraint) {\r\n        this._binding.constraint = constraint;\r\n        return new BindingOnSyntax(this._binding);\r\n    };\r\n    BindingWhenSyntax.prototype.whenTargetNamed = function (name) {\r\n        this._binding.constraint = namedConstraint(name);\r\n        return new BindingOnSyntax(this._binding);\r\n    };\r\n    BindingWhenSyntax.prototype.whenTargetIsDefault = function () {\r\n        this._binding.constraint = function (request) {\r\n            if (request === null) {\r\n                return false;\r\n            }\r\n            var targetIsDefault = (request.target !== null) &&\r\n                (!request.target.isNamed()) &&\r\n                (!request.target.isTagged());\r\n            return targetIsDefault;\r\n        };\r\n        return new BindingOnSyntax(this._binding);\r\n    };\r\n    BindingWhenSyntax.prototype.whenTargetTagged = function (tag, value) {\r\n        this._binding.constraint = taggedConstraint(tag)(value);\r\n        return new BindingOnSyntax(this._binding);\r\n    };\r\n    BindingWhenSyntax.prototype.whenInjectedInto = function (parent) {\r\n        this._binding.constraint = function (request) {\r\n            return request !== null && typeConstraint(parent)(request.parentRequest);\r\n        };\r\n        return new BindingOnSyntax(this._binding);\r\n    };\r\n    BindingWhenSyntax.prototype.whenParentNamed = function (name) {\r\n        this._binding.constraint = function (request) {\r\n            return request !== null && namedConstraint(name)(request.parentRequest);\r\n        };\r\n        return new BindingOnSyntax(this._binding);\r\n    };\r\n    BindingWhenSyntax.prototype.whenParentTagged = function (tag, value) {\r\n        this._binding.constraint = function (request) {\r\n            return request !== null && taggedConstraint(tag)(value)(request.parentRequest);\r\n        };\r\n        return new BindingOnSyntax(this._binding);\r\n    };\r\n    BindingWhenSyntax.prototype.whenAnyAncestorIs = function (ancestor) {\r\n        this._binding.constraint = function (request) {\r\n            return request !== null && traverseAncerstors(request, typeConstraint(ancestor));\r\n        };\r\n        return new BindingOnSyntax(this._binding);\r\n    };\r\n    BindingWhenSyntax.prototype.whenNoAncestorIs = function (ancestor) {\r\n        this._binding.constraint = function (request) {\r\n            return request !== null && !traverseAncerstors(request, typeConstraint(ancestor));\r\n        };\r\n        return new BindingOnSyntax(this._binding);\r\n    };\r\n    BindingWhenSyntax.prototype.whenAnyAncestorNamed = function (name) {\r\n        this._binding.constraint = function (request) {\r\n            return request !== null && traverseAncerstors(request, namedConstraint(name));\r\n        };\r\n        return new BindingOnSyntax(this._binding);\r\n    };\r\n    BindingWhenSyntax.prototype.whenNoAncestorNamed = function (name) {\r\n        this._binding.constraint = function (request) {\r\n            return request !== null && !traverseAncerstors(request, namedConstraint(name));\r\n        };\r\n        return new BindingOnSyntax(this._binding);\r\n    };\r\n    BindingWhenSyntax.prototype.whenAnyAncestorTagged = function (tag, value) {\r\n        this._binding.constraint = function (request) {\r\n            return request !== null && traverseAncerstors(request, taggedConstraint(tag)(value));\r\n        };\r\n        return new BindingOnSyntax(this._binding);\r\n    };\r\n    BindingWhenSyntax.prototype.whenNoAncestorTagged = function (tag, value) {\r\n        this._binding.constraint = function (request) {\r\n            return request !== null && !traverseAncerstors(request, taggedConstraint(tag)(value));\r\n        };\r\n        return new BindingOnSyntax(this._binding);\r\n    };\r\n    BindingWhenSyntax.prototype.whenAnyAncestorMatches = function (constraint) {\r\n        this._binding.constraint = function (request) {\r\n            return request !== null && traverseAncerstors(request, constraint);\r\n        };\r\n        return new BindingOnSyntax(this._binding);\r\n    };\r\n    BindingWhenSyntax.prototype.whenNoAncestorMatches = function (constraint) {\r\n        this._binding.constraint = function (request) {\r\n            return request !== null && !traverseAncerstors(request, constraint);\r\n        };\r\n        return new BindingOnSyntax(this._binding);\r\n    };\r\n    return BindingWhenSyntax;\r\n}());\r\nexport { BindingWhenSyntax };\r\n","import { BindingWhenSyntax } from './binding_when_syntax';\r\nvar BindingOnSyntax = (function () {\r\n    function BindingOnSyntax(binding) {\r\n        this._binding = binding;\r\n    }\r\n    BindingOnSyntax.prototype.onActivation = function (handler) {\r\n        this._binding.onActivation = handler;\r\n        return new BindingWhenSyntax(this._binding);\r\n    };\r\n    BindingOnSyntax.prototype.onDeactivation = function (handler) {\r\n        this._binding.onDeactivation = handler;\r\n        return new BindingWhenSyntax(this._binding);\r\n    };\r\n    return BindingOnSyntax;\r\n}());\r\nexport { BindingOnSyntax };\r\n","import { BindingOnSyntax } from './binding_on_syntax';\r\nimport { BindingWhenSyntax } from './binding_when_syntax';\r\nvar BindingWhenOnSyntax = (function () {\r\n    function BindingWhenOnSyntax(binding) {\r\n        this._binding = binding;\r\n        this._bindingWhenSyntax = new BindingWhenSyntax(this._binding);\r\n        this._bindingOnSyntax = new BindingOnSyntax(this._binding);\r\n    }\r\n    BindingWhenOnSyntax.prototype.when = function (constraint) {\r\n        return this._bindingWhenSyntax.when(constraint);\r\n    };\r\n    BindingWhenOnSyntax.prototype.whenTargetNamed = function (name) {\r\n        return this._bindingWhenSyntax.whenTargetNamed(name);\r\n    };\r\n    BindingWhenOnSyntax.prototype.whenTargetIsDefault = function () {\r\n        return this._bindingWhenSyntax.whenTargetIsDefault();\r\n    };\r\n    BindingWhenOnSyntax.prototype.whenTargetTagged = function (tag, value) {\r\n        return this._bindingWhenSyntax.whenTargetTagged(tag, value);\r\n    };\r\n    BindingWhenOnSyntax.prototype.whenInjectedInto = function (parent) {\r\n        return this._bindingWhenSyntax.whenInjectedInto(parent);\r\n    };\r\n    BindingWhenOnSyntax.prototype.whenParentNamed = function (name) {\r\n        return this._bindingWhenSyntax.whenParentNamed(name);\r\n    };\r\n    BindingWhenOnSyntax.prototype.whenParentTagged = function (tag, value) {\r\n        return this._bindingWhenSyntax.whenParentTagged(tag, value);\r\n    };\r\n    BindingWhenOnSyntax.prototype.whenAnyAncestorIs = function (ancestor) {\r\n        return this._bindingWhenSyntax.whenAnyAncestorIs(ancestor);\r\n    };\r\n    BindingWhenOnSyntax.prototype.whenNoAncestorIs = function (ancestor) {\r\n        return this._bindingWhenSyntax.whenNoAncestorIs(ancestor);\r\n    };\r\n    BindingWhenOnSyntax.prototype.whenAnyAncestorNamed = function (name) {\r\n        return this._bindingWhenSyntax.whenAnyAncestorNamed(name);\r\n    };\r\n    BindingWhenOnSyntax.prototype.whenAnyAncestorTagged = function (tag, value) {\r\n        return this._bindingWhenSyntax.whenAnyAncestorTagged(tag, value);\r\n    };\r\n    BindingWhenOnSyntax.prototype.whenNoAncestorNamed = function (name) {\r\n        return this._bindingWhenSyntax.whenNoAncestorNamed(name);\r\n    };\r\n    BindingWhenOnSyntax.prototype.whenNoAncestorTagged = function (tag, value) {\r\n        return this._bindingWhenSyntax.whenNoAncestorTagged(tag, value);\r\n    };\r\n    BindingWhenOnSyntax.prototype.whenAnyAncestorMatches = function (constraint) {\r\n        return this._bindingWhenSyntax.whenAnyAncestorMatches(constraint);\r\n    };\r\n    BindingWhenOnSyntax.prototype.whenNoAncestorMatches = function (constraint) {\r\n        return this._bindingWhenSyntax.whenNoAncestorMatches(constraint);\r\n    };\r\n    BindingWhenOnSyntax.prototype.onActivation = function (handler) {\r\n        return this._bindingOnSyntax.onActivation(handler);\r\n    };\r\n    BindingWhenOnSyntax.prototype.onDeactivation = function (handler) {\r\n        return this._bindingOnSyntax.onDeactivation(handler);\r\n    };\r\n    return BindingWhenOnSyntax;\r\n}());\r\nexport { BindingWhenOnSyntax };\r\n","import { BindingScopeEnum } from '../constants/literal_types';\r\nimport { BindingWhenOnSyntax } from './binding_when_on_syntax';\r\nvar BindingInSyntax = (function () {\r\n    function BindingInSyntax(binding) {\r\n        this._binding = binding;\r\n    }\r\n    BindingInSyntax.prototype.inRequestScope = function () {\r\n        this._binding.scope = BindingScopeEnum.Request;\r\n        return new BindingWhenOnSyntax(this._binding);\r\n    };\r\n    BindingInSyntax.prototype.inSingletonScope = function () {\r\n        this._binding.scope = BindingScopeEnum.Singleton;\r\n        return new BindingWhenOnSyntax(this._binding);\r\n    };\r\n    BindingInSyntax.prototype.inTransientScope = function () {\r\n        this._binding.scope = BindingScopeEnum.Transient;\r\n        return new BindingWhenOnSyntax(this._binding);\r\n    };\r\n    return BindingInSyntax;\r\n}());\r\nexport { BindingInSyntax };\r\n","import { BindingInSyntax } from './binding_in_syntax';\r\nimport { BindingOnSyntax } from './binding_on_syntax';\r\nimport { BindingWhenSyntax } from './binding_when_syntax';\r\nvar BindingInWhenOnSyntax = (function () {\r\n    function BindingInWhenOnSyntax(binding) {\r\n        this._binding = binding;\r\n        this._bindingWhenSyntax = new BindingWhenSyntax(this._binding);\r\n        this._bindingOnSyntax = new BindingOnSyntax(this._binding);\r\n        this._bindingInSyntax = new BindingInSyntax(binding);\r\n    }\r\n    BindingInWhenOnSyntax.prototype.inRequestScope = function () {\r\n        return this._bindingInSyntax.inRequestScope();\r\n    };\r\n    BindingInWhenOnSyntax.prototype.inSingletonScope = function () {\r\n        return this._bindingInSyntax.inSingletonScope();\r\n    };\r\n    BindingInWhenOnSyntax.prototype.inTransientScope = function () {\r\n        return this._bindingInSyntax.inTransientScope();\r\n    };\r\n    BindingInWhenOnSyntax.prototype.when = function (constraint) {\r\n        return this._bindingWhenSyntax.when(constraint);\r\n    };\r\n    BindingInWhenOnSyntax.prototype.whenTargetNamed = function (name) {\r\n        return this._bindingWhenSyntax.whenTargetNamed(name);\r\n    };\r\n    BindingInWhenOnSyntax.prototype.whenTargetIsDefault = function () {\r\n        return this._bindingWhenSyntax.whenTargetIsDefault();\r\n    };\r\n    BindingInWhenOnSyntax.prototype.whenTargetTagged = function (tag, value) {\r\n        return this._bindingWhenSyntax.whenTargetTagged(tag, value);\r\n    };\r\n    BindingInWhenOnSyntax.prototype.whenInjectedInto = function (parent) {\r\n        return this._bindingWhenSyntax.whenInjectedInto(parent);\r\n    };\r\n    BindingInWhenOnSyntax.prototype.whenParentNamed = function (name) {\r\n        return this._bindingWhenSyntax.whenParentNamed(name);\r\n    };\r\n    BindingInWhenOnSyntax.prototype.whenParentTagged = function (tag, value) {\r\n        return this._bindingWhenSyntax.whenParentTagged(tag, value);\r\n    };\r\n    BindingInWhenOnSyntax.prototype.whenAnyAncestorIs = function (ancestor) {\r\n        return this._bindingWhenSyntax.whenAnyAncestorIs(ancestor);\r\n    };\r\n    BindingInWhenOnSyntax.prototype.whenNoAncestorIs = function (ancestor) {\r\n        return this._bindingWhenSyntax.whenNoAncestorIs(ancestor);\r\n    };\r\n    BindingInWhenOnSyntax.prototype.whenAnyAncestorNamed = function (name) {\r\n        return this._bindingWhenSyntax.whenAnyAncestorNamed(name);\r\n    };\r\n    BindingInWhenOnSyntax.prototype.whenAnyAncestorTagged = function (tag, value) {\r\n        return this._bindingWhenSyntax.whenAnyAncestorTagged(tag, value);\r\n    };\r\n    BindingInWhenOnSyntax.prototype.whenNoAncestorNamed = function (name) {\r\n        return this._bindingWhenSyntax.whenNoAncestorNamed(name);\r\n    };\r\n    BindingInWhenOnSyntax.prototype.whenNoAncestorTagged = function (tag, value) {\r\n        return this._bindingWhenSyntax.whenNoAncestorTagged(tag, value);\r\n    };\r\n    BindingInWhenOnSyntax.prototype.whenAnyAncestorMatches = function (constraint) {\r\n        return this._bindingWhenSyntax.whenAnyAncestorMatches(constraint);\r\n    };\r\n    BindingInWhenOnSyntax.prototype.whenNoAncestorMatches = function (constraint) {\r\n        return this._bindingWhenSyntax.whenNoAncestorMatches(constraint);\r\n    };\r\n    BindingInWhenOnSyntax.prototype.onActivation = function (handler) {\r\n        return this._bindingOnSyntax.onActivation(handler);\r\n    };\r\n    BindingInWhenOnSyntax.prototype.onDeactivation = function (handler) {\r\n        return this._bindingOnSyntax.onDeactivation(handler);\r\n    };\r\n    return BindingInWhenOnSyntax;\r\n}());\r\nexport { BindingInWhenOnSyntax };\r\n","import * as ERROR_MSGS from \"../constants/error_msgs\";\r\nimport { BindingScopeEnum, BindingTypeEnum } from \"../constants/literal_types\";\r\nimport { BindingInWhenOnSyntax } from \"./binding_in_when_on_syntax\";\r\nimport { BindingWhenOnSyntax } from \"./binding_when_on_syntax\";\r\nvar BindingToSyntax = (function () {\r\n    function BindingToSyntax(binding) {\r\n        this._binding = binding;\r\n    }\r\n    BindingToSyntax.prototype.to = function (constructor) {\r\n        this._binding.type = BindingTypeEnum.Instance;\r\n        this._binding.implementationType = constructor;\r\n        return new BindingInWhenOnSyntax(this._binding);\r\n    };\r\n    BindingToSyntax.prototype.toSelf = function () {\r\n        if (typeof this._binding.serviceIdentifier !== \"function\") {\r\n            throw new Error(\"\" + ERROR_MSGS.INVALID_TO_SELF_VALUE);\r\n        }\r\n        var self = this._binding.serviceIdentifier;\r\n        return this.to(self);\r\n    };\r\n    BindingToSyntax.prototype.toConstantValue = function (value) {\r\n        this._binding.type = BindingTypeEnum.ConstantValue;\r\n        this._binding.cache = value;\r\n        this._binding.dynamicValue = null;\r\n        this._binding.implementationType = null;\r\n        this._binding.scope = BindingScopeEnum.Singleton;\r\n        return new BindingWhenOnSyntax(this._binding);\r\n    };\r\n    BindingToSyntax.prototype.toDynamicValue = function (func) {\r\n        this._binding.type = BindingTypeEnum.DynamicValue;\r\n        this._binding.cache = null;\r\n        this._binding.dynamicValue = func;\r\n        this._binding.implementationType = null;\r\n        return new BindingInWhenOnSyntax(this._binding);\r\n    };\r\n    BindingToSyntax.prototype.toConstructor = function (constructor) {\r\n        this._binding.type = BindingTypeEnum.Constructor;\r\n        this._binding.implementationType = constructor;\r\n        this._binding.scope = BindingScopeEnum.Singleton;\r\n        return new BindingWhenOnSyntax(this._binding);\r\n    };\r\n    BindingToSyntax.prototype.toFactory = function (factory) {\r\n        this._binding.type = BindingTypeEnum.Factory;\r\n        this._binding.factory = factory;\r\n        this._binding.scope = BindingScopeEnum.Singleton;\r\n        return new BindingWhenOnSyntax(this._binding);\r\n    };\r\n    BindingToSyntax.prototype.toFunction = function (func) {\r\n        if (typeof func !== \"function\") {\r\n            throw new Error(ERROR_MSGS.INVALID_FUNCTION_BINDING);\r\n        }\r\n        var bindingWhenOnSyntax = this.toConstantValue(func);\r\n        this._binding.type = BindingTypeEnum.Function;\r\n        this._binding.scope = BindingScopeEnum.Singleton;\r\n        return bindingWhenOnSyntax;\r\n    };\r\n    BindingToSyntax.prototype.toAutoFactory = function (serviceIdentifier) {\r\n        this._binding.type = BindingTypeEnum.Factory;\r\n        this._binding.factory = function (context) {\r\n            var autofactory = function () { return context.container.get(serviceIdentifier); };\r\n            return autofactory;\r\n        };\r\n        this._binding.scope = BindingScopeEnum.Singleton;\r\n        return new BindingWhenOnSyntax(this._binding);\r\n    };\r\n    BindingToSyntax.prototype.toAutoNamedFactory = function (serviceIdentifier) {\r\n        this._binding.type = BindingTypeEnum.Factory;\r\n        this._binding.factory = function (context) {\r\n            return function (named) { return context.container.getNamed(serviceIdentifier, named); };\r\n        };\r\n        return new BindingWhenOnSyntax(this._binding);\r\n    };\r\n    BindingToSyntax.prototype.toProvider = function (provider) {\r\n        this._binding.type = BindingTypeEnum.Provider;\r\n        this._binding.provider = provider;\r\n        this._binding.scope = BindingScopeEnum.Singleton;\r\n        return new BindingWhenOnSyntax(this._binding);\r\n    };\r\n    BindingToSyntax.prototype.toService = function (service) {\r\n        this.toDynamicValue(function (context) { return context.container.get(service); });\r\n    };\r\n    return BindingToSyntax;\r\n}());\r\nexport { BindingToSyntax };\r\n","var ContainerSnapshot = (function () {\r\n    function ContainerSnapshot() {\r\n    }\r\n    ContainerSnapshot.of = function (bindings, middleware, activations, deactivations, moduleActivationStore) {\r\n        var snapshot = new ContainerSnapshot();\r\n        snapshot.bindings = bindings;\r\n        snapshot.middleware = middleware;\r\n        snapshot.deactivations = deactivations;\r\n        snapshot.activations = activations;\r\n        snapshot.moduleActivationStore = moduleActivationStore;\r\n        return snapshot;\r\n    };\r\n    return ContainerSnapshot;\r\n}());\r\nexport { ContainerSnapshot };\r\n","import * as ERROR_MSGS from '../constants/error_msgs';\r\nimport { isClonable } from '../utils/clonable';\r\nvar Lookup = (function () {\r\n    function Lookup() {\r\n        this._map = new Map();\r\n    }\r\n    Lookup.prototype.getMap = function () {\r\n        return this._map;\r\n    };\r\n    Lookup.prototype.add = function (serviceIdentifier, value) {\r\n        if (serviceIdentifier === null || serviceIdentifier === undefined) {\r\n            throw new Error(ERROR_MSGS.NULL_ARGUMENT);\r\n        }\r\n        if (value === null || value === undefined) {\r\n            throw new Error(ERROR_MSGS.NULL_ARGUMENT);\r\n        }\r\n        var entry = this._map.get(serviceIdentifier);\r\n        if (entry !== undefined) {\r\n            entry.push(value);\r\n        }\r\n        else {\r\n            this._map.set(serviceIdentifier, [value]);\r\n        }\r\n    };\r\n    Lookup.prototype.get = function (serviceIdentifier) {\r\n        if (serviceIdentifier === null || serviceIdentifier === undefined) {\r\n            throw new Error(ERROR_MSGS.NULL_ARGUMENT);\r\n        }\r\n        var entry = this._map.get(serviceIdentifier);\r\n        if (entry !== undefined) {\r\n            return entry;\r\n        }\r\n        else {\r\n            throw new Error(ERROR_MSGS.KEY_NOT_FOUND);\r\n        }\r\n    };\r\n    Lookup.prototype.remove = function (serviceIdentifier) {\r\n        if (serviceIdentifier === null || serviceIdentifier === undefined) {\r\n            throw new Error(ERROR_MSGS.NULL_ARGUMENT);\r\n        }\r\n        if (!this._map.delete(serviceIdentifier)) {\r\n            throw new Error(ERROR_MSGS.KEY_NOT_FOUND);\r\n        }\r\n    };\r\n    Lookup.prototype.removeIntersection = function (lookup) {\r\n        var _this = this;\r\n        this.traverse(function (serviceIdentifier, value) {\r\n            var lookupActivations = lookup.hasKey(serviceIdentifier) ? lookup.get(serviceIdentifier) : undefined;\r\n            if (lookupActivations !== undefined) {\r\n                var filteredValues = value.filter(function (lookupValue) {\r\n                    return !lookupActivations.some(function (moduleActivation) { return lookupValue === moduleActivation; });\r\n                });\r\n                _this._setValue(serviceIdentifier, filteredValues);\r\n            }\r\n        });\r\n    };\r\n    Lookup.prototype.removeByCondition = function (condition) {\r\n        var _this = this;\r\n        var removals = [];\r\n        this._map.forEach(function (entries, key) {\r\n            var updatedEntries = [];\r\n            for (var _i = 0, entries_1 = entries; _i < entries_1.length; _i++) {\r\n                var entry = entries_1[_i];\r\n                var remove = condition(entry);\r\n                if (remove) {\r\n                    removals.push(entry);\r\n                }\r\n                else {\r\n                    updatedEntries.push(entry);\r\n                }\r\n            }\r\n            _this._setValue(key, updatedEntries);\r\n        });\r\n        return removals;\r\n    };\r\n    Lookup.prototype.hasKey = function (serviceIdentifier) {\r\n        if (serviceIdentifier === null || serviceIdentifier === undefined) {\r\n            throw new Error(ERROR_MSGS.NULL_ARGUMENT);\r\n        }\r\n        return this._map.has(serviceIdentifier);\r\n    };\r\n    Lookup.prototype.clone = function () {\r\n        var copy = new Lookup();\r\n        this._map.forEach(function (value, key) {\r\n            value.forEach(function (b) { return copy.add(key, isClonable(b) ? b.clone() : b); });\r\n        });\r\n        return copy;\r\n    };\r\n    Lookup.prototype.traverse = function (func) {\r\n        this._map.forEach(function (value, key) {\r\n            func(key, value);\r\n        });\r\n    };\r\n    Lookup.prototype._setValue = function (serviceIdentifier, value) {\r\n        if (value.length > 0) {\r\n            this._map.set(serviceIdentifier, value);\r\n        }\r\n        else {\r\n            this._map.delete(serviceIdentifier);\r\n        }\r\n    };\r\n    return Lookup;\r\n}());\r\nexport { Lookup };\r\n","function isClonable(obj) {\r\n    return (typeof obj === 'object')\r\n        && (obj !== null)\r\n        && ('clone' in obj)\r\n        && typeof obj.clone === 'function';\r\n}\r\nexport { isClonable };\r\n","import { Lookup } from './lookup';\r\nvar ModuleActivationStore = (function () {\r\n    function ModuleActivationStore() {\r\n        this._map = new Map();\r\n    }\r\n    ModuleActivationStore.prototype.remove = function (moduleId) {\r\n        if (this._map.has(moduleId)) {\r\n            var handlers = this._map.get(moduleId);\r\n            this._map.delete(moduleId);\r\n            return handlers;\r\n        }\r\n        return this._getEmptyHandlersStore();\r\n    };\r\n    ModuleActivationStore.prototype.addDeactivation = function (moduleId, serviceIdentifier, onDeactivation) {\r\n        this._getModuleActivationHandlers(moduleId)\r\n            .onDeactivations.add(serviceIdentifier, onDeactivation);\r\n    };\r\n    ModuleActivationStore.prototype.addActivation = function (moduleId, serviceIdentifier, onActivation) {\r\n        this._getModuleActivationHandlers(moduleId)\r\n            .onActivations.add(serviceIdentifier, onActivation);\r\n    };\r\n    ModuleActivationStore.prototype.clone = function () {\r\n        var clone = new ModuleActivationStore();\r\n        this._map.forEach(function (handlersStore, moduleId) {\r\n            clone._map.set(moduleId, {\r\n                onActivations: handlersStore.onActivations.clone(),\r\n                onDeactivations: handlersStore.onDeactivations.clone(),\r\n            });\r\n        });\r\n        return clone;\r\n    };\r\n    ModuleActivationStore.prototype._getModuleActivationHandlers = function (moduleId) {\r\n        var moduleActivationHandlers = this._map.get(moduleId);\r\n        if (moduleActivationHandlers === undefined) {\r\n            moduleActivationHandlers = this._getEmptyHandlersStore();\r\n            this._map.set(moduleId, moduleActivationHandlers);\r\n        }\r\n        return moduleActivationHandlers;\r\n    };\r\n    ModuleActivationStore.prototype._getEmptyHandlersStore = function () {\r\n        var handlersStore = {\r\n            onActivations: new Lookup(),\r\n            onDeactivations: new Lookup()\r\n        };\r\n        return handlersStore;\r\n    };\r\n    return ModuleActivationStore;\r\n}());\r\nexport { ModuleActivationStore };\r\n","var __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n};\r\nimport { Binding } from '../bindings/binding';\r\nimport * as ERROR_MSGS from '../constants/error_msgs';\r\nimport { BindingScopeEnum, TargetTypeEnum } from '../constants/literal_types';\r\nimport * as METADATA_KEY from '../constants/metadata_keys';\r\nimport { MetadataReader } from '../planning/metadata_reader';\r\nimport { createMockRequest, getBindingDictionary, plan } from '../planning/planner';\r\nimport { resolve } from '../resolution/resolver';\r\nimport { BindingToSyntax } from '../syntax/binding_to_syntax';\r\nimport { isPromise, isPromiseOrContainsPromise } from '../utils/async';\r\nimport { id } from '../utils/id';\r\nimport { getServiceIdentifierAsString } from '../utils/serialization';\r\nimport { ContainerSnapshot } from './container_snapshot';\r\nimport { Lookup } from './lookup';\r\nimport { ModuleActivationStore } from './module_activation_store';\r\nvar Container = (function () {\r\n    function Container(containerOptions) {\r\n        var options = containerOptions || {};\r\n        if (typeof options !== 'object') {\r\n            throw new Error(\"\" + ERROR_MSGS.CONTAINER_OPTIONS_MUST_BE_AN_OBJECT);\r\n        }\r\n        if (options.defaultScope === undefined) {\r\n            options.defaultScope = BindingScopeEnum.Transient;\r\n        }\r\n        else if (options.defaultScope !== BindingScopeEnum.Singleton &&\r\n            options.defaultScope !== BindingScopeEnum.Transient &&\r\n            options.defaultScope !== BindingScopeEnum.Request) {\r\n            throw new Error(\"\" + ERROR_MSGS.CONTAINER_OPTIONS_INVALID_DEFAULT_SCOPE);\r\n        }\r\n        if (options.autoBindInjectable === undefined) {\r\n            options.autoBindInjectable = false;\r\n        }\r\n        else if (typeof options.autoBindInjectable !== 'boolean') {\r\n            throw new Error(\"\" + ERROR_MSGS.CONTAINER_OPTIONS_INVALID_AUTO_BIND_INJECTABLE);\r\n        }\r\n        if (options.skipBaseClassChecks === undefined) {\r\n            options.skipBaseClassChecks = false;\r\n        }\r\n        else if (typeof options.skipBaseClassChecks !== 'boolean') {\r\n            throw new Error(\"\" + ERROR_MSGS.CONTAINER_OPTIONS_INVALID_SKIP_BASE_CHECK);\r\n        }\r\n        this.options = {\r\n            autoBindInjectable: options.autoBindInjectable,\r\n            defaultScope: options.defaultScope,\r\n            skipBaseClassChecks: options.skipBaseClassChecks\r\n        };\r\n        this.id = id();\r\n        this._bindingDictionary = new Lookup();\r\n        this._snapshots = [];\r\n        this._middleware = null;\r\n        this._activations = new Lookup();\r\n        this._deactivations = new Lookup();\r\n        this.parent = null;\r\n        this._metadataReader = new MetadataReader();\r\n        this._moduleActivationStore = new ModuleActivationStore();\r\n    }\r\n    Container.merge = function (container1, container2) {\r\n        var containers = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            containers[_i - 2] = arguments[_i];\r\n        }\r\n        var container = new Container();\r\n        var targetContainers = __spreadArray([container1, container2], containers, true).map(function (targetContainer) { return getBindingDictionary(targetContainer); });\r\n        var bindingDictionary = getBindingDictionary(container);\r\n        function copyDictionary(origin, destination) {\r\n            origin.traverse(function (_key, value) {\r\n                value.forEach(function (binding) {\r\n                    destination.add(binding.serviceIdentifier, binding.clone());\r\n                });\r\n            });\r\n        }\r\n        targetContainers.forEach(function (targetBindingDictionary) {\r\n            copyDictionary(targetBindingDictionary, bindingDictionary);\r\n        });\r\n        return container;\r\n    };\r\n    Container.prototype.load = function () {\r\n        var modules = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            modules[_i] = arguments[_i];\r\n        }\r\n        var getHelpers = this._getContainerModuleHelpersFactory();\r\n        for (var _a = 0, modules_1 = modules; _a < modules_1.length; _a++) {\r\n            var currentModule = modules_1[_a];\r\n            var containerModuleHelpers = getHelpers(currentModule.id);\r\n            currentModule.registry(containerModuleHelpers.bindFunction, containerModuleHelpers.unbindFunction, containerModuleHelpers.isboundFunction, containerModuleHelpers.rebindFunction, containerModuleHelpers.unbindAsyncFunction, containerModuleHelpers.onActivationFunction, containerModuleHelpers.onDeactivationFunction);\r\n        }\r\n    };\r\n    Container.prototype.loadAsync = function () {\r\n        var modules = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            modules[_i] = arguments[_i];\r\n        }\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var getHelpers, _a, modules_2, currentModule, containerModuleHelpers;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        getHelpers = this._getContainerModuleHelpersFactory();\r\n                        _a = 0, modules_2 = modules;\r\n                        _b.label = 1;\r\n                    case 1:\r\n                        if (!(_a < modules_2.length)) return [3, 4];\r\n                        currentModule = modules_2[_a];\r\n                        containerModuleHelpers = getHelpers(currentModule.id);\r\n                        return [4, currentModule.registry(containerModuleHelpers.bindFunction, containerModuleHelpers.unbindFunction, containerModuleHelpers.isboundFunction, containerModuleHelpers.rebindFunction, containerModuleHelpers.unbindAsyncFunction, containerModuleHelpers.onActivationFunction, containerModuleHelpers.onDeactivationFunction)];\r\n                    case 2:\r\n                        _b.sent();\r\n                        _b.label = 3;\r\n                    case 3:\r\n                        _a++;\r\n                        return [3, 1];\r\n                    case 4: return [2];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Container.prototype.unload = function () {\r\n        var _this = this;\r\n        var modules = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            modules[_i] = arguments[_i];\r\n        }\r\n        modules.forEach(function (module) {\r\n            var deactivations = _this._removeModuleBindings(module.id);\r\n            _this._deactivateSingletons(deactivations);\r\n            _this._removeModuleHandlers(module.id);\r\n        });\r\n    };\r\n    Container.prototype.unloadAsync = function () {\r\n        var modules = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            modules[_i] = arguments[_i];\r\n        }\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _a, modules_3, module_1, deactivations;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        _a = 0, modules_3 = modules;\r\n                        _b.label = 1;\r\n                    case 1:\r\n                        if (!(_a < modules_3.length)) return [3, 4];\r\n                        module_1 = modules_3[_a];\r\n                        deactivations = this._removeModuleBindings(module_1.id);\r\n                        return [4, this._deactivateSingletonsAsync(deactivations)];\r\n                    case 2:\r\n                        _b.sent();\r\n                        this._removeModuleHandlers(module_1.id);\r\n                        _b.label = 3;\r\n                    case 3:\r\n                        _a++;\r\n                        return [3, 1];\r\n                    case 4: return [2];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Container.prototype.bind = function (serviceIdentifier) {\r\n        var scope = this.options.defaultScope || BindingScopeEnum.Transient;\r\n        var binding = new Binding(serviceIdentifier, scope);\r\n        this._bindingDictionary.add(serviceIdentifier, binding);\r\n        return new BindingToSyntax(binding);\r\n    };\r\n    Container.prototype.rebind = function (serviceIdentifier) {\r\n        this.unbind(serviceIdentifier);\r\n        return this.bind(serviceIdentifier);\r\n    };\r\n    Container.prototype.rebindAsync = function (serviceIdentifier) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4, this.unbindAsync(serviceIdentifier)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2, this.bind(serviceIdentifier)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Container.prototype.unbind = function (serviceIdentifier) {\r\n        if (this._bindingDictionary.hasKey(serviceIdentifier)) {\r\n            var bindings = this._bindingDictionary.get(serviceIdentifier);\r\n            this._deactivateSingletons(bindings);\r\n        }\r\n        this._removeServiceFromDictionary(serviceIdentifier);\r\n    };\r\n    Container.prototype.unbindAsync = function (serviceIdentifier) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var bindings;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!this._bindingDictionary.hasKey(serviceIdentifier)) return [3, 2];\r\n                        bindings = this._bindingDictionary.get(serviceIdentifier);\r\n                        return [4, this._deactivateSingletonsAsync(bindings)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        _a.label = 2;\r\n                    case 2:\r\n                        this._removeServiceFromDictionary(serviceIdentifier);\r\n                        return [2];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Container.prototype.unbindAll = function () {\r\n        var _this = this;\r\n        this._bindingDictionary.traverse(function (_key, value) {\r\n            _this._deactivateSingletons(value);\r\n        });\r\n        this._bindingDictionary = new Lookup();\r\n    };\r\n    Container.prototype.unbindAllAsync = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var promises;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        promises = [];\r\n                        this._bindingDictionary.traverse(function (_key, value) {\r\n                            promises.push(_this._deactivateSingletonsAsync(value));\r\n                        });\r\n                        return [4, Promise.all(promises)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        this._bindingDictionary = new Lookup();\r\n                        return [2];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Container.prototype.onActivation = function (serviceIdentifier, onActivation) {\r\n        this._activations.add(serviceIdentifier, onActivation);\r\n    };\r\n    Container.prototype.onDeactivation = function (serviceIdentifier, onDeactivation) {\r\n        this._deactivations.add(serviceIdentifier, onDeactivation);\r\n    };\r\n    Container.prototype.isBound = function (serviceIdentifier) {\r\n        var bound = this._bindingDictionary.hasKey(serviceIdentifier);\r\n        if (!bound && this.parent) {\r\n            bound = this.parent.isBound(serviceIdentifier);\r\n        }\r\n        return bound;\r\n    };\r\n    Container.prototype.isCurrentBound = function (serviceIdentifier) {\r\n        return this._bindingDictionary.hasKey(serviceIdentifier);\r\n    };\r\n    Container.prototype.isBoundNamed = function (serviceIdentifier, named) {\r\n        return this.isBoundTagged(serviceIdentifier, METADATA_KEY.NAMED_TAG, named);\r\n    };\r\n    Container.prototype.isBoundTagged = function (serviceIdentifier, key, value) {\r\n        var bound = false;\r\n        if (this._bindingDictionary.hasKey(serviceIdentifier)) {\r\n            var bindings = this._bindingDictionary.get(serviceIdentifier);\r\n            var request_1 = createMockRequest(this, serviceIdentifier, key, value);\r\n            bound = bindings.some(function (b) { return b.constraint(request_1); });\r\n        }\r\n        if (!bound && this.parent) {\r\n            bound = this.parent.isBoundTagged(serviceIdentifier, key, value);\r\n        }\r\n        return bound;\r\n    };\r\n    Container.prototype.snapshot = function () {\r\n        this._snapshots.push(ContainerSnapshot.of(this._bindingDictionary.clone(), this._middleware, this._activations.clone(), this._deactivations.clone(), this._moduleActivationStore.clone()));\r\n    };\r\n    Container.prototype.restore = function () {\r\n        var snapshot = this._snapshots.pop();\r\n        if (snapshot === undefined) {\r\n            throw new Error(ERROR_MSGS.NO_MORE_SNAPSHOTS_AVAILABLE);\r\n        }\r\n        this._bindingDictionary = snapshot.bindings;\r\n        this._activations = snapshot.activations;\r\n        this._deactivations = snapshot.deactivations;\r\n        this._middleware = snapshot.middleware;\r\n        this._moduleActivationStore = snapshot.moduleActivationStore;\r\n    };\r\n    Container.prototype.createChild = function (containerOptions) {\r\n        var child = new Container(containerOptions || this.options);\r\n        child.parent = this;\r\n        return child;\r\n    };\r\n    Container.prototype.applyMiddleware = function () {\r\n        var middlewares = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            middlewares[_i] = arguments[_i];\r\n        }\r\n        var initial = (this._middleware) ? this._middleware : this._planAndResolve();\r\n        this._middleware = middlewares.reduce(function (prev, curr) { return curr(prev); }, initial);\r\n    };\r\n    Container.prototype.applyCustomMetadataReader = function (metadataReader) {\r\n        this._metadataReader = metadataReader;\r\n    };\r\n    Container.prototype.get = function (serviceIdentifier) {\r\n        var getArgs = this._getNotAllArgs(serviceIdentifier, false);\r\n        return this._getButThrowIfAsync(getArgs);\r\n    };\r\n    Container.prototype.getAsync = function (serviceIdentifier) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var getArgs;\r\n            return __generator(this, function (_a) {\r\n                getArgs = this._getNotAllArgs(serviceIdentifier, false);\r\n                return [2, this._get(getArgs)];\r\n            });\r\n        });\r\n    };\r\n    Container.prototype.getTagged = function (serviceIdentifier, key, value) {\r\n        var getArgs = this._getNotAllArgs(serviceIdentifier, false, key, value);\r\n        return this._getButThrowIfAsync(getArgs);\r\n    };\r\n    Container.prototype.getTaggedAsync = function (serviceIdentifier, key, value) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var getArgs;\r\n            return __generator(this, function (_a) {\r\n                getArgs = this._getNotAllArgs(serviceIdentifier, false, key, value);\r\n                return [2, this._get(getArgs)];\r\n            });\r\n        });\r\n    };\r\n    Container.prototype.getNamed = function (serviceIdentifier, named) {\r\n        return this.getTagged(serviceIdentifier, METADATA_KEY.NAMED_TAG, named);\r\n    };\r\n    Container.prototype.getNamedAsync = function (serviceIdentifier, named) {\r\n        return this.getTaggedAsync(serviceIdentifier, METADATA_KEY.NAMED_TAG, named);\r\n    };\r\n    Container.prototype.getAll = function (serviceIdentifier) {\r\n        var getArgs = this._getAllArgs(serviceIdentifier);\r\n        return this._getButThrowIfAsync(getArgs);\r\n    };\r\n    Container.prototype.getAllAsync = function (serviceIdentifier) {\r\n        var getArgs = this._getAllArgs(serviceIdentifier);\r\n        return this._getAll(getArgs);\r\n    };\r\n    Container.prototype.getAllTagged = function (serviceIdentifier, key, value) {\r\n        var getArgs = this._getNotAllArgs(serviceIdentifier, true, key, value);\r\n        return this._getButThrowIfAsync(getArgs);\r\n    };\r\n    Container.prototype.getAllTaggedAsync = function (serviceIdentifier, key, value) {\r\n        var getArgs = this._getNotAllArgs(serviceIdentifier, true, key, value);\r\n        return this._getAll(getArgs);\r\n    };\r\n    Container.prototype.getAllNamed = function (serviceIdentifier, named) {\r\n        return this.getAllTagged(serviceIdentifier, METADATA_KEY.NAMED_TAG, named);\r\n    };\r\n    Container.prototype.getAllNamedAsync = function (serviceIdentifier, named) {\r\n        return this.getAllTaggedAsync(serviceIdentifier, METADATA_KEY.NAMED_TAG, named);\r\n    };\r\n    Container.prototype.resolve = function (constructorFunction) {\r\n        var isBound = this.isBound(constructorFunction);\r\n        if (!isBound) {\r\n            this.bind(constructorFunction).toSelf();\r\n        }\r\n        var resolved = this.get(constructorFunction);\r\n        if (!isBound) {\r\n            this.unbind(constructorFunction);\r\n        }\r\n        return resolved;\r\n    };\r\n    Container.prototype._preDestroy = function (constructor, instance) {\r\n        var _a, _b;\r\n        if (Reflect.hasMetadata(METADATA_KEY.PRE_DESTROY, constructor)) {\r\n            var data = Reflect.getMetadata(METADATA_KEY.PRE_DESTROY, constructor);\r\n            return (_b = (_a = instance)[data.value]) === null || _b === void 0 ? void 0 : _b.call(_a);\r\n        }\r\n    };\r\n    Container.prototype._removeModuleHandlers = function (moduleId) {\r\n        var moduleActivationsHandlers = this._moduleActivationStore.remove(moduleId);\r\n        this._activations.removeIntersection(moduleActivationsHandlers.onActivations);\r\n        this._deactivations.removeIntersection(moduleActivationsHandlers.onDeactivations);\r\n    };\r\n    Container.prototype._removeModuleBindings = function (moduleId) {\r\n        return this._bindingDictionary.removeByCondition(function (binding) { return binding.moduleId === moduleId; });\r\n    };\r\n    Container.prototype._deactivate = function (binding, instance) {\r\n        var _this = this;\r\n        var constructor = Object.getPrototypeOf(instance).constructor;\r\n        try {\r\n            if (this._deactivations.hasKey(binding.serviceIdentifier)) {\r\n                var result = this._deactivateContainer(instance, this._deactivations.get(binding.serviceIdentifier).values());\r\n                if (isPromise(result)) {\r\n                    return this._handleDeactivationError(result.then(function () { return _this._propagateContainerDeactivationThenBindingAndPreDestroyAsync(binding, instance, constructor); }), constructor);\r\n                }\r\n            }\r\n            var propagateDeactivationResult = this._propagateContainerDeactivationThenBindingAndPreDestroy(binding, instance, constructor);\r\n            if (isPromise(propagateDeactivationResult)) {\r\n                return this._handleDeactivationError(propagateDeactivationResult, constructor);\r\n            }\r\n        }\r\n        catch (ex) {\r\n            if (ex instanceof Error) {\r\n                throw new Error(ERROR_MSGS.ON_DEACTIVATION_ERROR(constructor.name, ex.message));\r\n            }\r\n        }\r\n    };\r\n    Container.prototype._handleDeactivationError = function (asyncResult, constructor) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var ex_1;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        _a.trys.push([0, 2, , 3]);\r\n                        return [4, asyncResult];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [3, 3];\r\n                    case 2:\r\n                        ex_1 = _a.sent();\r\n                        if (ex_1 instanceof Error) {\r\n                            throw new Error(ERROR_MSGS.ON_DEACTIVATION_ERROR(constructor.name, ex_1.message));\r\n                        }\r\n                        return [3, 3];\r\n                    case 3: return [2];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Container.prototype._deactivateContainer = function (instance, deactivationsIterator) {\r\n        var _this = this;\r\n        var deactivation = deactivationsIterator.next();\r\n        while (deactivation.value) {\r\n            var result = deactivation.value(instance);\r\n            if (isPromise(result)) {\r\n                return result.then(function () {\r\n                    return _this._deactivateContainerAsync(instance, deactivationsIterator);\r\n                });\r\n            }\r\n            deactivation = deactivationsIterator.next();\r\n        }\r\n    };\r\n    Container.prototype._deactivateContainerAsync = function (instance, deactivationsIterator) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var deactivation;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        deactivation = deactivationsIterator.next();\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        if (!deactivation.value) return [3, 3];\r\n                        return [4, deactivation.value(instance)];\r\n                    case 2:\r\n                        _a.sent();\r\n                        deactivation = deactivationsIterator.next();\r\n                        return [3, 1];\r\n                    case 3: return [2];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Container.prototype._getContainerModuleHelpersFactory = function () {\r\n        var _this = this;\r\n        var setModuleId = function (bindingToSyntax, moduleId) {\r\n            bindingToSyntax._binding.moduleId = moduleId;\r\n        };\r\n        var getBindFunction = function (moduleId) {\r\n            return function (serviceIdentifier) {\r\n                var bindingToSyntax = _this.bind(serviceIdentifier);\r\n                setModuleId(bindingToSyntax, moduleId);\r\n                return bindingToSyntax;\r\n            };\r\n        };\r\n        var getUnbindFunction = function () {\r\n            return function (serviceIdentifier) {\r\n                return _this.unbind(serviceIdentifier);\r\n            };\r\n        };\r\n        var getUnbindAsyncFunction = function () {\r\n            return function (serviceIdentifier) {\r\n                return _this.unbindAsync(serviceIdentifier);\r\n            };\r\n        };\r\n        var getIsboundFunction = function () {\r\n            return function (serviceIdentifier) {\r\n                return _this.isBound(serviceIdentifier);\r\n            };\r\n        };\r\n        var getRebindFunction = function (moduleId) {\r\n            return function (serviceIdentifier) {\r\n                var bindingToSyntax = _this.rebind(serviceIdentifier);\r\n                setModuleId(bindingToSyntax, moduleId);\r\n                return bindingToSyntax;\r\n            };\r\n        };\r\n        var getOnActivationFunction = function (moduleId) {\r\n            return function (serviceIdentifier, onActivation) {\r\n                _this._moduleActivationStore.addActivation(moduleId, serviceIdentifier, onActivation);\r\n                _this.onActivation(serviceIdentifier, onActivation);\r\n            };\r\n        };\r\n        var getOnDeactivationFunction = function (moduleId) {\r\n            return function (serviceIdentifier, onDeactivation) {\r\n                _this._moduleActivationStore.addDeactivation(moduleId, serviceIdentifier, onDeactivation);\r\n                _this.onDeactivation(serviceIdentifier, onDeactivation);\r\n            };\r\n        };\r\n        return function (mId) { return ({\r\n            bindFunction: getBindFunction(mId),\r\n            isboundFunction: getIsboundFunction(),\r\n            onActivationFunction: getOnActivationFunction(mId),\r\n            onDeactivationFunction: getOnDeactivationFunction(mId),\r\n            rebindFunction: getRebindFunction(mId),\r\n            unbindFunction: getUnbindFunction(),\r\n            unbindAsyncFunction: getUnbindAsyncFunction()\r\n        }); };\r\n    };\r\n    Container.prototype._getAll = function (getArgs) {\r\n        return Promise.all(this._get(getArgs));\r\n    };\r\n    Container.prototype._get = function (getArgs) {\r\n        var planAndResolveArgs = __assign(__assign({}, getArgs), { contextInterceptor: function (context) { return context; }, targetType: TargetTypeEnum.Variable });\r\n        if (this._middleware) {\r\n            var middlewareResult = this._middleware(planAndResolveArgs);\r\n            if (middlewareResult === undefined || middlewareResult === null) {\r\n                throw new Error(ERROR_MSGS.INVALID_MIDDLEWARE_RETURN);\r\n            }\r\n            return middlewareResult;\r\n        }\r\n        return this._planAndResolve()(planAndResolveArgs);\r\n    };\r\n    Container.prototype._getButThrowIfAsync = function (getArgs) {\r\n        var result = this._get(getArgs);\r\n        if (isPromiseOrContainsPromise(result)) {\r\n            throw new Error(ERROR_MSGS.LAZY_IN_SYNC(getArgs.serviceIdentifier));\r\n        }\r\n        return result;\r\n    };\r\n    Container.prototype._getAllArgs = function (serviceIdentifier) {\r\n        var getAllArgs = {\r\n            avoidConstraints: true,\r\n            isMultiInject: true,\r\n            serviceIdentifier: serviceIdentifier,\r\n        };\r\n        return getAllArgs;\r\n    };\r\n    Container.prototype._getNotAllArgs = function (serviceIdentifier, isMultiInject, key, value) {\r\n        var getNotAllArgs = {\r\n            avoidConstraints: false,\r\n            isMultiInject: isMultiInject,\r\n            serviceIdentifier: serviceIdentifier,\r\n            key: key,\r\n            value: value,\r\n        };\r\n        return getNotAllArgs;\r\n    };\r\n    Container.prototype._planAndResolve = function () {\r\n        var _this = this;\r\n        return function (args) {\r\n            var context = plan(_this._metadataReader, _this, args.isMultiInject, args.targetType, args.serviceIdentifier, args.key, args.value, args.avoidConstraints);\r\n            context = args.contextInterceptor(context);\r\n            var result = resolve(context);\r\n            return result;\r\n        };\r\n    };\r\n    Container.prototype._deactivateIfSingleton = function (binding) {\r\n        var _this = this;\r\n        if (!binding.activated) {\r\n            return;\r\n        }\r\n        if (isPromise(binding.cache)) {\r\n            return binding.cache.then(function (resolved) { return _this._deactivate(binding, resolved); });\r\n        }\r\n        return this._deactivate(binding, binding.cache);\r\n    };\r\n    Container.prototype._deactivateSingletons = function (bindings) {\r\n        for (var _i = 0, bindings_1 = bindings; _i < bindings_1.length; _i++) {\r\n            var binding = bindings_1[_i];\r\n            var result = this._deactivateIfSingleton(binding);\r\n            if (isPromise(result)) {\r\n                throw new Error(ERROR_MSGS.ASYNC_UNBIND_REQUIRED);\r\n            }\r\n        }\r\n    };\r\n    Container.prototype._deactivateSingletonsAsync = function (bindings) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4, Promise.all(bindings.map(function (b) { return _this._deactivateIfSingleton(b); }))];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Container.prototype._propagateContainerDeactivationThenBindingAndPreDestroy = function (binding, instance, constructor) {\r\n        if (this.parent) {\r\n            return this._deactivate.bind(this.parent)(binding, instance);\r\n        }\r\n        else {\r\n            return this._bindingDeactivationAndPreDestroy(binding, instance, constructor);\r\n        }\r\n    };\r\n    Container.prototype._propagateContainerDeactivationThenBindingAndPreDestroyAsync = function (binding, instance, constructor) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!this.parent) return [3, 2];\r\n                        return [4, this._deactivate.bind(this.parent)(binding, instance)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [3, 4];\r\n                    case 2: return [4, this._bindingDeactivationAndPreDestroyAsync(binding, instance, constructor)];\r\n                    case 3:\r\n                        _a.sent();\r\n                        _a.label = 4;\r\n                    case 4: return [2];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Container.prototype._removeServiceFromDictionary = function (serviceIdentifier) {\r\n        try {\r\n            this._bindingDictionary.remove(serviceIdentifier);\r\n        }\r\n        catch (e) {\r\n            throw new Error(ERROR_MSGS.CANNOT_UNBIND + \" \" + getServiceIdentifierAsString(serviceIdentifier));\r\n        }\r\n    };\r\n    Container.prototype._bindingDeactivationAndPreDestroy = function (binding, instance, constructor) {\r\n        var _this = this;\r\n        if (typeof binding.onDeactivation === 'function') {\r\n            var result = binding.onDeactivation(instance);\r\n            if (isPromise(result)) {\r\n                return result.then(function () { return _this._preDestroy(constructor, instance); });\r\n            }\r\n        }\r\n        return this._preDestroy(constructor, instance);\r\n    };\r\n    Container.prototype._bindingDeactivationAndPreDestroyAsync = function (binding, instance, constructor) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!(typeof binding.onDeactivation === 'function')) return [3, 2];\r\n                        return [4, binding.onDeactivation(instance)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        _a.label = 2;\r\n                    case 2: return [4, this._preDestroy(constructor, instance)];\r\n                    case 3:\r\n                        _a.sent();\r\n                        return [2];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return Container;\r\n}());\r\nexport { Container };\r\n","const TYPES = {\n\n    Options: Symbol.for(\"IOptions\"),\n    Utils: Symbol.for(\"IUtil\"),\n    FormService: Symbol.for(\"IFormService\"),\n    Logger: Symbol.for(\"ILoggerService\"),\n    EventService: Symbol.for(\"IEventService\"),\n    StateManager: Symbol.for(\"IStateManager\"),\n    DebouncerManager: Symbol.for(\"IDebouncerManager\"),\n    EventEmitter: Symbol.for(\"IEventEmitter\"),\n    DebuggingLogger: Symbol.for(\"IDecoratedLogger\"),\n    Initializer: Symbol.for(\"IInitializer\"),\n    DebouncerFactory: Symbol.for(\"IDebouncerFactory\"),\n    Form: Symbol.for(\"IForm\"),\n    FormManager: Symbol.for(\"IFormManager\"),\n    FormFactory: Symbol.for(\"IFormFactory\"),\n    FormParser: Symbol.for(\"IFormParser\"),\n    ObservableFormsCollection: Symbol.for(\"IObservableCollection\"),\n    ValidationService: Symbol.for(\"IValidationService\"),\n    ValidationControlFactory: Symbol.for(\"IValidationControlFactory\"),\n    UIHandler: Symbol.for(\"IUIHandler\")\n};\nexport { TYPES };\n","import * as ERRORS_MSGS from '../constants/error_msgs';\r\nimport * as METADATA_KEY from '../constants/metadata_keys';\r\nfunction injectable() {\r\n    return function (target) {\r\n        if (Reflect.hasOwnMetadata(METADATA_KEY.PARAM_TYPES, target)) {\r\n            throw new Error(ERRORS_MSGS.DUPLICATED_INJECTABLE_DECORATOR);\r\n        }\r\n        var types = Reflect.getMetadata(METADATA_KEY.DESIGN_PARAM_TYPES, target) || [];\r\n        Reflect.defineMetadata(METADATA_KEY.PARAM_TYPES, types, target);\r\n        return target;\r\n    };\r\n}\r\nexport { injectable };\r\n","import * as log from \"loglevel\";\nimport { injectable } from \"inversify\";\nimport { ILogger } from \"../interfaces\";\n\n@injectable()\nexport class Logger implements ILogger {\n    constructor() {\n        log.setLevel(log.levels.INFO);\n    }\n\n    get levels(): log.LogLevel {\n        return log.levels; // Assuming 'levels' is accessible and refers to the corresponding property in 'loglevel'.\n    }\n\n    get methodFactory(): log.MethodFactory {\n        return log.methodFactory; // Delegates to the actual 'methodFactory' in 'loglevel'.\n    }\n\n    getLevel(): 0 | 2 | 1 | 3 | 4 | 5 {\n        return log.getLevel();\n    }\n\n    trace(...msg: any[]): void {\n        log.trace(...msg);\n    }\n\n    debug(...msg: any[]): void {\n        log.debug(...msg);\n    }\n\n    log(...msg: any[]): void {\n        // 'log' method is not standard in 'loglevel'. If you need a generic log, you could map to a specific level, or remove this.\n        log.info(...msg); // Example mapping to 'info' level.\n    }\n\n    info(...msg: any[]): void {\n        log.info(...msg);\n    }\n\n    warn(...msg: any[]): void {\n        log.warn(...msg);\n    }\n\n    error(...msg: any[]): void {\n        log.error(...msg);\n    }\n\n    setLevel(level: log.LogLevelDesc, persist?: boolean): void {\n        log.setLevel(level, persist);\n    }\n\n    setDefaultLevel(level: log.LogLevelDesc): void {\n        log.setDefaultLevel(level);\n    }\n\n    resetLevel(): void {\n        log.setDefaultLevel(log.levels.SILENT); // or another appropriate default\n    }\n\n    enableAll(persist?: boolean): void {\n        log.enableAll(persist);\n    }\n\n    disableAll(persist?: boolean): void {\n        log.disableAll(persist);\n    }\n}\n","import { injectable } from \"inversify\";\nimport { IEventEmitter } from \"../interfaces\";\n\n@injectable()\nexport class EventEmitter<TEvents> implements IEventEmitter<TEvents> {\n    private listeners: {\n        [K in keyof TEvents]?: ((data: TEvents[K]) => void)[];\n    } = {};\n    constructor() {\n\n    }\n    on<K extends keyof TEvents>(\n        event: K,\n        listener: (data: TEvents[K]) => void\n    ): void {\n        if (!this.listeners[event]) {\n            this.listeners[event] = [];\n        }\n        this.listeners[event]!.push(listener);\n    }\n\n    off<K extends keyof TEvents>(\n        event: K,\n        listener: (data: TEvents[K]) => void\n    ): void {\n        if (!this.listeners[event]) return;\n        const callbackIndex = this.listeners[event]!.indexOf(listener);\n        if (callbackIndex >= 0) this.listeners[event]!.splice(callbackIndex, 1);\n    }\n\n    emit<K extends keyof TEvents>(event: K, data: TEvents[K]): void {\n        if (!this.listeners[event]) return;\n        for (const listener of this.listeners[event]!) {\n            listener(data);\n        }\n    }\n}\n","import * as ERROR_MSGS from '../constants/error_msgs';\r\nimport * as METADATA_KEY from '../constants/metadata_keys';\r\nimport { getFirstArrayDuplicate } from '../utils/js';\r\nfunction targetIsConstructorFunction(target) {\r\n    return target.prototype !== undefined;\r\n}\r\nfunction _throwIfMethodParameter(parameterName) {\r\n    if (parameterName !== undefined) {\r\n        throw new Error(ERROR_MSGS.INVALID_DECORATOR_OPERATION);\r\n    }\r\n}\r\nfunction tagParameter(annotationTarget, parameterName, parameterIndex, metadata) {\r\n    _throwIfMethodParameter(parameterName);\r\n    _tagParameterOrProperty(METADATA_KEY.TAGGED, annotationTarget, parameterIndex.toString(), metadata);\r\n}\r\nfunction tagProperty(annotationTarget, propertyName, metadata) {\r\n    if (targetIsConstructorFunction(annotationTarget)) {\r\n        throw new Error(ERROR_MSGS.INVALID_DECORATOR_OPERATION);\r\n    }\r\n    _tagParameterOrProperty(METADATA_KEY.TAGGED_PROP, annotationTarget.constructor, propertyName, metadata);\r\n}\r\nfunction _ensureNoMetadataKeyDuplicates(metadata) {\r\n    var metadatas = [];\r\n    if (Array.isArray(metadata)) {\r\n        metadatas = metadata;\r\n        var duplicate = getFirstArrayDuplicate(metadatas.map(function (md) { return md.key; }));\r\n        if (duplicate !== undefined) {\r\n            throw new Error(ERROR_MSGS.DUPLICATED_METADATA + \" \" + duplicate.toString());\r\n        }\r\n    }\r\n    else {\r\n        metadatas = [metadata];\r\n    }\r\n    return metadatas;\r\n}\r\nfunction _tagParameterOrProperty(metadataKey, annotationTarget, key, metadata) {\r\n    var metadatas = _ensureNoMetadataKeyDuplicates(metadata);\r\n    var paramsOrPropertiesMetadata = {};\r\n    if (Reflect.hasOwnMetadata(metadataKey, annotationTarget)) {\r\n        paramsOrPropertiesMetadata = Reflect.getMetadata(metadataKey, annotationTarget);\r\n    }\r\n    var paramOrPropertyMetadata = paramsOrPropertiesMetadata[key];\r\n    if (paramOrPropertyMetadata === undefined) {\r\n        paramOrPropertyMetadata = [];\r\n    }\r\n    else {\r\n        var _loop_1 = function (m) {\r\n            if (metadatas.some(function (md) { return md.key === m.key; })) {\r\n                throw new Error(ERROR_MSGS.DUPLICATED_METADATA + \" \" + m.key.toString());\r\n            }\r\n        };\r\n        for (var _i = 0, paramOrPropertyMetadata_1 = paramOrPropertyMetadata; _i < paramOrPropertyMetadata_1.length; _i++) {\r\n            var m = paramOrPropertyMetadata_1[_i];\r\n            _loop_1(m);\r\n        }\r\n    }\r\n    paramOrPropertyMetadata.push.apply(paramOrPropertyMetadata, metadatas);\r\n    paramsOrPropertiesMetadata[key] = paramOrPropertyMetadata;\r\n    Reflect.defineMetadata(metadataKey, paramsOrPropertiesMetadata, annotationTarget);\r\n}\r\nfunction createTaggedDecorator(metadata) {\r\n    return function (target, targetKey, indexOrPropertyDescriptor) {\r\n        if (typeof indexOrPropertyDescriptor === 'number') {\r\n            tagParameter(target, targetKey, indexOrPropertyDescriptor, metadata);\r\n        }\r\n        else {\r\n            tagProperty(target, targetKey, metadata);\r\n        }\r\n    };\r\n}\r\nfunction _decorate(decorators, target) {\r\n    Reflect.decorate(decorators, target);\r\n}\r\nfunction _param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); };\r\n}\r\nfunction decorate(decorator, target, parameterIndexOrProperty) {\r\n    if (typeof parameterIndexOrProperty === 'number') {\r\n        _decorate([_param(parameterIndexOrProperty, decorator)], target);\r\n    }\r\n    else if (typeof parameterIndexOrProperty === 'string') {\r\n        Reflect.decorate([decorator], target, parameterIndexOrProperty);\r\n    }\r\n    else {\r\n        _decorate([decorator], target);\r\n    }\r\n}\r\nexport { decorate, tagParameter, tagProperty, createTaggedDecorator };\r\n","export function getFirstArrayDuplicate(array) {\r\n    var seenValues = new Set();\r\n    for (var _i = 0, array_1 = array; _i < array_1.length; _i++) {\r\n        var entry = array_1[_i];\r\n        if (seenValues.has(entry)) {\r\n            return entry;\r\n        }\r\n        else {\r\n            seenValues.add(entry);\r\n        }\r\n    }\r\n    return undefined;\r\n}\r\n","import * as METADATA_KEY from '../constants/metadata_keys';\r\nimport { injectBase } from './inject_base';\r\nvar inject = injectBase(METADATA_KEY.INJECT_TAG);\r\nexport { inject };\r\n","import { UNDEFINED_INJECT_ANNOTATION } from '../constants/error_msgs';\r\nimport { Metadata } from '../planning/metadata';\r\nimport { createTaggedDecorator } from './decorator_utils';\r\nexport function injectBase(metadataKey) {\r\n    return function (serviceIdentifier) {\r\n        return function (target, targetKey, indexOrPropertyDescriptor) {\r\n            if (serviceIdentifier === undefined) {\r\n                var className = typeof target === 'function' ? target.name : target.constructor.name;\r\n                throw new Error(UNDEFINED_INJECT_ANNOTATION(className));\r\n            }\r\n            return createTaggedDecorator(new Metadata(metadataKey, serviceIdentifier))(target, targetKey, indexOrPropertyDescriptor);\r\n        };\r\n    };\r\n}\r\n","import { inject, injectable } from \"inversify\";\r\nimport { TYPES } from \"../di/container-types\";\r\nimport { Debouncer } from \"../utils/Debouncer\";\r\nimport {\r\n    IChange,\r\n    IDebouncerFactory,\r\n    IDebouncerManager,\r\n    IDecoratedLogger,\r\n    IEventService,\r\n    IForm,\r\n    IObservableCollection,\r\n    IOptions,\r\n    IStateManager,\r\n    IValidationService\r\n} from \"../interfaces\";\r\n/**\r\n * Manages event handling and validation for forms.\r\n * Observes form collection changes and applies necessary event listeners\r\n * and validation logic to forms and their controls.\r\n */\r\n@injectable()\r\nexport class EventService implements IEventService {\r\n    eventListenersMap: WeakMap<Element, Record<string, EventListener>> =\r\n        new WeakMap();\r\n    dirtyMap: { [key: string]: boolean } = {};\r\n    debouncers: { [key: string]: Debouncer } = {};\r\n\r\n    /**\r\n     * Initializes a new instance of the EventService.\r\n     * @param {IOptions} _options - The configuration options for the service.\r\n     * @param {IObservableCollection<IForm>} _observableFormsCollection - The collection of observable forms.\r\n     * @param {IDebouncerFactory} _debounceFactory - The factory for creating debouncers.\r\n     * @param {IValidationService} _validationService - The service for performing validation.\r\n     * @param {IStateManager} _stateManager - The manager for form control states.\r\n     * @param {IDebouncerManager} _debouncerManager - The manager for debouncers.\r\n     * @param {IDecoratedLogger} _logger - The logger for logging information and errors.\r\n     */\r\n    constructor(\r\n        @inject(TYPES.Options) private readonly _options: IOptions,\r\n        @inject(TYPES.ObservableFormsCollection)\r\n        private readonly _observableFormsCollection: IObservableCollection<IForm>,\r\n        @inject(TYPES.DebouncerFactory)\r\n        private readonly _debounceFactory: IDebouncerFactory,\r\n        @inject(TYPES.ValidationService)\r\n        private readonly _validationService: IValidationService,\r\n        @inject(TYPES.StateManager)\r\n        private readonly _stateManager: IStateManager,\r\n        @inject(TYPES.DebouncerManager)\r\n        private readonly _debouncerManager: IDebouncerManager,\r\n        @inject(TYPES.DebuggingLogger)\r\n        private readonly _logger: IDecoratedLogger\r\n    ) {\r\n        this._observableFormsCollection.addObserver(this);\r\n    }\r\n    /**\r\n     * Responds to changes in the form collection. Sets up or removes event handlers as needed.\r\n     * @param {IChange<IForm>} change - The change object describing what has changed in the form collection.\r\n     */\r\n    async notify(change: IChange<IForm>): Promise<void> {\r\n        const { type: changeType, item: form } = change;\r\n\r\n        if (changeType !== \"add\" || !form.formElement) {\r\n            return;\r\n        }\r\n\r\n        // Cleanup any previous resources for the form.\r\n        // This might be required to handle re-adding a form that was removed without proper cleanup.\r\n        await this.cleanupResourcesForForm(form.formElement);\r\n\r\n        // Setup the handlers for the form\r\n        await this.setupHandlers(form);\r\n\r\n        // Add Listeners for the form\r\n        const listeners = this.eventListenersMap.get(change.item.formElement);\r\n        if (listeners) {\r\n            await this.addListeners(form, listeners);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sets up event handlers for all interactive elements within a form.\r\n     * @param {IForm} form - The form for which to set up event handlers.\r\n     */\r\n    async setupHandlers(form: IForm): Promise<void> {\r\n        this._logger.getLogger().info(\"Setting up handlers for form: \" + form.name);\r\n\r\n        // Loop over each control in the form\r\n        const controls = Array.from(form.elements);\r\n\r\n        // Initialize listeners outside the loop\r\n        const listeners: Record<string, EventListener> = {};\r\n\r\n        controls.forEach((element) => {\r\n            if (\r\n                element instanceof HTMLInputElement ||\r\n                element instanceof HTMLTextAreaElement ||\r\n                element instanceof HTMLSelectElement\r\n            ) {\r\n                // Add the event handlers for the control\r\n                const inputEventHandler = this.createInputHandler(500);\r\n                const blurEventHandler = this.createBlurHandler();\r\n                const focusEventHandler = this.createFocusHandler();\r\n\r\n                // Accumulate listeners instead of re-initializing them\r\n                listeners[\"input\"] = inputEventHandler as EventListener;\r\n                listeners[\"focus\"] = focusEventHandler as EventListener;\r\n                listeners[\"blur\"] = blurEventHandler as EventListener;\r\n\r\n            }\r\n        });\r\n\r\n        // Add the submit handler for the form\r\n        const submitEventHandler = this.createSubmitHandler(form);\r\n        listeners[\"submit\"] = submitEventHandler as EventListener;\r\n\r\n\r\n        // Set the accumulated listeners for the form element after the loop\r\n        this.eventListenersMap.set(form.formElement, listeners);\r\n    }\r\n    /**\r\n     * Attaches event listeners to a form based on a provided map of event types and listeners.\r\n     * Listeners for 'focus' and 'blur' events are specially handled to use 'focusin' and 'focusout' respectively.\r\n     * This ensures better event capturing, especially useful for dynamically added content.\r\n     * @param {IForm} form - The form to which event listeners are to be attached.\r\n     * @param {Record<string, EventListener>} eventListeners - A record mapping event types to their corresponding event listeners.\r\n     * @returns {Promise<IForm>} - The form with event listeners attached, useful for chaining or further processing.\r\n     */\r\n    private async addListeners(\r\n        form: IForm,\r\n        eventListeners: Record<string, EventListener>\r\n    ): Promise<IForm> {\r\n        // Add event listeners and store them in the map\r\n        for (const [eventType, listener] of Object.entries(eventListeners)) {\r\n            if (eventType === \"focus\") {\r\n                // For focus, you might want to listen to focusin event instead\r\n                form.formElement.addEventListener(\"focusin\", listener);\r\n            } else if (eventType === \"blur\") {\r\n                // For blur, you might want to listen to focusout event instead\r\n                form.formElement.addEventListener(\"focusout\", listener);\r\n            } else {\r\n                // For other events, add them normally\r\n                form.formElement.addEventListener(eventType, listener);\r\n            }\r\n        }\r\n        return form;\r\n    }\r\n\r\n\r\n    /**\r\n     * Creates a submit event handler for a form. Uses a custom submit handler if provided, otherwise defaults to standard form submission.\r\n     * @param {IForm} form - The form for which to create the submit handler.\r\n     * @returns {EventListener} The event listener handling the submit event.\r\n     */\r\n    createSubmitHandler(form: IForm): EventListener {\r\n        this._logger.getLogger().info(\"Creating Submit Handler\");\r\n\r\n\r\n        return async (event: Event) => {\r\n            event.preventDefault();\r\n\r\n            // Run validation on the form\r\n            const isValid = await this._validationService.validateForm(form);\r\n\r\n            // Add isValid flag to the form element\r\n            form.formElement.isValid = isValid;\r\n\r\n            // Check if a custom submit handler has been provided\r\n            if (form.submitHandler) {\r\n                // Call the custom submit handler and pass the form element\r\n                await form.submitHandler(form.formElement, isValid);\r\n            } else {\r\n                // If no custom handler, proceed with default form submission\r\n                if (isValid && this._options.useDefaultFormSubmitter) {\r\n                    form.formElement.submit();\r\n                }\r\n                // Optionally, handle the case where the form is not valid\r\n            }\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Creates an event listener for handling input events on form controls.\r\n     * The listener marks the control as interacted with, checks for value changes,\r\n     * and triggers validation based on the control type and debounce settings.\r\n     * @param {number} debounceTime - The time in milliseconds to wait before triggering validation after the last input event for debouncable controls.\r\n     * @returns {EventListener} An event listener function that handles input events.\r\n     */\r\n    createInputHandler(debounceTime: number): EventListener {\r\n        return (event: Event) => {\r\n            const control = event.target as HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement;\r\n\r\n            // Mark the control as interacted upon user input.\r\n            this._stateManager.makeControlInteracted(control.name);\r\n\r\n            // Check if the value has changed from the initial value to mark as dirty.\r\n            if (this._stateManager.hasValueChanged(control.name, control.value)) {\r\n                this._stateManager.makeControlDirty(control.name);\r\n                // Reset the validated state since the value has changed.\r\n                this._stateManager.clearControlValidatedState(control.name);\r\n\r\n                // Define a common validation logic\r\n                const validateControl = async () => {\r\n                    await this.validateAndHandleControl(control);\r\n                };\r\n\r\n                // Debounce the validation logic for text-based controls\r\n                if (control.type === \"text\" || control.type === \"textarea\" || control.type === \"email\" || control.type === \"password\") {\r\n                    this.debouncedValidate(control, debounceTime, validateControl);\r\n                } else {\r\n                    // For other types (checkbox, radio, select, etc.), validate immediately\r\n                    validateControl();\r\n                }\r\n            }\r\n\r\n            // Set the initial value when the control is first interacted with\r\n            if (!this._stateManager.hasInitialValue(control.name)) {\r\n                this._stateManager.setInitialValue(control.name, control.value);\r\n            }\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Creates an event listener for blur events on form controls.\r\n     * This handler triggers validation when a control loses focus under certain conditions.\r\n     * It checks if the control losing focus (or its related target) is within the same form and validates if necessary.\r\n     * Controls are validated if they are dirty (changed) and not yet validated, or if they have been interacted with.\r\n     * @returns {EventListener} An event listener that handles the blur event for form controls.\r\n     */\r\n    createBlurHandler(): EventListener {\r\n        return async (event: Event) => {\r\n            const focusEvent = event as FocusEvent;\r\n            const target = focusEvent.target as HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement;\r\n            const relatedTarget = focusEvent.relatedTarget as Element;\r\n\r\n            // Check if the related target is not within the same form as the target or if it's non-focusable.\r\n            if (!relatedTarget || !target.form?.contains(relatedTarget)) {\r\n\r\n                // If the control is dirty and not yet validated, validate it.\r\n                if (this._stateManager.isControlDirty(target.name) && !this._stateManager.isControlValidated(target.name)) {\r\n                    await this.validateAndHandleControl(target);\r\n                }\r\n                return;\r\n            }\r\n\r\n            // Proceed with validation if the control is dirty or interacted with.\r\n            if (this._stateManager.isControlDirty(target.name) || this._stateManager.isControlInteracted(target.name)) {\r\n                await this.validateAndHandleControl(target);\r\n            }\r\n        };\r\n    }\r\n    /**\r\n     * Creates an event listener for focus events on form controls.\r\n     * Currently, this handler does not perform any specific action upon receiving a focus event.\r\n     * It is set up for potential future enhancements where focus-related logic might be required.\r\n     * @returns {EventListener} An event listener that handles the focus event for form controls.\r\n     *                          Currently, it performs no action.\r\n     */\r\n    createFocusHandler(): EventListener {\r\n        return async (event: Event) => { };\r\n    }\r\n\r\n    /**\r\n     * Initiates a debounced validation for a given form control. This method is designed to limit the rate\r\n     * at which validation logic is executed, improving performance for controls that trigger validation\r\n     * on frequent events, like typing in a text field.\r\n     *\r\n     * The validation is deferred until the specified debounce time has elapsed since the last invocation.\r\n     * This prevents over-validation when the user is actively interacting with the control (e.g., typing).\r\n     * @param {HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement} input - The control to be validated.\r\n     *        This can be any input, textarea, or select element.\r\n     * @param control\r\n     * @param {number} debounceTime - The time in milliseconds to wait before the validation is triggered\r\n     *        after the last input event.\r\n     * @param validateControl\r\n     */\r\n    debouncedValidate(\r\n        control: HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement,\r\n        debounceTime: number,\r\n        validateControl: () => Promise<void>\r\n    ): void {\r\n        this._debouncerManager\r\n            .getDebouncerForControl(control.name)\r\n            .debounce(async () => {\r\n                try {\r\n                    // Log before starting the debounced validation\r\n                    this._logger.getLogger().info(`Debouncing validation for ${control.name}`);\r\n\r\n                    // Execute the validation logic\r\n                    await validateControl();\r\n\r\n                    // Optionally, log successful validation\r\n                    this._logger.getLogger().info(`Validation successful for ${control.name}`);\r\n                } catch (error) {\r\n                    // Handle and log any errors that occur during validation\r\n                    this._logger.getLogger().error(\r\n                        error instanceof Error\r\n                            ? error\r\n                            : new Error(`Error during debounced validation for control ${control.name}: ${String(error)}`)\r\n                    );\r\n                }\r\n            }, debounceTime);\r\n    }\r\n\r\n    /**\r\n     * Removes all event listeners from the specified form element.\r\n     * @param {HTMLFormElement} formElement - The form element from which to remove event listeners.\r\n     */\r\n    async removeListeners(formElement: HTMLFormElement): Promise<void> {\r\n        const listeners = this.eventListenersMap.get(formElement);\r\n        if (listeners) {\r\n            for (const [eventType, listener] of Object.entries(listeners)) {\r\n                // Ensure the listener is a function before attempting to remove\r\n                if (typeof listener === \"function\") {\r\n                    // Correctly map the event type for focus and blur\r\n                    const domEventType =\r\n                        eventType === \"focus\"\r\n                            ? \"focusin\"\r\n                            : eventType === \"blur\"\r\n                                ? \"focusout\"\r\n                                : eventType;\r\n                    formElement.removeEventListener(domEventType, listener);\r\n                }\r\n            }\r\n            this.eventListenersMap.delete(formElement);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Cleans up resources associated with the specified form element.\r\n     * This involves removing event listeners and clearing any associated state.\r\n     * @param {HTMLFormElement} formElement - The form element for which to clean up resources.\r\n     */\r\n    async cleanupResourcesForForm(formElement: HTMLFormElement): Promise<void> {\r\n        await this.removeListeners(formElement);\r\n        const controls = formElement.elements;\r\n        const namesToClear = Array.from(controls)\r\n            .filter(isNamedControlElement)\r\n            .map((control) => control.name);\r\n\r\n        this._stateManager.clearControlsDirtyState(namesToClear);\r\n        this._debouncerManager.clearDebouncersForControls(namesToClear);\r\n    }\r\n\r\n    /**\r\n     * Validates a specified control and handles its post-validation state.\r\n     * This method is called during various event handlers (like blur) to perform validation on the control.\r\n     * If the validation is successful, it clears the control's dirty state and marks it as validated.\r\n     * In case of an error during validation, the error is logged.\r\n     * @param {HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement} control - The control to validate.\r\n     *        Can be any input, textarea, or select element.\r\n     * @returns {Promise<void>} A promise that resolves when the validation and subsequent state update are complete.\r\n     * @throws {Error} Throws an error if the validation process encounters an issue.\r\n     */\r\n    async validateAndHandleControl(control: HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement): Promise<void> {\r\n        try {\r\n            await this._validationService.validateControl(control);\r\n\r\n            // After validation, clear the dirty state and mark the control as validated.\r\n            this._stateManager.clearControlDirtyState(control.name);\r\n            this._stateManager.setControlValidated(control.name);\r\n        } catch (error) {\r\n            this._logger.getLogger().error(\r\n                error instanceof Error ? error : new Error(\"Error in blurEventHandler: \" + error)\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Determines if an element has a 'name' property and is an input, select, or textarea element.\r\n * @param {Element} element - The element to check.\r\n * @returns {boolean} - True if the element is a named control element, false otherwise.\r\n */\r\nfunction isNamedControlElement(\r\n    element: Element\r\n): element is HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement {\r\n    return (\r\n        \"name\" in element &&\r\n        (element instanceof HTMLInputElement ||\r\n            element instanceof HTMLSelectElement ||\r\n            element instanceof HTMLTextAreaElement)\r\n    );\r\n}\r\n","import { inject, injectable } from \"inversify\";\nimport { IDecoratedLogger, IStateManager } from \"../interfaces\";\nimport { TYPES } from \"../di/container-types\";\n\n@injectable()\n/**\n * Manages the state of form controls, tracking whether they have been modified (dirty), interacted with, or validated.\n */\nexport class StateManager implements IStateManager {\n    private dirtyMap: { [key: string]: boolean } = {};\n    private validatedMap: { [key: string]: boolean } = {};\n    private interactedMap: { [key: string]: boolean } = {};\n    private initialValues: { [key: string]: string } = {};\n    /**\n     * Constructs a new instance of the StateManager.\n     * @param {IDecoratedLogger} _logger - The logger service for logging information.\n     */\n    constructor(\n        @inject(TYPES.DebuggingLogger)\n        private readonly _logger: IDecoratedLogger\n    ) {\n\n    }\n    /**\n     * Marks a control as dirty (modified).\n     * @param {string} controlName - The name of the control to mark as dirty.\n     */\n    makeControlDirty(controlName: string): void {\n        this.dirtyMap[controlName] = true;\n        this._logger.getLogger().info(`Control ${controlName} is now dirty`);\n    }\n    /**\n     * Checks if a control is marked as dirty (modified).\n     * @param {string} controlName - The name of the control to check.\n     * @returns {boolean} - True if the control is dirty, otherwise false.\n     */\n    isControlDirty(controlName: string): boolean {\n        return !!this.dirtyMap[controlName];\n    }\n    /**\n     * Clears the dirty state of a control, marking it as clean (unmodified).\n     * @param {string} controlName - The name of the control to clear the dirty state for.\n     */\n    clearControlDirtyState(controlName: string): void {\n        this._logger\n            .getLogger()\n            .info(`Clearing dirty state for control ${controlName}`);\n        delete this.dirtyMap[controlName];\n    }\n    /**\n     * Clears the dirty state for multiple controls at once.\n     * @param {string[]} controlNames - An array of control names to clear the dirty state for.\n     */\n    clearControlsDirtyState(controlNames: string[]): void {\n        controlNames.forEach((controlName) => {\n            if (\n                Object.prototype.hasOwnProperty.call(this.dirtyMap, controlName)\n            ) {\n                this._logger\n                    .getLogger()\n                    .info(`Clearing dirty state for control ${controlName}`);\n                delete this.dirtyMap[controlName];\n            }\n        });\n    }\n    /**\n     * Marks a control as having passed validation.\n     * @param {string} controlName - The name of the control to mark as validated.\n     */\n    setControlValidated(controlName: string): void {\n        this.validatedMap[controlName] = true;\n        this._logger.getLogger().info(`Control ${controlName} has been validated`);\n    }\n    /**\n     * Checks if a control has passed validation.\n     * @param {string} controlName - The name of the control to check.\n     * @returns {boolean} - True if the control has been validated, otherwise false.\n     */\n    isControlValidated(controlName: string): boolean {\n        return !!this.validatedMap[controlName];\n    }\n    /**\n     * Clears the validated state of a control, indicating that it should be validated again.\n     * @param {string} controlName - The name of the control to clear the validated state for.\n     */\n    clearControlValidatedState(controlName: string): void {\n        delete this.validatedMap[controlName];\n        this._logger.getLogger().info(`Cleared validated state for control ${controlName}`);\n    }\n    /**\n     * Clears the validated state for multiple controls at once.\n     * @param {string[]} controlNames - An array of control names to clear the validated state for.\n     */\n    clearControlsValidatedState(controlNames: string[]): void {\n        controlNames.forEach((controlName) => {\n            if (this.validatedMap[controlName]) {\n                this.clearControlValidatedState(controlName);\n            }\n        });\n    }\n    // Call this method to set the initial value of a control\n    setInitialValue(controlName: string, value: string): void {\n        this.initialValues[controlName] = value;\n    }\n\n    // Call this to check if the value has changed from the initial value\n    hasValueChanged(controlName: string, currentValue: string): boolean {\n        return this.initialValues[controlName] !== currentValue;\n    }\n    /**\n     * Checks if an initial value has been set for a control.\n     * @param {string} controlName - The name of the control to check.\n     * @returns {boolean} - True if an initial value has been set, otherwise false.\n     */\n    hasInitialValue(controlName: string): boolean {\n        return Object.keys(this.initialValues).includes(controlName);\n    }\n    /**\n     * Marks a control as interacted with by the user.\n     * @param {string} controlName - The name of the control to mark as interacted.\n     */\n    makeControlInteracted(controlName: string): void {\n        this.interactedMap[controlName] = true;\n        this._logger.getLogger().info(`Control ${controlName} is now marked as interacted`);\n    }\n\n    /**\n     * Checks if a control has been interacted with by the user.\n     * @param {string} controlName - The name of the control to check.\n     * @returns {boolean} - True if the control has been interacted with, otherwise false.\n     */\n    isControlInteracted(controlName: string): boolean {\n        return !!this.interactedMap[controlName];\n    }\n\n    /**\n     * Clears the interacted state of a control.\n     * @param {string} controlName - The name of the control to clear the interacted state for.\n     */\n    clearControlInteractedState(controlName: string): void {\n        delete this.interactedMap[controlName];\n        this._logger.getLogger().info(`Cleared interacted state for control ${controlName}`);\n    }\n\n    /**\n     * Clears the interacted state for multiple controls at once.\n     * @param {string[]} controlNames - An array of control names to clear the interacted state for.\n     */\n    clearControlsInteractedState(controlNames: string[]): void {\n        controlNames.forEach((controlName) => {\n            if (this.interactedMap[controlName]) {\n                this.clearControlInteractedState(controlName);\n            }\n        });\n    }\n}\n","import { inject, injectable } from \"inversify\";\nimport { TYPES } from \"../di/container-types\";\nimport { IDecoratedLogger, ILogger, IOptions } from \"../interfaces\";\n\n@injectable()\nexport class DebuggingLogger implements IDecoratedLogger {\n    private readonly loggerProxy: ILogger;\n\n    constructor(\n        @inject(TYPES.Logger) private readonly _logger: ILogger,\n        @inject(TYPES.Options) private readonly _options: IOptions\n    ) {\n        const handler: ProxyHandler<ILogger> = {\n            get: (target, propertyKey: string | symbol) => {\n                if (typeof propertyKey === \"symbol\") {\n                    return undefined;\n                }\n\n                const actualKey = propertyKey as keyof ILogger;\n                const originalProperty = target[actualKey];\n\n                if (typeof originalProperty === \"function\") {\n                    // Asserting the function type more clearly for TypeScript\n                    const originalMethod = originalProperty as (\n                        ...args: any[]\n                    ) => any;\n\n                    // If 'info' method, and debug is true, we want to intercept and change its behavior.\n                    if (propertyKey === \"info\" && !this._options.debug) {\n                        return (...args: any[]): void => {};\n                    }\n\n                    // For methods other than 'info' or if debug is true, we keep the original behavior.\n                    return originalMethod.bind(target); // now TypeScript recognizes the 'bind' method\n                }\n\n                // If dealing with non-function properties (like 'levels'), we return them as is.\n                return originalProperty;\n            }\n        };\n\n        this.loggerProxy = new Proxy(_logger, handler);\n    }\n\n    getLogger(): ILogger {\n        return this.loggerProxy;\n    }\n}\n","import { inject, injectable } from \"inversify\";\r\nimport { TYPES } from \"../di/container-types\";\r\nimport { IDecoratedLogger, IFormManager, IFormService } from \"../interfaces\";\r\n\r\n/**\r\n * Manages the lifecycle and interactions of forms within a web page.\r\n * It observes the DOM for new forms being added dynamically and incorporates them into the form management system.\r\n */\r\n@injectable()\r\n\r\nexport class FormManager implements IFormManager {\r\n    private mutationObserver: MutationObserver | null = null;\r\n    /**\r\n     * Initializes an instance of the FormManager with dependencies.\r\n     * @param {IFormService} _formService - Service to manage forms' functionalities.\r\n     * @param {IDecoratedLogger} _logger - Logger for debugging and logging information.\r\n     */\r\n    constructor(\r\n        @inject(TYPES.FormService) private readonly _formService: IFormService,\r\n        @inject(TYPES.DebuggingLogger) private readonly _logger: IDecoratedLogger\r\n    ) {\r\n\r\n    }\r\n    /**\r\n     * Initializes the FormManager by creating forms and starting observation on DOM mutations.\r\n     * This method prepares the FormManager to automatically manage existing and dynamically added forms.\r\n     * @returns {Promise<void>} A promise that resolves when initialization is complete.\r\n     */\r\n    async init(): Promise<void> {\r\n\r\n        this.createForms();\r\n        this.startObserving();\r\n        this._logger.getLogger().info(\"FormManager: initialized\");\r\n    }\r\n    /**\r\n     * Iterates over all form elements present in the document and attempts to add each one to the forms collection.\r\n     * This method ensures that all existing forms on the page are managed by the FormManager.\r\n     * Errors during the addition of individual forms are logged and do not halt the process for subsequent forms.\r\n     */\r\n    createForms(): void {\r\n        const forms = document.querySelectorAll(\"form\");\r\n        const formsArray = Array.from(forms);\r\n        for (const formElement of formsArray) {\r\n            try {\r\n                this._formService.addForm(formElement as HTMLFormElement);\r\n            } catch (error) {\r\n                const errorMessage =\r\n                    error instanceof Error ? error.message : String(error);\r\n                this._logger\r\n                    .getLogger()\r\n                    .error(\r\n                        `FormManager: createForms: Error when adding form: ${errorMessage}`\r\n                    );\r\n                continue;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Initiates the observation of the DOM for any additions or removals of form elements.\r\n     * When a new form is added to the DOM, it automatically gets incorporated into the form management system.\r\n     * This method enables the FormManager to dynamically adapt to changes in the webpage's form structure.\r\n     */\r\n    startObserving(): void {\r\n        if (this.mutationObserver) {\r\n            this.mutationObserver.disconnect();\r\n        }\r\n        this.mutationObserver = new MutationObserver((mutationsList) => {\r\n            // Let the FormManager handle the mutations\r\n            this.handleFormMutations(mutationsList);\r\n        });\r\n\r\n        this.mutationObserver.observe(document.body, {\r\n            childList: true,\r\n            subtree: true\r\n        });\r\n    }\r\n    /**\r\n     * Stops the observation process of the DOM for form elements.\r\n     * This method can be called to halt the dynamic tracking of form elements, usually when cleaning up or reconfiguring.\r\n     */\r\n    public stopObserving(): void {\r\n        this.mutationObserver?.disconnect();\r\n    }\r\n    /**\r\n     * Handles mutations observed in the DOM, specifically targeting the addition of new forms.\r\n     * This method is responsible for integrating newly added forms (both direct and nested) into the form management system.\r\n     * @param {MutationRecord[]} mutationsList - An array of MutationRecord objects representing individual changes in the DOM.\r\n     */\r\n    handleFormMutations(mutationsList: MutationRecord[]): void {\r\n        try {\r\n            for (const mutation of mutationsList) {\r\n                if (mutation.type === \"childList\") {\r\n                    // Process direct forms\r\n                    const directForms = Array.from(mutation.addedNodes).filter(\r\n                        (node): node is HTMLFormElement =>\r\n                            node instanceof HTMLFormElement\r\n                    );\r\n                    for (const form of directForms) {\r\n                        //this._formService.setSubmitHandler(form.name, form.submitHandler);\r\n                        this._formService.addForm(form);\r\n                    }\r\n\r\n                    // Process nested forms\r\n                    const nestedForms = Array.from(mutation.addedNodes)\r\n                        .filter(\r\n                            (node): node is HTMLElement =>\r\n                                node instanceof HTMLElement\r\n                        )\r\n                        .flatMap((node) =>\r\n                            Array.from(node.querySelectorAll(\"form\"))\r\n                        );\r\n                    for (const form of nestedForms) {\r\n                        //this._formService.setSubmitHandler(form.name, form.submitHandler);\r\n                        this._formService.addForm(form);\r\n                    }\r\n                }\r\n            }\r\n        } catch (error) {\r\n            // If error is an instance of Error, log its message; otherwise, log the error directly\r\n            const errorMessage =\r\n                error instanceof Error ? error.message : String(error);\r\n            this._logger\r\n                .getLogger()\r\n                .error(`Error in handleFormMutations: ${errorMessage}`);\r\n        }\r\n    }\r\n}\r\n","import { inject, injectable } from \"inversify\";\r\nimport { TYPES } from \"../di/container-types\";\r\nimport { IDecoratedLogger, IEventService, IFormManager, IFormService, IInitializer, IOptions, ISubmitHandler } from \"../interfaces\";\r\n\r\n/**\r\n * Initializer class responsible for setting up the form validation system.\r\n * It initializes form management, starts observing for form changes, and sets up submit handlers.\r\n */\r\n@injectable()\r\nexport class Initializer implements IInitializer {\r\n    constructor(\r\n        @inject(TYPES.Options) private readonly _options: IOptions,\r\n        @inject(TYPES.FormManager) private readonly _formManager: IFormManager,\r\n        @inject(TYPES.FormService) private readonly _formService: IFormService,\r\n        @inject(TYPES.EventService) private readonly _eventService: IEventService,\r\n        @inject(TYPES.DebuggingLogger) private readonly _logger: IDecoratedLogger\r\n    ) { }\r\n\r\n    /**\r\n     * Initializes the form system. This includes starting the form observer and initializing the form manager.\r\n     * Emits an \"Initialized\" event upon completion.\r\n     * @returns {Promise<IFormManager>} The initialized FormManager instance.\r\n     */\r\n    async init(): Promise<void> {\r\n        // If the DOM is already loaded\r\n        if (document.readyState === \"loading\") {\r\n            // The document is still loading, add an event listener\r\n            document.addEventListener(\"DOMContentLoaded\", () => {\r\n                this.onDOMLoaded();\r\n            });\r\n        } else {\r\n            // The DOM is already loaded\r\n            await this.onDOMLoaded();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Handles tasks to be performed once the DOM is fully loaded.\r\n     * This includes starting form observation and initiating the form manager.\r\n     */\r\n    private async onDOMLoaded(): Promise<void> {\r\n        await this._formManager.init();\r\n    }\r\n\r\n    /**\r\n     * Asynchronously assigns a custom submit handler to a form identified by its unique name.\n     * This method ensures that the specified submit handler is associated with the named form,\n     * whether the form currently exists in the DOM or is added later.\n     *\n     * - If the form is already loaded and recognized by the FormService, the submit handler is\n     * attached immediately to provide custom submit logic for that form.\n     * - If the form is not yet loaded or recognized, the handler is stored and will be applied\n     * automatically once the form becomes available, ensuring seamless integration with dynamically\n     * loaded forms.\n     *\n     * This method is particularly useful for setting up custom submission behaviors for forms,\n     * allowing for asynchronous validation, data processing, or any other custom logic that needs\n     * to be executed upon form submission.\n     * @param {string} formName - The name of the form to which the submit handler will be applied.\r\n     *                            This name should match the 'name' attribute of the form element.\r\n     * @param {ISubmitHandler} handler - A callback function that defines the custom submit logic.\r\n     *                                   The handler function receives the form element and a boolean\r\n     *                                   indicating the validation status as arguments.\r\n     * @returns {Promise<void>} - A promise that resolves when the handler is successfully set, or\r\n     *                            rejects with an error if unable to set the handler.\r\n     * @throws {Error} - Throws an error if an exception occurs during the execution of the method.\r\n     */\r\n    async setSubmitHandler(formName: string, handler: ISubmitHandler): Promise<void> {\r\n        try {\r\n            this._formService.setSubmitHandler(formName, handler);\r\n            return;\r\n\r\n        } catch (error) {\r\n            const errorMessage = error instanceof Error ? error.message : String(error);\r\n            this._logger?.getLogger().error(`Error in setSubmitHandler: ${errorMessage}`);\r\n            throw error; // Rethrowing for potential higher-level handling\r\n        }\r\n    }\r\n}\r\n","export class Result<A> {\n    private readonly value?: A;\n    private readonly error?: Error;\n\n    get isSuccess(): boolean {\n        return this.error === undefined;\n    }\n\n    get isFaulted(): boolean {\n        return this.error !== undefined;\n    }\n\n    constructor(valueOrError: A | Error) {\n        if (valueOrError instanceof Error) {\n            this.error = valueOrError;\n        } else {\n            this.value = valueOrError;\n        }\n    }\n\n    ifFail(defaultValue: A): A {\n        return this.isFaulted ? defaultValue : this.value!;\n    }\n\n    ifFailWithFunction(func: (err: Error) => A): A {\n        return this.isFaulted ? func(this.error!) : this.value!;\n    }\n\n    ifSucc(func: (val: A) => void): void {\n        if (this.isSuccess) {\n            func(this.value!);\n        }\n    }\n\n    match<R>(succ: (val: A) => R, fail: (err: Error) => R): R {\n        return this.isFaulted ? fail(this.error!) : succ(this.value!);\n    }\n\n    map<B>(func: (val: A) => B): Result<B> {\n        if (this.isSuccess) {\n            try {\n                const newValue = func(this.value!);\n                return new Result<B>(newValue);\n            } catch (error) {\n                // Ensure the error is of type Error\n                if (error instanceof Error) {\n                    return new Result<B>(error);\n                } else {\n                    // Create a new error from the caught exception if it's not an instance of Error\n                    return new Result<B>(new Error(String(error)));\n                }\n            }\n        }\n        return new Result<B>(this.error!);\n    }\n\n    async mapAsync<B>(func: (val: A) => Promise<B>): Promise<Result<B>> {\n        if (this.isSuccess) {\n            try {\n                const newValue = await func(this.value!);\n                return new Result<B>(newValue);\n            } catch (error) {\n                // Ensure the error is of type Error\n                if (error instanceof Error) {\n                    return new Result<B>(error);\n                } else {\n                    // Create a new error from the caught exception if it's not an instance of Error\n                    return new Result<B>(new Error(String(error)));\n                }\n            }\n        }\n        return new Result<B>(this.error!);\n    }\n\n    equals(other: Result<A>): boolean {\n        if (this.isFaulted && other.isFaulted) {\n            return this.error!.message === other.error!.message;\n        }\n        if (this.isSuccess && other.isSuccess) {\n            return this.value === other.value; // Nothing fancy here\n        }\n        return false;\n    }\n\n    toString(): string {\n        return this.isFaulted\n            ? `(Error: ${this.error!.message})`\n            : `(Value: ${this.value})`;\n    }\n\n    static handleError<T>(result: Result<T>): Error | undefined {\n        if (!result.isSuccess) {\n            return result.error;\n        }\n        return undefined;\n    }\n\n    static handleSuccess<T>(result: Result<T>): T | undefined {\n        if (result.isSuccess) {\n            return result.value;\n        }\n        return undefined;\n    }\n}\n","import { inject, injectable } from \"inversify\";\nimport { TYPES } from \"../di/container-types\";\nimport {\n    IFormParser,\n    ILogger,\n    IValidationInformation,\n    IValidationRule\n} from \"../interfaces\";\nimport { Result } from \"./Result\";\n\n/**\n * FormParser is responsible for parsing HTML forms and extracting validation rules for each input.\n * It assigns priorities to different validation rule types to determine the order of validation.\n */\n@injectable()\nexport class FormParser implements IFormParser {\n    /**\n     * A map of validation rule types to their associated priority levels.\n     * Higher priority rules will be processed first during validation.\n     */\n    private rulePriorities = new Map<string, number>([\n        [\"required\", 1],\n        [\"regex\", 2],\n        [\"length\", 3],\n        [\"maxlength\", 4],\n        [\"minlength\", 6],\n        [\"range\", 11],\n        [\"remote\", 8],\n        [\"creditcard\", 9],\n        [\"email\", 10],\n        [\"phone\", 10],\n        [\"url\", 10],\n        [\"radio\",10]\n        // ... other rules with their respective priorities\n    ]);\n\n    /**\n     * Constructs a FormParser instance with dependency injection for logging.\n     * @param {ILogger} _logger - Logger injected for logging messages and errors.\n     */\n    constructor(@inject(TYPES.Logger) private readonly _logger: ILogger) { }\n\n    /**\n     * Parses the given HTML form element and extracts validation rules for each input.\n     * @param {HTMLFormElement} formElement - The form element to parse.\n     * @returns {Record<string, IValidationRule[]>} A record object where each key is the\n     * name of a form control and each value is an array of validation rules associated\n     * with that control. If an error occurs during parsing, it logs the error and\n     * returns an empty object.\n     */\n    parse(formElement: HTMLFormElement): Record<string, IValidationRule[]> {\n        try {\n            const validationRules: Record<string, IValidationRule[]> = {};\n            const inputs = formElement.elements;\n\n            for (let i = 0; i < inputs.length; i++) {\n                const input = inputs.item(i) as\n                    | HTMLInputElement\n                    | HTMLSelectElement\n                    | HTMLTextAreaElement;\n                if (\n                    input &&\n                    input.name &&\n                    (input instanceof HTMLInputElement ||\n                        input instanceof HTMLSelectElement ||\n                        input instanceof HTMLTextAreaElement)\n                ) {\n                    const rules: IValidationRule[] =\n                        this.getValidationRules(input);\n                    validationRules[input.name] = rules;\n                }\n            }\n\n            return validationRules;\n        } catch (error) {\n            this._logger.error(\n                `Error parsing form: ${formElement.name}`,\n                error\n            );\n            return {};\n        }\n    }\n\n    /**\n     * Extracts validation rules from an input element's data attributes.\n     * @param {HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement} input - The input element to extract rules from.\n     * @returns {IValidationRule[]} An array of validation rule objects extracted from the input's data attributes.\n     * If an error occurs during the extraction process, it logs the error and returns an empty array.\n     */\n    getValidationRules(\n        input: HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement\n    ): IValidationRule[] {\n        try {\n            const rules: IValidationRule[] = [];\n            const rulesWithParams: Record<string, IValidationRule> = {};\n\n            // Using a traditional for loop instead of Array.from().forEach()\n            for (let i = 0; i < input.attributes.length; i++) {\n                const attr = input.attributes[i];\n\n                if (attr.name.startsWith(\"data-val\")) {\n                    const match = /data-val-([^\\-]+)-?([^\\-]+)?/.exec(\n                        attr.name\n                    );\n                    if (match) {\n                        const [, ruleType, paramName] = match;\n                        if (!rulesWithParams[ruleType]) {\n                            rulesWithParams[ruleType] = {\n                                type: ruleType,\n                                message: \"\",\n                                params: {},\n                                priority:\n                                    this.rulePriorities.get(ruleType) || 99\n                            };\n                        }\n                        // If it's a parameter of the rule, add it to the params object\n                        if (paramName) {\n                            rulesWithParams[ruleType].params[paramName] =\n                                attr.value;\n                        } else {\n                            // It's the main rule attribute, set the message\n                            rulesWithParams[ruleType].message = attr.value;\n                        }\n                    }\n                }\n            }\n\n            // Convert the aggregated rule objects back into an array\n            for (const ruleType in rulesWithParams) {\n                if (\n                    Object.prototype.hasOwnProperty.call(\n                        rulesWithParams,\n                        ruleType\n                    )\n                ) {\n                    rules.push(rulesWithParams[ruleType]);\n                }\n            }\n\n            // Sort the rules based on their assigned priority\n            rules.sort((a, b) => a.priority - b.priority);\n\n            return rules;\n        } catch (error) {\n            this._logger.error(\n                `Error getting validation rules for input: ${input.name}`,\n                error\n            );\n            return [];\n        }\n    }\n\n    /**\n     * Retrieves validation-related information from an input element, including\n     * its validation rules and any additional details needed for validation.\n     * @param {HTMLElement} input - The input element to retrieve information from.\n     * @returns {Result<IValidationInformation>} A Result object that either contains the validation information or an error.\n     */\n    getValidationInformation(\n        input: HTMLElement\n    ): Result<IValidationInformation> {\n        try {\n            // Attempt to get the validation rules for the input element.\n            const rules: IValidationRule[] = this.getValidationRules(\n                input as\n                | HTMLInputElement\n                | HTMLSelectElement\n                | HTMLTextAreaElement\n            );\n            // Construct the validation information object.\n            const parentNode = input.parentNode as HTMLElement;\n            const validationInformation: IValidationInformation = {\n                rules: rules,\n                input: input as\n                    | HTMLInputElement\n                    | HTMLSelectElement\n                    | HTMLTextAreaElement,\n                parentNode: parentNode\n            };\n            // Return a successful Result with the validation information.\n            return new Result<IValidationInformation>(validationInformation);\n        } catch (error) {\n            // Log the error encountered during rule retrieval.\n            this._logger.error(\n                `Error getting validation information for input: ${input}`,\n                error\n            );\n            // Return a Result object containing the error.\n            return new Result<IValidationInformation>(\n                error instanceof Error ? error : new Error(String(error))\n            );\n        }\n    }\n}\n","import { injectable } from \"inversify\";\r\nimport { IForm, ISubmitHandler } from \"../interfaces\";\r\n/**\r\n * Represents a form with its associated properties and behaviors.\r\n * This class encapsulates the HTML form element and provides additional functionality\r\n * such as validation and event handling.\r\n */\r\n@injectable()\r\nexport class Form implements IForm {\r\n    formElement: HTMLFormElement;\r\n    submitHandler: ISubmitHandler | undefined;\r\n    name: string = \"\";\r\n    id = \"\";\r\n    action: string = \"\";\r\n    method: string = \"\";\r\n    attributes: NamedNodeMap;\r\n    elements: HTMLFormControlsCollection;\r\n    isValid: boolean = false;\r\n\r\n    /**\r\n      * Creates an instance of Form.\r\n      * @param {HTMLFormElement} formElement - The HTML form element associated with this instance.\r\n      * This constructor initializes the form properties, including name, id, action, method,\r\n      * attributes, and elements from the passed HTMLFormElement.\r\n      */\r\n    constructor(formElement: HTMLFormElement) {\r\n        this.formElement = formElement;\r\n        this.name = this.formElement.name;\r\n        this.id = this.formElement.id;\r\n        this.action = this.formElement.action;\r\n        this.method = this.formElement.method;\r\n        this.attributes = formElement.attributes;\r\n        this.elements = formElement.elements;\r\n        this.init();\r\n    }\r\n    /**\r\n     * Initializes the form by performing any required setup.\r\n     * This method is intended to be extended with custom initialization logic as needed.\r\n     */\r\n    init(): void {\r\n        // Nothing Here At The Moment.\r\n    }\r\n\r\n\r\n}\r\n","import { inject, injectable } from \"inversify\";\r\nimport { IDecoratedLogger, IForm, IFormFactory } from \"../interfaces\";\r\nimport { Result } from \"../classes/Result\";\r\nimport { TYPES } from \"../di/container-types\";\r\nimport { Form } from \"../classes/Form\";\r\n\r\n/**\r\n * FormFactory is responsible for creating Form objects from HTMLFormElements.\r\n * It ensures that each form has an identifiable attribute (id or name) for validation purposes.\r\n * It utilizes a logger for error handling and logging important information during the form creation process.\r\n */\r\n@injectable()\r\nexport class FormFactory implements IFormFactory {\r\n    /**\r\n     * Constructs a FormFactory instance with dependency injection for logging.\r\n     * @param {IDecoratedLogger} _logger - Logger injected for logging messages and errors.\r\n     */\r\n    constructor(@inject(TYPES.DebuggingLogger) private readonly _logger: IDecoratedLogger) { }\r\n    /**\r\n     * Creates a Form object from a given HTMLFormElement.\n     * Validates if the form element has an id or name attribute for identification.\n     * Logs and handles errors encountered during form creation.\n     * @param {HTMLFormElement} formElement - The HTML form element to be processed.\r\n     * @returns {Result<IForm>} A Result object containing either a Form object or an error.\r\n     */\r\n    create(formElement: HTMLFormElement): Result<IForm> {\r\n        try {\r\n            if (!formElement.id && !formElement.name) {\r\n                const errorMsg = `FormFactory: form element ${formElement.outerHTML} has no id or name attribute. We can't validate a form we can't identify.`;\r\n                this._logger.getLogger().error(errorMsg);\r\n                return new Result<IForm>(new Error(errorMsg));\r\n            }\r\n\r\n            const form = new Form(formElement);\r\n            this._logger.getLogger().info(`FormFactory: Form ${formElement.id || formElement.name} created successfully.`);\r\n            return new Result<IForm>(form);\r\n        } catch (error: unknown) {\r\n            const errorMsg = error instanceof Error ? error.message : `Unknown error during form creation: ${String(error)}`;\r\n            this._logger.getLogger().error(`FormFactory: Error in create method - ${errorMsg}`);\r\n            return new Result<IForm>(new Error(errorMsg));\r\n        }\r\n    }\r\n}\r\n","import { injectable } from \"inversify\";\nimport {\n    IBulkChange,\n    IChange,\n    IObservableCollection,\n    IObserver\n} from \"../interfaces\";\n/**\n * The ObservableCollection class implements an observable collection\n * that allows adding and removing observers, as well as notifying them\n * of changes.\n * @template T The type of items that this collection holds.\n */\n@injectable()\nexport class ObservableCollection<T> implements IObservableCollection<T> {\n    private items: T[] = [];\n    private observers: IObserver<T>[] = [];\n\n    /**\n     * Adds an observer to the collection.\n     *\n     * If the observer is already added to the collection, it won't be added again.\n     * @param {IObserver<T>} observer - The observer to be added.\n     * @returns {boolean} Returns true if the observer is successfully added; otherwise, if the observer is already in the collection, returns false.\n     */\n    addObserver(observer: IObserver<T>): boolean {\n        if (this.observers.includes(observer)) {\n            return false; // Observer already exists, so don't add again\n        }\n        this.observers.push(observer);\n        return true;\n    }\n    /**\n     * Removes an observer from the collection.\n     * @param {IObserver<T>} observer - The observer to be removed.\n     * @returns {boolean} Returns true if the observer is found and removed; otherwise, false.\n     */\n    removeObserver(observer: IObserver<T>): boolean {\n        const index = this.observers.indexOf(observer);\n        if (index > -1) {\n            this.observers.splice(index, 1);\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Adds an item to the collection and notifies the observers of the addition.\n     * @param {T} item - The item to be added to the collection.\n     */\n    addItem(item: T): void {\n        this.items.push(item);\n        this.notifyObservers({ type: \"add\", item });\n    }\n    /**\n     * Adds multiple items to the collection and notifies the observers of the bulk addition.\n     *\n     * Observers are notified once, irrespective of the number of items added.\n     * @param {T[]} items - An array of items to be added to the collection.\n     */\n    addItems(items: T[]): void {\n        this.items.push(...items);\n        this.notifyObservers({ type: \"bulk-add\", items: items }); // Pass items\n    }\n    /**\n     * Finds an item in the collection that satisfies the provided function.\n     * @param {(item: T) => boolean} conditionFunc - The function that new items must satisfy.\n     * @returns {T | undefined} The first item in the collection that satisfies the provided function; otherwise, undefined.\n     */\n    findItem(conditionFunc: (item: T) => boolean): T | undefined {\n        return this.items.find(conditionFunc);\n    }\n    /**\n     * Removes an item from the collection and notifies the observers of the removal.\n     * @param {T} item - The item to be removed from the collection.\n     */\n    removeItem(item: T): void {\n        const index = this.items.indexOf(item);\n        if (index > -1) {\n            this.items.splice(index, 1);\n            this.notifyObservers({ type: \"remove\", item });\n        }\n    }\n    /**\n     * Removes multiple items from the collection and notifies the observers of the bulk removal.\n     *\n     * This method leverages the Set data structure to efficiently identify and remove items from the collection.\n     * Observers are notified once, irrespective of the number of items removed.\n     * If an item is not found in the collection, it is simply ignored.\n     * @param {T[]} itemsToRemove - An array of items to be removed from the collection.\n     */\n    removeItems(itemsToRemove: T[]): void {\n        const itemsToRemoveSet = new Set(itemsToRemove);\n        this.items = this.items.filter((item) => !itemsToRemoveSet.has(item));\n        this.notifyObservers({ type: \"bulk-remove\", items: itemsToRemove });\n    }\n    /**\n     * Notifies all the observers about a change in the collection.\n     *\n     * This method accepts changes that can either be of type `IChange` (a single item change)\n     * or `IBulkChange` (multiple items change). Depending on the type of change, appropriate\n     * logs are printed to the console.\n     * @private\n     * @param {IChange<T> | IBulkChange<T>} change - The change that occurred in the collection.\n     */\n    private notifyObservers(change: IChange<T> | IBulkChange<T>): void {\n        for (const observer of this.observers) {\n            observer.notify(change as IChange<T>); // Here, we're casting it to 'any' to satisfy the type system.\n        }\n        if (\"item\" in change) {\n            // This block handles IChange\n        } else if (\"items\" in change) {\n            // This block handles IBulkChange\n        }\n    }\n    /**\n     * Retrieves a copy of all items in the collection.\n     * @returns {T[]} An array containing all items currently in the collection.\n     */\n    getItems(): T[] {\n        return [...this.items];\n    }\n}\n","import { inject, injectable } from \"inversify\";\nimport { TYPES } from \"../di/container-types\";\nimport { IDebouncerFactory, IDebouncerManager } from \"../interfaces\";\nimport { Debouncer } from \"../utils/Debouncer\";\n\n/**\n * Manages debouncers for individual form controls to optimize performance by limiting the rate at which certain operations like event handling can be performed.\n */\n@injectable()\nexport class DebouncerManager implements IDebouncerManager {\n    private debouncers: { [key: string]: Debouncer } = {};\n    /**\n     * Initializes a new instance of the DebouncerManager with a factory for creating debouncers.\n     * @param {IDebouncerFactory} _debounceFactory - The factory used to create new debouncer instances.\n     */\n    constructor(\n        @inject(TYPES.DebouncerFactory)\n        private readonly _debounceFactory: IDebouncerFactory\n    ) {\n\n    }\n    /**\n     * Retrieves or creates a debouncer for a given control name.\n     * @param {string} controlName - The name of the control for which to get or create a debouncer.\n     * @returns {Debouncer} The debouncer associated with the specified control name.\n     */\n    getDebouncerForControl(controlName: string): Debouncer {\n        if (!this.debouncers[controlName]) {\n            this.debouncers[controlName] = this._debounceFactory.create();\n        }\n        return this.debouncers[controlName];\n    }\n    /**\n     * Cancels and clears a debouncer associated with a specific control name.\n     * @param {string} controlName - The name of the control whose debouncer should be cleared.\n     */\n    clearDebouncersForControl(controlName: string): void {\n        const debouncer = this.debouncers[controlName];\n        if (debouncer) {\n            debouncer.cancel(); // Assuming the debouncer has a cancel method\n            delete this.debouncers[controlName];\n        }\n    }\n    /**\n     * Cancels and clears debouncers for multiple controls.\n     * @param {string[]} controlNames - An array of control names whose debouncers should be cleared.\n     */\n    clearDebouncersForControls(controlNames: string[]): void {\n        controlNames.forEach((controlName) => {\n            if (\n                Object.prototype.hasOwnProperty.call(\n                    this.debouncers,\n                    controlName\n                )\n            ) {\n                this.debouncers[controlName].cancel();\n                delete this.debouncers[controlName];\n            }\n        });\n    }\n}\n","import { injectable } from \"inversify\";\nimport { IDebouncer } from \"../interfaces\";\n\n/**\n * Provides a mechanism to debounce function execution.\n *\n * The `Debouncer` class is responsible for delaying the execution of a function until after a certain time\n * has elapsed since the last time it was invoked. This is useful in situations where you want to\n * limit the rate at which a function is called, such as when responding to user input or window resizing.\n *\n * The class is marked with `@injectable`, allowing it to be used with dependency injection frameworks.\n */\n@injectable()\nexport class Debouncer implements IDebouncer {\n    constructor() { }\n    private timeoutId?: ReturnType<typeof setTimeout>;\n    /**\n     * Debounces the provided function.\n     *\n     * This method takes a function and a wait time in milliseconds. It will delay the execution of the function\n     * until after the wait time has elapsed since the last call to debounce. Subsequent calls to debounce\n     * with a new function will cancel any pending execution from previous calls.\n     * @template T - The type of the function to debounce.\n     * @param {T} func - The function to be debounced.\n     * @param {number} waitMilliseconds - The number of milliseconds to wait before calling the function.\n     */\n    debounce<T extends (...args: any[]) => void>(\n        func: T,\n        waitMilliseconds: number\n    ): void {\n        // Clear the existing timeout, if there is one\n        if (this.timeoutId !== undefined) {\n            clearTimeout(this.timeoutId);\n        }\n        // Start a new timeout\n        this.timeoutId = setTimeout(() => {\n\n            func();\n            this.timeoutId = undefined;\n        }, waitMilliseconds);\n    }\n    public getTimeoutId(): number | undefined {\n        return this.timeoutId;\n    }\n    /**\n     * Cancels any pending debounced function calls.\n     *\n     * If there is a debounced function that has not yet been executed, calling this method will prevent\n     * that function from being called.\n     */\n    cancel(): void {\n        if (this.timeoutId !== undefined) {\n            clearTimeout(this.timeoutId);\n            this.timeoutId = undefined;\n        }\n    }\n}\n","import { injectable } from \"inversify\";\nimport { IDebouncer, IDebouncerFactory } from \"../interfaces\";\nimport { Debouncer } from \"../utils/Debouncer\";\n\n/**\n * A factory for creating instances of `Debouncer`.\n *\n * The `DebouncerFactory` class implements the `IDebouncerFactory` interface\n * and is responsible for providing a method to create new `Debouncer` objects.\n * This class uses the `@injectable` decorator to allow it to be injected into\n * other components, enhancing modularity and testability.\n * @see {@link IDebouncerFactory} for interface documentation.\n */\n@injectable()\nexport class DebouncerFactory implements IDebouncerFactory {\n    constructor() {\n\n    }\n    /**\n     * Creates a new instance of `Debouncer`.\n     *\n     * This method implements the `create` method from the `IDebouncerFactory` interface.\n     * It allows consumers to obtain a fresh instance of `Debouncer` without needing to know\n     * the details of how the `Debouncer` is constructed.\n     * @returns {IDebouncer} An instance of `Debouncer` which can be used to debounce function calls.\n     */\n    create(): IDebouncer {\n        return new Debouncer();\n    }\n}\n","import { inject, injectable } from \"inversify\";\nimport { TYPES } from \"../di/container-types\";\nimport {\n    IDecoratedLogger,\n    IForm,\n    IFormParser,\n    IUIHandler,\n    IValidationControlFactory,\n    IValidationService\n} from \"../interfaces\";\nimport { Result } from \"../classes/Result\";\n/**\n * Service responsible for performing validation on forms and their controls.\n * It integrates with UI handling and form parsing services to manage the validation process.\n */\n@injectable()\nexport class ValidationService implements IValidationService {\n    /**\n     * Constructs the ValidationService with required dependencies.\n     * @param {IDecoratedLogger} _logger - Logger for logging messages and errors.\n     * @param {IFormParser} _formParser - Service to parse form and retrieve validation rules.\n     * @param {IValidationControlFactory} _validationControlFactory - Factory to create validation controls.\n     * @param {IUIHandler} _uiHandler - Handler for updating the UI with validation messages.\n     */\n    constructor(\n        @inject(TYPES.DebuggingLogger)\n        private readonly _logger: IDecoratedLogger,\n        @inject(TYPES.FormParser) private readonly _formParser: IFormParser,\n        @inject(TYPES.ValidationControlFactory) private readonly _validationControlFactory: IValidationControlFactory,\n        @inject(TYPES.UIHandler) private readonly _uiHandler: IUIHandler\n    ) { }\n\n    /**\n     * Validates all controls within a form and updates the UI with validation messages.\n     * Skips validation for buttons and hidden inputs.\n     * Sets the form's overall validity and dispatches a custom event to indicate the validation result.\n     * @param {IForm} form - The form to validate.\n     * @returns {Promise<boolean>} The overall validity of the form after validation.\n     */\n    async validateForm(form: IForm): Promise<boolean> {\n        // Convert the form's elements to an array and filter out non-validatable elements.\n        const controls = Array.from(form.elements).filter(\n            (el) => (el instanceof HTMLInputElement ||\n                el instanceof HTMLSelectElement ||\n                el instanceof HTMLTextAreaElement) &&\n                el.type !== \"button\" && el.type !== \"submit\" && el.type !== \"hidden\"\n        );\n\n        // Map each control to a validation promise, using validateControl.\n        const validationPromises = controls.map(control =>\n            this.validateControl(control as HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement)\n                .catch(error => {\n                    // Handle validation error for the control, e.g., logging or setting a flag.\n                    console.error(`Validation failed for control: ${control}`, error);\n                    return false; // Treat validation errors as invalid.\n                })\n        );\n\n        // Wait for all validations to complete.\n        const validationResults = await Promise.all(validationPromises);\n\n        // Check if all validations passed.\n        const isFormValid = validationResults.every(result => result);\n\n        // Set the form's validity based on the validation results.\n        form.isValid = isFormValid;\n        form.formElement.setAttribute(\"data-is-valid\", String(isFormValid));\n\n        return isFormValid;\n    }\n    /**\n     * Validates a control and updates the UI with validation messages.\n     * Skips validation if the control is a button element.\n     * @param {HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement} control - The control to validate.\n     * @returns {Promise<boolean>} True if the control is valid, false otherwise.\n     */\n    async validateControl(\n        control: HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement\n    ): Promise<boolean> {\n        // Check if the control is a button and return early if it is.\n        if (control instanceof HTMLButtonElement) {\n            this._logger.getLogger().info(`Skipping validation for button with name: ${control.name}`);\n            return false;\n        }\n        // Call the validation control factory to create a validation control\n        const validationControl = this._validationControlFactory.create(control);\n\n        // Get the validation information and rules for the control\n        const getValidationInformationResults =\n            this._formParser.getValidationInformation(control);\n\n        // If we dont have validation information, log the error and return early\n        if (!getValidationInformationResults.isSuccess) {\n            const error = Result.handleError(getValidationInformationResults);\n            this._logger.getLogger().error(error);\n            return false;\n        }\n        // Handle the validation information results\n        const getValidationRulesResult = Result.handleSuccess(\n            getValidationInformationResults\n        );\n        if (getValidationRulesResult === undefined) {\n            this._logger.getLogger().error(\"Validation rules are undefined\");\n            return false;\n        }\n\n        // Destructure the getValidationRulesResult\n        const { rules } = getValidationRulesResult;\n\n        // Await the validation and get the results\n        const validationResults = await validationControl.validate(rules);\n\n        // If we dont have validation results, log the error and return early\n        if (!validationResults.isSuccess) {\n            const error = Result.handleError(validationResults);\n            this._logger.getLogger().error(error);\n        }\n\n        // Handle the validation results\n        const validationResult = Result.handleSuccess(validationResults);\n        if (validationResult === undefined) {\n            this._logger.getLogger().error(\"Validation result is undefined\");\n            return false;\n        }\n\n        // Hand off the validation result to the UI handler\n        this._uiHandler.updateValidationMessage(validationResult);\n        return validationResult.isValid;\n    }\n}\n","import {\r\n    IDecoratedLogger,\r\n    IValidationControl,\r\n    IValidationResult,\r\n    IValidationRule\r\n} from \"../interfaces\";\r\nimport { Result } from \"./Result\";\r\n\r\n/**\r\n * Represents a control (input, select, textarea) within a form for validation purposes.\r\n * This class encapsulates the logic for applying validation rules to a control and determining its validity.\r\n */\r\nexport class ValidationControl implements IValidationControl {\r\n    control: HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement;\r\n    isInteracted: boolean = false;\r\n    validationRules: IValidationRule[] = [];\r\n    isValid: boolean = false;\r\n    isInteractedWith: boolean = false;\r\n\r\n    /**\r\n     * Creates an instance of the ValidationControl class.\r\n     * @param {HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement} control - The control to be validated.\r\n     * @param {IDecoratedLogger} _logger - Logger for debugging and error messages.\r\n     * This constructor initializes the validation control with the provided HTML control and logger.\r\n     */\r\n    constructor(control: HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement, private readonly _logger: IDecoratedLogger) {\r\n        this.control = control;\r\n    }\r\n\r\n    /**\r\n     * Validates the control against a set of rules.\r\n     * @param {IValidationRule[]} rules - An array of validation rules to apply to the control.\r\n     * @returns {Promise<Result<IValidationResult>>} The result of the validation, wrapped in a Result object.\r\n     * This method performs validation on the control using the provided rules and returns the validation result.\r\n     */\r\n    async validate(rules: IValidationRule[]): Promise<Result<IValidationResult>> {\r\n        try {\r\n            const value = this.control.value.trim();\r\n\r\n            const validationResult: IValidationResult = {\r\n                control: this.control,\r\n                isValid: true,\r\n                errorMessage: \"\",\r\n                errorMessages: []\r\n            };\r\n\r\n            for (const rule of rules) {\r\n                if (this.isInteracted) {\r\n                    continue;\r\n                }\r\n                const ruleResult = await this.applyRule(rule, value);\r\n                if (!ruleResult.isValid) {\r\n                    validationResult.isValid = false;\r\n                    validationResult.errorMessages.push(ruleResult.errorMessage);\r\n                    // Optionally, break here if you want to stop at the first failure\r\n                    break;\r\n                }\r\n            }\r\n\r\n            // If there were validation errors, mark the field as interacted.\r\n            if (validationResult.errorMessages.length > 0) {\r\n                this.isInteracted = true;\r\n            }\r\n            return new Result<IValidationResult>(validationResult);\r\n        }\r\n        catch (error) {\r\n            return new Result<IValidationResult>(error instanceof Error ? error : new Error(String(error)));\r\n        }\r\n    }\r\n    /**\r\n     * Applies a validation rule to the current control's value.\r\n     * @param {IValidationRule} rule - The validation rule to apply.\r\n     * @param {string} value - The current value of the control.\r\n     * @returns {Promise<IValidationResult>} The result of applying the validation rule.\r\n     */\r\n    private async applyRule(rule: IValidationRule, value: string): Promise<IValidationResult> {\r\n        switch (rule.type) {\r\n        case \"required\":\r\n            return this.validateRequired(value, rule.message);\r\n        case \"length\": {\r\n            const minLength = rule.params.min ? parseInt(rule.params.min, 10) : 0; // Default to 0 if not specified\r\n            const maxLength = rule.params.max ? parseInt(rule.params.max, 10) : Infinity; // Default to Infinity if not specified\r\n            return this.validateLength(value, minLength, maxLength, rule.message);\r\n        }\r\n        case \"maxlength\": {\r\n            const maxLength = rule.params.max ? parseInt(rule.params.max, 10) : Infinity; // Default to Infinity if not specified\r\n            return this.validateLength(value, 0, maxLength, rule.message);\r\n        }\r\n        // minlength\r\n        case \"minlength\": {\r\n            const minLength = rule.params.min ? parseInt(rule.params.min, 10) : 0; // Default to 0 if not specified\r\n            return this.validateLength(value, minLength, Infinity, rule.message);\r\n        }\r\n        case \"equalto\": {\r\n            const compareToControlName = rule.params.other.replace(/^\\*\\./, \"\"); // Stripping out any leading '*.'\r\n            return this.validateEqualTo(value, compareToControlName, rule.message);\r\n        }\r\n        case \"regex\":\r\n            return rule.params.pattern\r\n                ? this.validateRegex(value, rule.params.pattern, rule.message)\r\n                : this.createValidationResult(true, \"\");\r\n        case \"range\": {\r\n            const min = rule.params.min !== undefined ? parseInt(rule.params.min, 10) : -Infinity;\r\n            const max = rule.params.max !== undefined ? parseInt(rule.params.max, 10) : Infinity;\r\n            return this.validateRange(value, min, max, rule.message);\r\n        }\r\n        case \"email\": {\r\n            const emailPattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n            return this.validateRegex(value, emailPattern.source, rule.message || \"Invalid email address.\");\r\n        }\r\n        case \"phone\": {\r\n            const phonePattern = /^(?:\\+1)?\\s*(?:\\([2-9]\\d{2}\\)\\s*|\\d{3}[\\s.-]?)\\d{3}[\\s.-]?\\d{4}$/;\r\n            return this.validateRegex(value, phonePattern.source, rule.message || \"Invalid phone number format.\");\r\n        }\r\n        case \"url\": {\r\n            const urlPattern = /^(http(s)?:\\/\\/.)[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)$/;\r\n            return this.validateRegex(value, urlPattern.source, rule.message || \"Invalid URL format.\");\r\n        }\r\n        case \"creditcard\":\r\n            return this.validateCreditCard(value, rule.message || \"The credit card number is not valid.\");\r\n        case \"remote\": {\r\n            const { url, additionalfields } = rule.params;\r\n            return await this.validateRemote(value, url, additionalfields, rule.message);\r\n        }\r\n        // Inside the applyRule method\r\n        case \"fileextensions\": {\r\n            return this.validateFileExtensions(value, rule.params.extensions, rule.message);\r\n        }\r\n        // ...\r\n\r\n        default:\r\n            break;\r\n        }\r\n        this.isValid = true;\r\n        return this.createValidationResult(true, \"\");\r\n    }\r\n\r\n    /**\r\n     * Validates if a value is not empty.\r\n     * @param {string} value - The value to be validated.\r\n     * @param {string} message - The error message to display if the validation fails.\r\n     * @returns {IValidationResult} - Result of the validation with status and message.\r\n     */\r\n    private validateRequired(value: string, message: string): IValidationResult {\r\n        if (!value) {\r\n            return this.createValidationResult(false, message);\r\n        }\r\n        return this.createValidationResult(true, \"\");\r\n    }\r\n\r\n    /**\r\n    // eslint-disable-next-line jsdoc/check-alignment\r\n     * Validates if the value of the given control matches the value of another control.\r\n     * @param {string} value - The value of the control to validate.\r\n     * @param {string} compareToControlName - The name of the control to compare against.\r\n     * @param {string} errorMessage - The error message to display if the validation fails.\r\n     * @returns {IValidationResult} - Result of the validation with status and message.\r\n     */\r\n    private validateEqualTo(value: string, compareToControlName: string, errorMessage: string): IValidationResult {\r\n        const compareControl = document.querySelector(`[name='${compareToControlName}']`) as HTMLInputElement;\r\n        const isValid = compareControl && value === compareControl.value.trim();\r\n        return this.createValidationResult(isValid, isValid ? \"\" : errorMessage || \"The values do not match.\");\r\n    }\r\n\r\n    /**\r\n     * Validates the length of a value against specified minimum and maximum lengths.\r\n     * @param {string} value - The value to validate.\r\n     * @param {number} minLength - The minimum acceptable length.\r\n     * @param {number} maxLength - The maximum acceptable length.\r\n     * @param {string} message - The error message to display if the validation fails.\r\n     * @returns {IValidationResult} - Result of the validation with status and message.\r\n     */\r\n    private validateLength(value: string, minLength: number, maxLength: number, message: string): IValidationResult {\r\n        if (value.length < minLength || value.length > maxLength) {\r\n            return this.createValidationResult(false, message);\r\n        }\r\n        return this.createValidationResult(true, \"\");\r\n    }\r\n\r\n    /**\r\n     * Validates if a value matches a specific regular expression pattern.\r\n     * @param {string} value - The value to validate.\r\n     * @param {string} pattern - The regex pattern to test against.\r\n     * @param {string} message - The error message to display if the validation fails.\r\n     * @returns {IValidationResult} - Result of the validation with status and message.\r\n     */\r\n    private validateRegex(value: string, pattern: string, message: string): IValidationResult {\r\n        const regex = new RegExp(pattern);\r\n        if (!regex.test(value)) {\r\n            return this.createValidationResult(false, message);\r\n        }\r\n        return this.createValidationResult(true, \"\");\r\n    }\r\n\r\n    /**\r\n     * Validates if a numerical value falls within a specified range.\r\n     * @param {string} value - The value to validate.\r\n     * @param {number} min - The minimum acceptable value.\r\n     * @param {number} max - The maximum acceptable value.\r\n     * @param {string} message - The error message to display if the validation fails.\r\n     * @returns {IValidationResult} - Result of the validation with status and message.\r\n     */\r\n    private validateRange(value: string, min: number, max: number, message: string): IValidationResult {\r\n        const numericValue = parseFloat(value);\r\n        const isValid = numericValue >= min && numericValue <= max;\r\n        return this.createValidationResult(isValid, isValid ? \"\" : message);\r\n    }\r\n\r\n    /**\r\n     * Validates if a value is a valid credit card number.\r\n     * @param {string} value - The credit card number to validate.\r\n     * @param {string} message - The error message to display if the validation fails.\r\n     * @returns {IValidationResult} - Result of the validation with status and message.\r\n     */\r\n    private validateCreditCard(value: string, message: string): IValidationResult {\r\n        const isValid = this.isValidCreditCard(value);\r\n        return this.createValidationResult(isValid, isValid ? \"\" : message);\r\n    }\r\n\r\n    /**\r\n     * Performs remote validation by sending a request to a specified URL.\r\n     * Appends additional fields to the request if provided.\r\n     * Handles different types of errors including network issues and invalid server responses.\r\n     * @param {string} value - The value of the control to be validated.\r\n     * @param {string} url - The URL to which the validation request is sent.\r\n     * @param {string} fields - Additional field names to include in the validation request.\r\n     * @param {string} errorMessage - Default error message to use if the validation fails.\r\n     * @returns {Promise<IValidationResult>} - A promise that resolves to the validation result.\r\n     * @throws {Error} - Throws an error if the server response is not OK or if the response format is invalid.\r\n     */\r\n    private async validateRemote(value: string, url: string, fields: string, errorMessage: string): Promise<IValidationResult> {\r\n        let validationUrl = `${url}?${encodeURIComponent(this.control.name)}=${encodeURIComponent(value)}`;\r\n\r\n        // Append additional fields to the URL if they exist\r\n        if (fields) {\r\n            const fieldsArray = fields.split(\",\").map(field => field.trim().replace(/^\\*\\./, \"\"));\r\n            for (const fieldName of fieldsArray) {\r\n                if (fieldName !== this.control.name) {\r\n                    // Now 'fieldName' won't have the '*.' prefix.\r\n                    const additionalFieldElement = this.control.form?.querySelector(`[name=\"${fieldName}\"]`) as HTMLInputElement | null;\r\n\r\n                    if (additionalFieldElement) {\r\n                        validationUrl += `&${encodeURIComponent(fieldName)}=${encodeURIComponent(additionalFieldElement.value)}`;\r\n                    } else {\r\n                        // Log for debugging purposes\r\n                        console.log(`Field with name ${fieldName} not found.`);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        try {\r\n            const response = await fetch(validationUrl);\r\n            if (!response.ok) {\r\n                throw new Error(`Server responded with status: ${response.status}`);\r\n            }\r\n            const validationResult = await response.json();\r\n\r\n            // The JSON response should contains at least a boolean `isValid` and may contain an optional string `errorMessage`\r\n            if (typeof validationResult.isValid !== \"boolean\") {\r\n                // The JSON does not have the expected shape.\r\n                throw new Error(\"Invalid response format from server.\");\r\n            }\r\n            return this.createValidationResult(validationResult.isValid, errorMessage);\r\n        } catch (error) {\r\n            this._logger.getLogger().error(error);\r\n            let errorMessage = \"Remote validation failed due to an unknown error. Please try again.\";\r\n            if (error instanceof TypeError) {\r\n                // This usually indicates a network error.\r\n                errorMessage = \"Network error: Unable to reach the validation server. Please check your connection.\";\r\n            } else if (error instanceof Error) {\r\n                // Generic error, possibly from the fetch operation itself (e.g., server responded with a status code).\r\n                errorMessage = error.message;\r\n            }\r\n            return this.createValidationResult(false, errorMessage);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Validates the file extension of a given input against a list of allowed extensions.\r\n     * @param {string} value - The value of the input, typically the filename including the extension.\r\n     * @param {string} allowedExtensions - A comma-separated string of allowed file extensions.\r\n     * @param {string} message - The error message to display if the validation fails.\r\n     * @returns {IValidationResult} An object representing the outcome of the validation.\r\n     * This method checks whether the file extension of the input value is included in the list\r\n     * of allowed extensions. It returns a validation result object with the validation status\r\n     * and the appropriate error message if validation fails.\r\n     */\r\n    private validateFileExtensions(value: string, allowedExtensions: string, message: string): IValidationResult {\r\n        // Split the extensions into an array and prepare for comparison\r\n        const extensionsArray = allowedExtensions.split(\",\").map(ext => ext.trim().toLowerCase());\r\n        // Extract the file extension from the value\r\n        const fileExtension = value.slice(value.lastIndexOf(\".\")).toLowerCase();\r\n        // Check if the file extension is included in the allowed extensions\r\n        const isValid = extensionsArray.includes(fileExtension);\r\n        return this.createValidationResult(isValid, isValid ? \"\" : message);\r\n    }\r\n\r\n    /**\r\n     * Creates a validation result object.\r\n     * @param {boolean} isValid - Indicates whether the control is valid.\r\n     * @param {string | null} errorMessage - The error message to include in the result, if any.\r\n     * @returns {IValidationResult} A validation result object.\r\n     * This method constructs a validation result object based on the validation outcome.\r\n     */\r\n    private createValidationResult(isValid: boolean, errorMessage?: string | null): IValidationResult {\r\n        return {\r\n            control: this.control,\r\n            isValid: isValid,\r\n            errorMessage: errorMessage || \"\", // If errorMessage is null/undefined, default to an empty string\r\n            errorMessages: errorMessage ? [errorMessage] : [] // Only include errorMessage in the array if it's truthy\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Checks if the provided credit card number is valid.\r\n     * @param {string} value - The credit card number to validate.\r\n     * @returns {boolean} True if the credit card number is valid, false otherwise.\r\n     * This method uses the Luhn Algorithm to validate the credit card number.\r\n     */\r\n    private isValidCreditCard(value: string): boolean {\r\n        // First, check if the input has only digits (after removing spaces)\r\n        if (!/^\\d+$/.test(value.replace(/\\s+/g, \"\"))) {\r\n            return false; // Contains non-numeric characters\r\n        }\r\n\r\n        // Remove all non-digit characters from the string\r\n        const numericOnly = value.replace(/\\D/g, \"\");\r\n\r\n        // Implement Luhn Algorithm\r\n        let sum = 0;\r\n        let shouldDouble = false;\r\n\r\n        // Loop through values starting from the rightmost side\r\n        for (let i = numericOnly.length - 1; i >= 0; i--) {\r\n            let digit = parseInt(numericOnly.charAt(i), 10);\r\n\r\n            if (shouldDouble) {\r\n                if ((digit *= 2) > 9) digit -= 9;\r\n            }\r\n\r\n            sum += digit;\r\n            shouldDouble = !shouldDouble;\r\n        }\r\n\r\n        // If the sum modulo 10 is equal to 0, the number is valid\r\n        return sum % 10 === 0;\r\n    }\r\n\r\n}\r\n","import { inject, injectable } from \"inversify\";\r\nimport { TYPES } from \"../di/container-types\";\r\nimport { IDecoratedLogger, IValidationControl, IValidationControlFactory } from \"../interfaces\";\r\nimport { ValidationControl } from \"../classes/ValidationControl\";\r\n\r\n@injectable()\r\nexport class ValidationControlFactory implements IValidationControlFactory{\r\n    private _logger: IDecoratedLogger;\r\n\r\n    constructor(@inject(TYPES.DebuggingLogger) logger: IDecoratedLogger) {\r\n        this._logger = logger;\r\n    }\r\n\r\n    public create(control: HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement): IValidationControl {\r\n        return new ValidationControl(control, this._logger);\r\n    }\r\n}\r\n","import { inject, injectable } from \"inversify\";\r\nimport { TYPES } from \"../di/container-types\";\r\nimport { IDecoratedLogger, IUIHandler, IValidationResult } from \"../interfaces\";\r\n\r\n@injectable()\r\n/**\r\n * Handles the display and hiding of validation messages in the UI.\r\n */\r\nexport class UIHandler implements IUIHandler {\r\n    /**\r\n     * Creates an instance of UIHandler.\r\n     * @param {IDecoratedLogger} _logger - Logger for logging information and errors.\r\n     */\r\n    constructor(@inject(TYPES.DebuggingLogger) private readonly _logger: IDecoratedLogger) { }\r\n    /**\r\n     * Updates the UI to show or hide the validation message based on the validation result.\r\n     * @param {IValidationResult} validationResult - The result of the validation check.\r\n     */\r\n    updateValidationMessage(validationResult: IValidationResult): void {\r\n        if (validationResult === undefined) {\r\n            return;\r\n        }\r\n        const { control, errorMessages, isValid } = validationResult;\r\n        if (!isValid) {\r\n            // Get the first error message\r\n            const errorMessage = errorMessages.find(m => m.length > 0);\r\n            if (errorMessage === undefined) {\r\n                return;\r\n            }\r\n            this.showValidationMessage(control as HTMLInputElement, errorMessage);\r\n        }\r\n        else {\r\n            this.hideValidationMessage(control as HTMLInputElement);\r\n        }\r\n    }\r\n    /**\r\n     * Shows the validation error message next to the form control.\r\n     * @param {HTMLInputElement} control - The form control related to the validation message.\r\n     * @param {string} message - The validation error message to display.\r\n     * @private\r\n     */\r\n    private showValidationMessage(control: HTMLInputElement, message: string): void {\r\n        // Check if the control is contained within a parent element\r\n        const parentElement = control.parentElement;\r\n        if (!parentElement) {\r\n            this._logger.getLogger().error(\"Control is not contained within a parent element\");\r\n            return; // Exit the function if there is no parent element\r\n        }\r\n\r\n        // Find any element within the parent that has the 'data-valmsg-for' attribute for the control's name\r\n        const validationMessageElement = this.getValidationMessageElement(control);\r\n\r\n        if (validationMessageElement === null || validationMessageElement === undefined) {\r\n            this._logger.getLogger().warn(`No validation message element found for control with name: ${control.name}. Please make sure you are using a <span>`);\r\n            return;\r\n        }\r\n        // Update the validation message text\r\n        validationMessageElement.textContent = message;\r\n\r\n        // Update the classes to reflect the validation state\r\n        validationMessageElement.classList.remove(\"field-validation-valid\");\r\n        validationMessageElement.classList.add(\"field-validation-error\");\r\n\r\n        // Set ARIA attributes\r\n        control.setAttribute(\"aria-invalid\", \"true\"); // Mark the control as invalid\r\n        control.setAttribute(\"aria-describedby\", validationMessageElement.id); // Ensure the message element has an ID for this to work\r\n    }\r\n    /**\r\n     * Hides the validation message for the form control.\r\n     * @param {HTMLInputElement} control - The form control related to the validation message.\r\n     * @private\r\n     */\r\n    private hideValidationMessage(control: HTMLInputElement): void {\r\n        // Check if the control is contained within a parent element\r\n        const parentElement = control.parentElement;\r\n        if (!parentElement) {\r\n            this._logger.getLogger().error(\"Control is not contained within a parent element\");\r\n            return; // Exit the function if there is no parent element\r\n        }\r\n\r\n        // Find any element within the parent that has the 'data-valmsg-for' attribute for the control's name\r\n        const validationMessageElement = this.getValidationMessageElement(control);\r\n\r\n        if (validationMessageElement) {\r\n            // We found the element for the validation message, regardless of its type (it could be a <span>, <div>, etc.)\r\n\r\n            // Clear the validation message text\r\n            validationMessageElement.textContent = \"\";\r\n\r\n            // Update the classes to reflect the validation state\r\n            validationMessageElement.classList.remove(\"field-validation-error\");\r\n            validationMessageElement.classList.add(\"field-validation-valid\");\r\n\r\n            // Update ARIA attributes\r\n            control.removeAttribute(\"aria-invalid\"); // Remove the invalid attribute\r\n            control.removeAttribute(\"aria-describedby\"); // Remove the describedby attribute\r\n        } else {\r\n            // If we couldn't find the element for the validation message, log a warning message\r\n            this._logger.getLogger().warn(`No validation message element found for control with name: ${control.name}`);\r\n        }\r\n    }\r\n    /**\r\n     * Retrieves the corresponding validation message element for a given form control.\r\n     * @param {HTMLInputElement} control - The form control to find the validation message element for.\r\n     * @returns {HTMLElement | null} - The element that displays the validation message, if found; otherwise, null.\r\n     * @private\r\n     */\r\n    private getValidationMessageElement(control: HTMLInputElement): HTMLElement | null {\r\n        // Check if the form element is contained within a form\r\n        const form = control.form;\r\n        if (!form) {\r\n            this._logger.getLogger().error(`Form not found for control with name: ${control.name} and id: ${control.id}`);\r\n            return null;\r\n        }\r\n\r\n        // Attempt to find the validation message element within the entire form\r\n        const msgElement = form.querySelector(`[data-valmsg-for=\"${control.name}\"]`);\r\n        return msgElement as HTMLElement; // Will be null if not found, or the HTMLElement if found\r\n    }\r\n}\r\n","import { injectable } from \"inversify\";\r\nimport { IUtil } from \"../interfaces/IUtil\";\r\n@injectable()\r\nexport class Util implements IUtil {\r\n\r\n    generateGuid(): string {\r\n        const s4 = () => {\r\n            return Math.floor((1 + Math.random()) * 0x10000)\r\n                .toString(16)\r\n                .substring(1);\r\n        };\r\n        return `${s4()}${s4()}-${s4()}-${s4()}-${s4()}-${s4()}${s4()}${s4()}`;\r\n\r\n    }\r\n}\r\n","import { inject, injectable } from \"inversify\";\r\nimport { TYPES } from \"../di/container-types\";\r\nimport { Result } from \"../classes/Result\";\r\nimport { IDecoratedLogger, IEventEmitter,IForm, IFormFactory, IFormService, IObservableCollection, ISubmitHandler } from \"../interfaces\";\r\n/**\r\n * Service for managing forms within an application. \r\n * It handles adding forms to a collection, managing submit handlers, and checking forms.\r\n */\r\n@injectable()\r\nexport class FormService implements IFormService {\r\n    private submitHandlers: Record<string, ISubmitHandler> = {};\r\n    /**\r\n     * Initializes a new instance of the FormService.\r\n     * @param _formsCollection - The collection of observable forms.\r\n     * @param _formFactory - Factory for creating form objects.\r\n     * @param _eventEmitter - Emitter for dispatching events.\r\n     * @param _logger - Logger for logging information and errors.\r\n     */\r\n    constructor(\r\n        @inject(TYPES.ObservableFormsCollection) private readonly _formsCollection: IObservableCollection<IForm>,\r\n        @inject(TYPES.FormFactory) private readonly _formFactory: IFormFactory,\r\n        @inject(TYPES.EventEmitter) private readonly _eventEmitter: IEventEmitter<any>,\r\n        @inject(TYPES.DebuggingLogger) private readonly _logger: IDecoratedLogger\r\n    ) {\r\n    }\r\n    /**\r\n     * Adds a form element to the forms collection and applies any associated submit handlers.\r\n     * Dispatches a 'formAdded' event upon successful addition.\r\n     * @param formElement - The HTML form element to add.\r\n     * @returns The form object if successfully added, or undefined if an error occurs.\r\n     */\r\n    addForm(formElement: HTMLFormElement): IForm | undefined {\r\n        if (!formElement) {\r\n            this._logger.getLogger().error(\"FormElement is undefined or null.\");\r\n            return;\r\n        }\r\n\r\n        this._logger.getLogger().info(`FormService is adding form: ${formElement.name || \"unnamed form\"}`);\r\n\r\n        try {\r\n            const form = this.checkForm(formElement);\r\n            if (!form) {\r\n                this._logger.getLogger().error(`Failed to create form object for: ${formElement.name || \"unnamed form\"}`);\r\n                return;\r\n            }\r\n\r\n            this._formsCollection.addItem(form);\r\n\r\n            // Check if a submit handler exists for this form\r\n            const handler = this.submitHandlers[form.name];\r\n            if (handler) {\r\n                form.submitHandler = handler;\r\n                delete this.submitHandlers[form.name]; // Remove the handler after applying\r\n                this._logger.getLogger().info(`Submit handler applied for form: ${form.name}`);\r\n            }\r\n\r\n            // Dispatch a standard DOM event indicating that a new form has been added\r\n            const event = new CustomEvent(\"formAdded\", { detail: form });\r\n            document.dispatchEvent(event);\r\n\r\n            return form;\r\n        } catch (error) {\r\n            const errorMessage = error instanceof Error ? error.message : \"Unknown error during form addition.\";\r\n            this._logger.getLogger().error(`Error in addForm: ${errorMessage}`);\r\n        }\r\n    }\r\n    /**\r\n     * Validates and creates a form object from a given HTMLFormElement.\r\n     * @param formElement - The HTMLFormElement to validate and create a form object from.\r\n     * @returns A form object if successfully created, or undefined if an error occurs.\r\n     */\r\n    checkForm(formElement: HTMLFormElement): IForm | undefined {\r\n        const createFormResults = this._formFactory.create(formElement);\r\n\r\n        if (!createFormResults.isSuccess) {\r\n            const error = Result.handleError(createFormResults);\r\n            this._logger.getLogger().error(`FormManager: addForm: Error when creating form: ${error}`);\r\n        }\r\n        const resultValue = Result.handleSuccess(createFormResults);\r\n        if (resultValue === undefined) {\r\n            return undefined;\r\n        }\r\n        return resultValue;\r\n    }\r\n    /**\r\n     * Sets a submit handler for a form identified by its name. If the form is already present, the handler is applied immediately.\r\n     * Otherwise, the handler is stored and will be applied when the form is added.\r\n     * @param formName - The name of the form to set the submit handler for.\r\n     * @param handler - The function to handle form submission.\r\n     */\r\n    setSubmitHandler(formName: string, handler: ISubmitHandler): void {\r\n        const form = this.getFormByName(formName);\r\n        if (form) {\r\n            form.submitHandler = handler;\r\n        } else {\r\n            this.submitHandlers[formName] = handler; // Store the handler for later use\r\n        }\r\n    }\r\n    /**\r\n     * Retrieves a form from the forms collection by its name.\r\n     * @param formName - The name of the form to retrieve.\r\n     * @returns The form object if found, or undefined if not found.\r\n     */\r\n    getFormByName(formName: string): IForm | undefined {\r\n        return this._formsCollection.getItems().find(form => form.name === formName);\r\n    }\r\n\r\n}\r\n","import { Container } from \"inversify\";\r\nimport { TYPES } from \"./container-types\";\r\nimport {\r\n    IAppEvents,\r\n    IDebouncerFactory,\r\n    IDebouncerManager,\r\n    IDecoratedLogger,\r\n    IEventEmitter,\r\n    IEventService,\r\n    IForm,\r\n    IFormFactory,\r\n    IFormManager,\r\n    IFormParser,\r\n    IFormService,\r\n    IInitializer,\r\n    ILogger,\r\n    IObservableCollection,\r\n    IStateManager,\r\n    IUIHandler,\r\n    IValidationControlFactory,\r\n    IValidationService\r\n} from \"@interfaces/index\";\r\nimport { Logger } from \"../logging/Logger\";\r\nimport { EventEmitter } from \"../classes/EventEmitter\";\r\nimport { EventService } from \"../services/EventService\";\r\nimport { StateManager } from \"../managers/StateManager\";\r\nimport { DebuggingLogger } from \"../logging/DebuggingLogger\";\r\nimport { FormManager } from \"../managers/FormManager\";\r\nimport { Initializer } from \"../classes/Initializer\";\r\nimport { FormParser } from \"../classes/FormParser\";\r\nimport { FormFactory } from \"../factory/FormFactory\";\r\nimport { ObservableCollection } from \"../classes/ObservableCollection\";\r\nimport { DebouncerManager } from \"../managers/DebounceManager\";\r\nimport { DebouncerFactory } from \"../factory/DebouncerFactory\";\r\nimport { ValidationService } from \"../services/ValidationService\";\r\nimport { ValidationControlFactory } from \"../factory/ValidationControlFactory\";\r\nimport { UIHandler } from \"../classes/UIHandler\";\r\nimport { IUtil } from \"../interfaces/IUtil\";\r\nimport { Util } from \"../utils/util\";\r\nimport { Form } from \"../classes/Form\";\r\nimport { FormService } from \"../services/FormService\";\r\n\r\nconst container = new Container();\r\n\r\ncontainer\r\n    .bind<IUtil>(TYPES.Utils)\r\n    .to(Util)\r\n    .inRequestScope();\r\ncontainer\r\n    .bind<ILogger>(TYPES.Logger)\r\n    .to(Logger)\r\n    .inSingletonScope();\r\ncontainer\r\n    .bind<IEventEmitter<IAppEvents>>(TYPES.EventEmitter)\r\n    .to(EventEmitter<IAppEvents>)\r\n    .inRequestScope();\r\ncontainer\r\n    .bind<IFormService>(TYPES.FormService)\r\n    .to(FormService)\r\n    .inSingletonScope();\r\ncontainer\r\n    .bind<IEventService>(TYPES.EventService)\r\n    .to(EventService)\r\n    .inSingletonScope();\r\ncontainer\r\n    .bind<IStateManager>(TYPES.StateManager)\r\n    .to(StateManager)\r\n    .inSingletonScope();\r\ncontainer\r\n    .bind<IDecoratedLogger>(TYPES.DebuggingLogger)\r\n    .to(DebuggingLogger)\r\n    .inRequestScope();\r\ncontainer\r\n    .bind<IInitializer>(TYPES.Initializer)\r\n    .to(Initializer)\r\n    .inSingletonScope();\r\ncontainer\r\n    .bind<IForm>(TYPES.Form)\r\n    .to(Form)\r\n    .inSingletonScope();\r\ncontainer\r\n    .bind<IFormManager>(TYPES.FormManager)\r\n    .to(FormManager)\r\n    .inSingletonScope();\r\ncontainer\r\n    .bind<IFormParser>(TYPES.FormParser)\r\n    .to(FormParser)\r\n    .inRequestScope();\r\ncontainer\r\n    .bind<IFormFactory>(TYPES.FormFactory)\r\n    .to(FormFactory)\r\n    .inSingletonScope();\r\ncontainer\r\n    .bind<IObservableCollection<IForm>>(TYPES.ObservableFormsCollection)\r\n    .to(ObservableCollection<IForm>)\r\n    .inSingletonScope();\r\ncontainer\r\n    .bind<IDebouncerManager>(TYPES.DebouncerManager)\r\n    .to(DebouncerManager)\r\n    .inSingletonScope();\r\ncontainer\r\n    .bind<IDebouncerFactory>(TYPES.DebouncerFactory)\r\n    .to(DebouncerFactory)\r\n    .inSingletonScope();\r\ncontainer\r\n    .bind<IValidationService>(TYPES.ValidationService)\r\n    .to(ValidationService)\r\n    .inSingletonScope();\r\ncontainer\r\n    .bind<IValidationControlFactory>(TYPES.ValidationControlFactory)\r\n    .to(ValidationControlFactory)\r\n    .inSingletonScope();\r\ncontainer\r\n    .bind<IUIHandler>(TYPES.UIHandler)\r\n    .to(UIHandler)\r\n    .inRequestScope();\r\n\r\nexport { container };\r\n","import \"reflect-metadata\";\r\nimport { IDecoratedLogger, IFormManager, IInitializer, IOptions, ISubmitHandler } from \"./interfaces\";\r\nimport { container } from \"./di/container-config\";\r\nimport { TYPES } from \"./di/container-types\";\r\n\r\n/**\r\n * UnobtrusiveValidation class provides a central point of control for form validation in an application.\r\n * It manages form validation settings and handlers, and coordinates with other components.\r\n */\r\nexport default class UnobtrusiveValidation {\r\n    private static _currentInstance: UnobtrusiveValidation | null = null;\r\n    private pendingSubmitHandlers: Record<string, ISubmitHandler> = {};\r\n    private _options: IOptions;\r\n    private _logger: IDecoratedLogger | undefined;\r\n    private _initializer: IInitializer | undefined;\r\n    private _initialized: boolean = false;\r\n    private _formManager: IFormManager | undefined;\r\n    private static defaultOptions: IOptions = {\r\n        debug: false,\r\n        autoInit: true,\r\n        logLevel: \"info\",\r\n        useDefaultFormSubmitter: true\r\n    };\r\n\r\n    /**\r\n     * Constructs an instance of UnobtrusiveValidation with specified options.\r\n     * @param {Partial<IOptions>} options - Options for validation configuration.\r\n     */\r\n    constructor(options: Partial<IOptions>) {\r\n        this._options = { ...UnobtrusiveValidation.defaultOptions, ...options };\r\n    }\r\n\r\n    /**\r\n     * Initializes the validation system. Binds options to the container and initializes other components.\r\n     * @param {boolean} force - Flag to force re-initialization.\r\n     */\r\n    async init(force = false): Promise<void> {\r\n        if (this._initialized && !force) {\r\n            this._logger\r\n                ?.getLogger()\r\n                .info(\"UnobtrusiveValidation already initialized, skipping...\");\r\n            return;\r\n        }\r\n\r\n        this._initialized = true;\r\n\r\n        // Contaianer is already has options bound, unbind them\r\n        if (container.isBound(TYPES.Options)) {\r\n            container.unbind(TYPES.Options);\r\n        }\r\n        // Bind the options to the container\r\n        container.bind<IOptions>(TYPES.Options).toConstantValue(this._options);\r\n\r\n        // Get the logger from the container\r\n        this._logger = container.get<IDecoratedLogger>(TYPES.DebuggingLogger);\r\n\r\n        // Get the initializer from the container\r\n        this._initializer = container.get<IInitializer>(TYPES.Initializer);\r\n\r\n\r\n        // Initialize the initializer\r\n\r\n        await this._initializer.init();\r\n    }\r\n\r\n    /**\r\n     * Retrieves the current instance of UnobtrusiveValidation, creating it if it doesn't exist.\r\n     * @param {Partial<IOptions>} options - Options to configure the instance.\r\n     * @returns {Promise<UnobtrusiveValidation>} The current instance of UnobtrusiveValidation.\r\n     */\r\n    static async getInstance(options: Partial<IOptions> = {}): Promise<UnobtrusiveValidation> {\r\n        const effectiveOptions =\r\n            Object.keys(options).length === 0\r\n                ? UnobtrusiveValidation.defaultOptions\r\n                : { ...UnobtrusiveValidation.defaultOptions, ...options };\r\n\r\n        if (!this._currentInstance) {\r\n            this._currentInstance = new UnobtrusiveValidation(effectiveOptions);\r\n        } else {\r\n            this._currentInstance.configure(effectiveOptions);\r\n        }\r\n\r\n        // Perform initialization based on the autoInit option\r\n        if (effectiveOptions.autoInit && !this._currentInstance._initialized) {\r\n            await this._currentInstance.init();\r\n        }\r\n\r\n        return this._currentInstance;\r\n    }\r\n\r\n    /**\r\n     * Sets a custom submit handler for a form.\r\n     * @param {string} formName - The name of the form.\r\n     * @param {ISubmitHandler} handler - The custom submit handler function.\r\n     */\r\n    async setSubmitHandler(formName: string, handler: ISubmitHandler): Promise<void> {\r\n        if (!this._initializer) {\r\n            this._logger?.getLogger().error(\"Initializer is not available\");\r\n            return;\r\n        }\r\n\r\n        await this._initializer.setSubmitHandler(formName, handler);\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * Configures the instance with new options.\r\n     * @param {Partial<IOptions>} options - New options to apply.\r\n     */\r\n    private configure(options: Partial<IOptions>): void {\r\n        // First, check if options actually need updating to prevent unnecessary re-initialization.\r\n        const optionsChanged = Object.keys(options).some(\r\n            (key) => this._options[key] !== options[key]\r\n        );\r\n        if (!optionsChanged) {\r\n            return; // No changes, so no need to re-initialize.\r\n        }\r\n\r\n        // Update the internal options with the new settings.\r\n        this._options = { ...this._options, ...options };\r\n\r\n        // check for specific options that require re-initialization.\r\n        if (options.autoInit !== undefined) {\r\n            if (options.autoInit) {\r\n                // Call the init method to re-initialize.\r\n                this.init().catch((err) =>\r\n                    this._logger?.getLogger().error(\"Initialization failed\", err)\r\n                );\r\n            } else {\r\n                // Handle the case where autoInit is false, such as cleaning up resources.\r\n                this.deinit().catch((err) =>\r\n                    this._logger?.getLogger().error(\"De-initialization failed\", err)\r\n                );\r\n            }\r\n        }\r\n\r\n        // Other options can be handled here as well if they require special logic when changed.\r\n    }\r\n    /**\r\n     * De-initializes the UnobtrusiveValidation instance.\r\n     */\r\n    async deinit(): Promise<void> {\r\n        // De-initialization logic here\r\n        // Nothing to do here for now\r\n    }\r\n}\r\n"],"names":["root","factory","exports","module","define","amd","this","definition","noop","undefinedType","isIE","window","navigator","test","userAgent","logMethods","bindMethod","obj","methodName","method","bind","Function","prototype","call","e","apply","arguments","traceForIE","console","log","trace","replaceLoggingMethods","level","loggerName","i","length","methodFactory","debug","enableLoggingWhenConsoleArrives","defaultMethodFactory","undefined","realMethod","Logger","name","defaultLevel","currentLevel","self","storageKey","getPersistedLevel","storedLevel","localStorage","ignore","cookie","document","location","indexOf","encodeURIComponent","exec","slice","levels","getLevel","setLevel","persist","toUpperCase","SILENT","levelNum","levelName","persistLevelIfPossible","setDefaultLevel","resetLevel","removeItem","clearPersistedLevel","enableAll","TRACE","disableAll","initialLevel","defaultLogger","_loggersByName","getLogger","TypeError","logger","_log","noConflict","getLoggers","Reflect","g","exporter","makeExporter","target","previous","key","value","Object","defineProperty","configurable","writable","hasOwn","hasOwnProperty","supportsSymbol","Symbol","toPrimitiveSymbol","toPrimitive","iteratorSymbol","iterator","supportsCreate","create","supportsProto","__proto__","Array","downLevel","HashMap","MakeDictionary","has","map","get","functionPrototype","getPrototypeOf","usePolyfill","process","env","_Map","Map","entries","cacheSentinel","arraySentinel","MapIterator","keys","values","selector","_index","_keys","_values","_selector","next","index","result","done","throw","error","return","_cacheKey","_cacheIndex","enumerable","_find","set","delete","size","clear","getKey","getValue","getEntry","insert","push","_","CreateMapPolyfill","_Set","Set","_map","add","Metadata","WeakMap","UUID_SIZE","rootKey","CreateUniqueKey","_key","table","GetOrCreateWeakMapTable","CreateUUID","FillRandomBytes","buffer","Math","random","data","Uint8Array","crypto","getRandomValues","msCrypto","offset","byte","toString","toLowerCase","CreateWeakMapPolyfill","GetOrCreateMetadataMap","O","P","Create","targetMetadata","IsUndefined","metadataMap","OrdinaryHasMetadata","MetadataKey","OrdinaryHasOwnMetadata","parent","OrdinaryGetPrototypeOf","IsNull","OrdinaryGetMetadata","OrdinaryGetOwnMetadata","OrdinaryDefineOwnMetadata","MetadataValue","OrdinaryMetadataKeys","ownKeys","OrdinaryOwnMetadataKeys","parentKeys","_i","ownKeys_1","_a","parentKeys_1","GetMethod","IsCallable","IsObject","GetIterator","k","IteratorStep","nextValue","IteratorClose","Type","x","ToPrimitive","input","PreferredType","hint","exoticToPrim","toString_1","valueOf","toString_2","OrdinaryToPrimitive","ToPropertyKey","argument","ToString","IsArray","isArray","IsConstructor","V","func","f","proto","prototypeProto","constructor","__","decorators","propertyKey","attributes","decorated","decorator","DecorateConstructor","descriptor","DecorateProperty","metadataKey","metadataValue","IsPropertyKey","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","d","o","globalThis","prop","BindingScopeEnum","BindingTypeEnum","ConstantValue","Constructor","DynamicValue","Factory","Instance","Invalid","Provider","TargetTypeEnum","ClassProperty","ConstructorArgument","Variable","idCounter","id","Binding","serviceIdentifier","scope","activated","type","constraint","request","implementationType","cache","provider","onActivation","onDeactivation","dynamicValue","clone","DUPLICATED_METADATA","NULL_ARGUMENT","KEY_NOT_FOUND","AMBIGUOUS_MATCH","NOT_REGISTERED","MISSING_INJECTABLE_ANNOTATION","MISSING_INJECT_ANNOTATION","CIRCULAR_DEPENDENCY","INVALID_DECORATOR_OPERATION","ARGUMENTS_LENGTH_MISMATCH","ON_DEACTIVATION_ERROR","clazz","errorMessage","STACK_OVERFLOW","NAMED_TAG","NAME_TAG","UNMANAGED_TAG","OPTIONAL_TAG","INJECT_TAG","MULTI_INJECT_TAG","TAGGED","TAGGED_PROP","PARAM_TYPES","POST_CONSTRUCT","PRE_DESTROY","NON_CUSTOM_TAG_KEYS","MetadataReader","getConstructorMetadata","constructorFunc","compilerGeneratedMetadata","getMetadata","userGeneratedMetadata","getPropertiesMetadata","BindingCount","MultipleBindingsAvailable","NoBindingsAvailable","OnlyOneBindingAvailable","isStackOverflowExeption","RangeError","message","getServiceIdentifierAsString","listRegisteredBindingsForServiceIdentifier","container","getBindings","registeredBindingsList","registeredBindings","forEach","binding","getFunctionName","metaData","alreadyDependencyChain","parentRequest","circularDependencyToException","childRequests","childRequest","services","_createStringArr","req","reverse","join","dependencyChainToString","Error","name_1","match","Context","addPlan","plan","setCurrentRequest","currentRequest","String","Plan","parentContext","rootRequest","LazyServiceIdentifier","cb","_cb","unwrap","QueryableString","str","startsWith","searchString","endsWith","reverseString","reverseSearchString","split","contains","equals","compareString","Target","identifier","namedOrTagged","queryableName","metadata","metadataItem","hasTag","matchesArray","matchesTag","isNamed","isTagged","some","every","isOptional","getNamedTag","filter","m","getCustomTags","matchesNamedTag","_this","__spreadArray","to","from","pack","ar","l","concat","getTargets","metadataReader","constructorName","isBaseClass","serviceIdentifiers","constructorArgsMetadata","hasUserDeclaredUnknownInjections","hasOptionalParameters","constructorTargets","iterations","targets","getConstructorArgsAsTarget","getConstructorArgsAsTargets","propertyTargets","getClassPropsAsTargets","formatTargetMetadata","isManaged","unmanaged","inject","multiInject","targetName","_getServiceIdentifierForProperty","propertyName","className","msg","classPropsMetadata","symbolKeys","getOwnPropertySymbols","keys_1","baseConstructor","baseTargets","getBaseClassDependencyCount","t","unmanagedCount","dependencyCount","targetMetadataMap","Request","bindings","requestScope","addChildRequest","child","getBindingDictionary","cntnr","_bindingDictionary","_getActiveBindings","avoidConstraints","context","activeBindings","options","autoBindInjectable","toSelf","serviceIdentifierString","m_1","namedTag","otherTags","tag","listMetadataForTarget","_validateActiveBindingCount","_createSubRequests","thePlan","subChildRequest","dependencies","getDependencies","skipBaseClassChecks","baseClassDependencyCount","dependency","bindingDictionary","hasKey","isPromise","object","then","isPromiseOrContainsPromise","FactoryType","_saveAsyncResultToSingletonScope","asyncResult","thisArg","_arguments","generator","ex_1","body","y","label","sent","trys","ops","verb","n","v","op","pop","step","__generator","Promise","resolve","reject","fulfilled","rejected","__assign","assign","s","p","createInstanceWithInjections","args","instance","constr","constructorInjections","propertyRequests","r","property","injection","propertyInjections","possiblyWaitInjections","possiblePromiseinjections","injections","possiblePromiseinjections_1","all","_getInstanceAfterPostConstruct","postConstructResult","_b","hasMetadata","_postConstruct","_resolveRequest","targetIsAnArray","targetParentIsNotAnArray","_f","_resolveBinding","_resolveFactoryFromBinding","factoryDetails","factoryType","getFactoryDetails","fn","errorCallback","tryAndThrowErrorIfStackOverflow","_getResolvedFromBinding","boundValue","serviceIdentifierAsString","ensureFullyBound","resolveRequest","scopeErrorMessage","_throwIfHandlingDeactivation","_validateInstanceResolution","resolved","reduce","resolvedRequests","isAsync","_resolveRequests","createInstanceWithInjectionsArg","createInstanceWithInjectionsAsync","_createInstance","resolvedResult","resolveInstance","_resolveInScope","resolveFromBinding","tryGetFromScope","_saveToSingletonScope","_saveToRequestScope","saveToScope","_onActivation","_bindingActivation","containersIterator","_getContainersIterator","containersIteratorResult","context_1","activationsIterator","_getContainerActivationsForService","_activateContainerAsync","_activateContainer","previousResult","activation","resultPromise","activations","_activations","containersStack","nextContainer","traverseAncerstors","taggedConstraint","namedConstraint","typeConstraint","BindingWhenSyntax","_binding","when","BindingOnSyntax","whenTargetNamed","whenTargetIsDefault","whenTargetTagged","whenInjectedInto","whenParentNamed","whenParentTagged","whenAnyAncestorIs","ancestor","whenNoAncestorIs","whenAnyAncestorNamed","whenNoAncestorNamed","whenAnyAncestorTagged","whenNoAncestorTagged","whenAnyAncestorMatches","whenNoAncestorMatches","handler","BindingWhenOnSyntax","_bindingWhenSyntax","_bindingOnSyntax","BindingInSyntax","inRequestScope","inSingletonScope","inTransientScope","BindingInWhenOnSyntax","_bindingInSyntax","BindingToSyntax","toConstantValue","toDynamicValue","toConstructor","toFactory","toFunction","bindingWhenOnSyntax","toAutoFactory","toAutoNamedFactory","named","getNamed","toProvider","toService","service","ContainerSnapshot","of","middleware","deactivations","moduleActivationStore","snapshot","Lookup","getMap","entry","remove","removeIntersection","lookup","traverse","lookupActivations","filteredValues","lookupValue","moduleActivation","_setValue","removeByCondition","condition","removals","updatedEntries","entries_1","copy","b","ModuleActivationStore","handlers","_getEmptyHandlersStore","addDeactivation","_getModuleActivationHandlers","onDeactivations","addActivation","onActivations","handlersStore","moduleActivationHandlers","Container","containerOptions","defaultScope","_snapshots","_middleware","_deactivations","_metadataReader","_moduleActivationStore","merge","container1","container2","containers","targetContainers","targetContainer","targetBindingDictionary","destination","load","modules","getHelpers","_getContainerModuleHelpersFactory","modules_1","currentModule","containerModuleHelpers","registry","bindFunction","unbindFunction","isboundFunction","rebindFunction","unbindAsyncFunction","onActivationFunction","onDeactivationFunction","loadAsync","modules_2","unload","_removeModuleBindings","_deactivateSingletons","_removeModuleHandlers","unloadAsync","modules_3","module_1","_deactivateSingletonsAsync","rebind","unbind","rebindAsync","unbindAsync","_removeServiceFromDictionary","unbindAll","unbindAllAsync","promises","isBound","bound","isCurrentBound","isBoundNamed","isBoundTagged","request_1","createMockRequest","restore","createChild","applyMiddleware","middlewares","initial","_planAndResolve","prev","curr","applyCustomMetadataReader","getArgs","_getNotAllArgs","_getButThrowIfAsync","getAsync","_get","getTagged","getTaggedAsync","getNamedAsync","getAll","_getAllArgs","getAllAsync","_getAll","getAllTagged","getAllTaggedAsync","getAllNamed","getAllNamedAsync","constructorFunction","_preDestroy","moduleActivationsHandlers","_deactivate","_deactivateContainer","_handleDeactivationError","_propagateContainerDeactivationThenBindingAndPreDestroyAsync","propagateDeactivationResult","_propagateContainerDeactivationThenBindingAndPreDestroy","ex","deactivationsIterator","deactivation","_deactivateContainerAsync","setModuleId","bindingToSyntax","getRebindFunction","getOnActivationFunction","getOnDeactivationFunction","mId","planAndResolveArgs","contextInterceptor","targetType","middlewareResult","isMultiInject","injectMetadata","tagMetadata","_createTarget","_deactivateIfSingleton","bindings_1","_bindingDeactivationAndPreDestroy","_bindingDeactivationAndPreDestroyAsync","TYPES","Options","for","Utils","FormService","EventService","StateManager","DebouncerManager","EventEmitter","DebuggingLogger","Initializer","DebouncerFactory","Form","FormManager","FormFactory","FormParser","ObservableFormsCollection","ValidationService","ValidationControlFactory","UIHandler","injectable","hasOwnMetadata","types","defineMetadata","INFO","info","warn","listeners","on","event","listener","off","callbackIndex","splice","emit","_tagParameterOrProperty","annotationTarget","metadatas","duplicate","array","seenValues","array_1","getFirstArrayDuplicate","md","_ensureNoMetadataKeyDuplicates","paramsOrPropertiesMetadata","paramOrPropertyMetadata","_loop_1","paramOrPropertyMetadata_1","createTaggedDecorator","targetKey","indexOrPropertyDescriptor","parameterName","parameterIndex","_throwIfMethodParameter","tagParameter","tagProperty","_options","_observableFormsCollection","_debounceFactory","_validationService","_stateManager","_debouncerManager","_logger","eventListenersMap","dirtyMap","debouncers","addObserver","notify","change","changeType","item","form","formElement","cleanupResourcesForForm","setupHandlers","addListeners","controls","elements","element","HTMLInputElement","HTMLTextAreaElement","HTMLSelectElement","inputEventHandler","createInputHandler","blurEventHandler","createBlurHandler","focusEventHandler","createFocusHandler","submitEventHandler","createSubmitHandler","eventListeners","eventType","addEventListener","async","preventDefault","isValid","validateForm","submitHandler","useDefaultFormSubmitter","submit","debounceTime","control","makeControlInteracted","hasValueChanged","makeControlDirty","clearControlValidatedState","validateControl","validateAndHandleControl","debouncedValidate","hasInitialValue","setInitialValue","focusEvent","relatedTarget","isControlDirty","isControlInteracted","isControlValidated","getDebouncerForControl","debounce","removeListeners","domEventType","removeEventListener","namesToClear","isNamedControlElement","clearControlsDirtyState","clearDebouncersForControls","clearControlDirtyState","setControlValidated","validatedMap","interactedMap","initialValues","controlName","controlNames","clearControlsValidatedState","currentValue","includes","clearControlInteractedState","clearControlsInteractedState","loggerProxy","originalProperty","originalMethod","Proxy","_formService","mutationObserver","init","createForms","startObserving","forms","querySelectorAll","formsArray","addForm","disconnect","MutationObserver","mutationsList","handleFormMutations","observe","childList","subtree","stopObserving","mutation","directForms","addedNodes","node","HTMLFormElement","nestedForms","HTMLElement","flatMap","_formManager","_eventService","readyState","onDOMLoaded","setSubmitHandler","formName","Result","isSuccess","isFaulted","valueOrError","ifFail","defaultValue","ifFailWithFunction","ifSucc","succ","fail","newValue","mapAsync","other","handleError","handleSuccess","rulePriorities","parse","validationRules","inputs","rules","getValidationRules","rulesWithParams","attr","ruleType","paramName","params","priority","sort","a","getValidationInformation","parentNode","action","errorMsg","outerHTML","ObservableCollection","items","observers","observer","removeObserver","addItem","notifyObservers","addItems","findItem","conditionFunc","find","removeItems","itemsToRemove","itemsToRemoveSet","getItems","clearDebouncersForControl","debouncer","cancel","Debouncer","timeoutId","waitMilliseconds","clearTimeout","setTimeout","getTimeoutId","_formParser","_validationControlFactory","_uiHandler","validationPromises","el","catch","isFormValid","setAttribute","HTMLButtonElement","validationControl","getValidationInformationResults","getValidationRulesResult","validationResults","validate","validationResult","updateValidationMessage","ValidationControl","isInteracted","isInteractedWith","trim","errorMessages","rule","ruleResult","applyRule","validateRequired","minLength","min","parseInt","maxLength","max","Infinity","validateLength","compareToControlName","replace","validateEqualTo","pattern","validateRegex","createValidationResult","validateRange","emailPattern","source","phonePattern","urlPattern","validateCreditCard","url","additionalfields","validateRemote","validateFileExtensions","extensions","compareControl","querySelector","RegExp","numericValue","parseFloat","isValidCreditCard","fields","validationUrl","fieldsArray","field","fieldName","additionalFieldElement","response","fetch","ok","status","json","allowedExtensions","extensionsArray","ext","fileExtension","lastIndexOf","numericOnly","sum","shouldDouble","digit","charAt","hideValidationMessage","showValidationMessage","parentElement","validationMessageElement","getValidationMessageElement","textContent","classList","removeAttribute","Util","generateGuid","s4","floor","substring","_formsCollection","_formFactory","_eventEmitter","submitHandlers","checkForm","CustomEvent","detail","dispatchEvent","createFormResults","resultValue","getFormByName","UnobtrusiveValidation","static","pendingSubmitHandlers","_initializer","_initialized","autoInit","logLevel","defaultOptions","force","getInstance","effectiveOptions","_currentInstance","configure","err","deinit"],"sourceRoot":""}